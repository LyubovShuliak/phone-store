{"version":3,"sources":["store/reducers/appState.ts","store/reducers/phones.ts","store/reducers/hotPricePhones.ts","store/reducers/favoritesDevice.ts","store/reducers/cartDeviceList.ts","store/reducers/tablets.ts","store/reducers/index.ts","constants/actions.ts","store/index.ts","constants/defaultConstants.ts","api/request.ts","store/actions/phones.ts","store/actions/hotPricePhones.ts","store/actions/favoritesDevice.ts","store/actions/cartDeviceList.ts","store/actions/tablets.ts","components/Header/MobileHeader/MobileHeader.tsx","components/Header/DesktopHeader/DesktopHeader.tsx","components/Header/Header.tsx","components/SmallNavigation/SmallNavigation.tsx","components/GoBack/GoBack.tsx","components/PhoneCardFull/PhoneCardFull.tsx","components/DeviceCardItem/DeviceCardItem.tsx","components/SliderDevice/SliderButtonts.tsx","components/Preloader/Preloader.tsx","components/SliderDevice/SliderDevice.tsx","components/SliderImages/SliderImages.tsx","components/Footer/Footer.tsx","components/ShopCategory/ShopCategory.tsx","hooks/useHTTP.hook.ts","pages/MainPage/MainPage.tsx","components/DeviceCardList/DeviceCardList.tsx","components/Select/Select.tsx","components/Pagination/Pagination.tsx","pages/PhonesPage/PhonesPage.tsx","pages/FavoritesPage/FavoritePage.tsx","pages/CartPage/CartPage.tsx","pages/TabletsPage/TabletsPage.tsx","components/TabletCardFull/TabletCardFull.tsx","pages/NotFoundPage/NotFoundPage.tsx","App.tsx","routes.tsx","store/actions/appState.ts","index.tsx"],"names":["initialState","deviceScreen","name","value","phoneList","error","loading","phoneListState","pages","currentPage","onPage","visible","sorted","currentSortedValue","currentModel","hotPricePhoneList","deviceList","tabletList","tabletListState","rootReducer","combineReducers","appState","state","action","type","payload","phonesState","hotPricePhones","favoritesDevice","cartDeviceList","tabletsState","createStore","applyMiddleware","thunk","defaultConstatnts","request","path","a","fetch","response","ok","json","console","log","phoneLoading","phoneSuccess","phoneError","loadPhones","dispatch","phones","modificatedPhoneList","map","phone","modificatedAvailabelDevices","availabelDevices","device","images","other","unshift","main","sortedPoneList","sort","b","price","current","slice","phoneItemSuccess","getPhoneByModelName","model_name","hotPricePhoneLoading","hotPricePhoneSuccess","hotPricePhoneFailed","loadHotPricePhones","setFavoriteDevices","toggleFavoriteDevice","store","getState","duplicate","find","deviceItem","_id","newFavoriteList","listWithoutDuplicate","filter","localStorage","setItem","JSON","stringify","setCartDeviceList","toggleCartDevice","newCartList","tabletsLoading","tabletsSuccess","tabletsError","loadTablets","tablets","tablet","tabletItemSuccess","getTabletByModelName","connect","favoriteDevices","location","useLocation","history","useHistory","className","src","style","width","onClick","event","document","querySelector","classList","toggle","pathname","push","to","position","length","fontSize","color","useEffect","top","right","alt","ownProps","SmallNavigation","params","item","index","arr","key","title","link","GoBack","goBack","id","props","useState","setDevice","addToFavotireList","setAddToFavoriteList","addToCartList","setAddToCartList","useParams","favorite","cart","currentDevice","currentRAM","availableRAM","currentColor","availabelColor","bigImage","image","newDevice","backgroundColor","newDeviceIndex","findIndex","model","ram","updatedDevice","old","cartDevice","routePosition","deviceInfo","camera","cell","processor","resolution","screen","zoom","RAM","about","abuot","description","Object","entries","startClick","setStartClick","letPress","setLetPress","onMouseDown","Date","onMouseUp","onMouseMove","getTime","stopPropagation","SampleNextArrow","currentSlide","slideCount","slickSliderRef","edgeSlide","breakpoint","responsive","currentBreakpoint","settings","slidesToShow","extraStyle","classNames","join","SamplePrevArrow","Preloader","height","borderWidth","wrapperWidth","wrapperHeight","border","borderColor","SliderDevice","useRef","dots","infinite","swipeToSlide","speed","initialSlide","nextArrow","prevArrow","ref","SliderImages","appendDots","dot","children","imageList","useHTTP","setLoading","setError","getReguest","useCallback","cleanError","hotPricePhonesLoading","hotPricePhonesFailed","hotPricePhonesList","getNewModelPhones","loadingNewModelPhones","errorNewModelPhones","getHotPricePhones","loadingHotPricePhones","errorHotPricePhones","setImageList","newModelPhones","setNewModelPhones","setHotPricePhones","loadNewModels","Select","itemList","defaultSelectIndex","selectedItem","setSelectedItem","openMenu","setOpenMenu","selectRef","addEventListener","contains","target","transform","selectItem","Pagination","structureList","setStructureList","leftSpace","rightSpace","paginationList","setPaginationList","first","last","limit","setLimit","updatePagination","page","data","leftStep","rightStep","i","luft","newValue","pop","currentVissible","list","elem","Number","selectList","selectitemsOnPageList","phoneState","setPhoneListState","phoneLoadSuccss","searchField","setSearchField","selectedSortValue","setSelectedSortValue","selectedItemsOnPAgeValue","setSelectedItemsOnPageValue","loaded","Array","from","Math","ceil","_","handleSort","sortedList","sortedVisible","handlePageStructure","marginLeft","display","alignItems","left","onChange","filtered","toLocaleLowerCase","includes","chartDeviceList","checkoutDeviceList","setCheckoutDeviceList","totalSum","setTotalSum","deletedItemsId","setDeletedItemsId","every","priceNumber","count","totalSuma","mathcedDevice","removeDeviceFromList","newCheckoutDevice","minusDevice","plusDevice","margin","setTabletListState","keys","NotFoundPage","App","routes","exact","checkDeviceSize","screenWidth","currentTarget","innerWidth","window","favoriteDeviceLocalList","getItem","parse","cartDeviceLocalList","removeEventListener","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.e210354a.chunk.js","sourcesContent":["import { DEVICE_SCREEN } from '../../constants/actions'\nimport { AppStateInterface, AppStateActionTypes } from '../../interfaces/appStateInterface';\n\nconst initialState: AppStateInterface = {\n    deviceScreen: {\n        name: null,\n        value: null\n    }\n};\n\n\nexport const appState = (state = initialState, action: AppStateActionTypes) => {\n    switch (action.type) {\n        case DEVICE_SCREEN:\n            return { ...state, deviceScreen: action.payload }\n\n        default:\n            return state\n    }\n}\n","import {\n    PHONE_LIST_LOADING,\n    PHONE_LIST_SUCCESS,\n    PHONE_LIST_ERROR,\n    PHONE_LIST_STATE,\n    PHONE_ITEM_SUCCESS\n} from '../../constants/actions'\nimport { phoneState } from '../../interfaces/phonesInterfaces';\nimport { AppStateActionTypes } from '../../interfaces/appStateInterface';\n\n\n\nconst initialState: phoneState = {\n    phoneList: [],\n    error: null,\n    loading: null,\n    phoneListState: {\n        pages: 0,\n        currentPage: 0,\n        onPage: 0,\n        visible: [],\n        sorted: [],\n        currentSortedValue: '',\n    },\n    currentModel: null\n};\n\n\nexport const phonesState = (state = initialState, action: AppStateActionTypes) => {\n    switch (action.type) {\n        case PHONE_LIST_LOADING:\n            return { ...state, loading: action.loading }\n\n        case PHONE_LIST_SUCCESS:\n            return { ...state, phoneList: action.phoneList }\n\n        case PHONE_LIST_ERROR:\n            return { ...state, error: action.error }\n\n        case PHONE_LIST_STATE:\n            return { ...state, phoneListState: action.phoneListState }\n\n        case PHONE_ITEM_SUCCESS:\n            return { ...state, currentModel: action.currentModel }\n\n        default:\n            return state\n    }\n}\n","import {\n    PHONE_HOT_PRICE_SUCCESS,\n    REQUEST_FAILED,\n    REQUEST_LOADING\n} from '../../constants/actions';\n\nimport { AppStateActionTypes } from '../../interfaces/appStateInterface';\nimport { hotPriceState } from '../../interfaces/phonesInterfaces';\n\nconst initialState: hotPriceState = {\n    loading: null,\n    error: null,\n    hotPricePhoneList: [],\n}\n\n\nexport const hotPricePhones = (state = initialState, action: AppStateActionTypes) => {\n    switch (action.type) {\n        case REQUEST_LOADING:\n            return {\n                ...state, loading: action.loading\n            }\n        case REQUEST_FAILED:\n            return {\n                ...state, error: action.error\n            }\n        case PHONE_HOT_PRICE_SUCCESS:\n            return {\n                ...state, hotPricePhoneList: action.hotPricePhoneList\n            }\n        default:\n            return state\n    }\n}","import { SET_FAVORITE_DEVICES } from '../../constants/actions'\nimport { AppStateActionTypes } from '../../interfaces/appStateInterface';\nimport {favoriteDeviceState} from '../../interfaces/favoriteDevice'\n\nconst initialState: favoriteDeviceState = {\n    deviceList: []\n};\n\n\nexport const favoritesDevice = (state = initialState, action: AppStateActionTypes) => {\n    switch (action.type) {\n        case SET_FAVORITE_DEVICES:\n            return { ...state, deviceList: action.deviceList }\n\n        default:\n            return state\n    }\n}\n","import { SET_CART_DEVICE_LIST } from '../../constants/actions'\nimport { AppStateActionTypes } from '../../interfaces/appStateInterface';\nimport {cartDeviceListState} from '../../interfaces/cartDeviceList'\n\nconst initialState: cartDeviceListState = {\n    deviceList: []\n};\n\n\nexport const cartDeviceList = (state = initialState, action: AppStateActionTypes) => {\n    switch (action.type) {\n        case SET_CART_DEVICE_LIST:\n            return { ...state, deviceList: action.deviceList }\n\n        default:\n            return state\n    }\n}\n","import {\n    TABLET_LIST_LOADING,\n    TABLET_LIST_SUCCESS,\n    TABLET_LIST_ERROR,\n    TABLET_LIST_STATE,\n    TABLET_ITEM_SUCCESS\n} from '../../constants/actions'\nimport { AppStateActionTypes } from '../../interfaces/appStateInterface';\nimport { tabletState } from '../../interfaces/tabletStateInterface';\n\n\n\nconst initialState: tabletState = {\n    tabletList: [],\n    error: null,\n    loading: null,\n    tabletListState: {\n        pages: 0,\n        currentPage: 0,\n        onPage: 0,\n        visible: [],\n        sorted: [],\n        currentSortedValue: '',\n    },\n    currentModel: null\n};\n\n\nexport const tabletsState = (state = initialState, action: AppStateActionTypes) => {\n    switch (action.type) {\n        case TABLET_LIST_LOADING:\n            return { ...state, loading: action.loading }\n\n        case TABLET_LIST_SUCCESS:\n            return { ...state, tabletList: action.tabletList }\n\n        case TABLET_LIST_ERROR:\n            return { ...state, error: action.error }\n\n        case TABLET_LIST_STATE:\n            return { ...state, tabletListState: action.tabletListState }\n\n        case TABLET_ITEM_SUCCESS:\n            return { ...state, currentModel: action.currentModel }\n\n        default:\n            return state\n    }\n}\n","import { combineReducers, Reducer, AnyAction } from 'redux';\nimport { appState } from './appState';\nimport { phonesState } from './phones';\nimport { hotPricePhones } from './hotPricePhones';\nimport { favoritesDevice } from './favoritesDevice';\nimport { cartDeviceList } from './cartDeviceList';\nimport { tabletsState } from './tablets'\n\nimport { AppStateInterface } from '../../interfaces/appStateInterface';\n\n\n// export interface ApplicationState {\n//     appState: AppStateInterface;\n//   }\n\n// export default combineReducers<AppStateInterface, AnyAction>({appState});\n\nexport const rootReducer = combineReducers({\n  appState,\n  phonesState,\n  hotPricePhones,\n  favoritesDevice,\n  cartDeviceList,\n  tabletsState,\n})\n\nexport type RootState = ReturnType<typeof rootReducer>","export const DEVICE_SCREEN = 'DEVICE_SCREEN';\n\nexport const REQUEST_LOADING = 'REQUEST_LOADING';\nexport const REQUEST_FAILED = 'REQUEST_FAILED';\n\nexport const PHONE_LIST_LOADING = 'PHONE_LIST_LOADING';\nexport const PHONE_LIST_ERROR = 'PHONE_LIST_ERROR';\nexport const PHONE_LIST_SUCCESS = 'PHONE_LIST_SUCCESS';\nexport const PHONE_LIST_STATE = 'PHONE_LIST_STATE'\nexport const PHONE_ITEM_SUCCESS = 'PHONE_ITEM_SUCCESS'\n\nexport const TABLET_LIST_LOADING = 'TABLET_LIST_LOADING'\nexport const TABLET_LIST_SUCCESS = 'TABLET_LIST_SUCCESS'\nexport const TABLET_LIST_ERROR = 'TABLET_LIST_ERROR'\nexport const TABLET_LIST_STATE = 'TABLET_LIST_STATE'\nexport const TABLET_ITEM_SUCCESS = 'TABLET_ITEM_SUCCESS'\n\nexport const PHONE_HOT_PRICE_LOADING = 'PHONE_HOT_PRICE_LOADING';\nexport const PHONE_HOT_PRICE_ERROR = 'PHONE_HOT_PRICE_ERROR';\nexport const PHONE_HOT_PRICE_SUCCESS = 'PHONE_HOT_PRICE_SUCCESS';\n\n// export const ADD_FAVORITE_DEVICE = 'ADD_FAVORITE_DEVICE';\nexport const SET_FAVORITE_DEVICES = 'SET_FAVORITE_DEVICES';\n\nexport const SET_CART_DEVICE_LIST = 'SET_CART_DEVICE_LIST'","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport {rootReducer} from './reducers'\n\nexport default createStore(rootReducer, applyMiddleware(thunk))","export const defaultConstatnts = {\n    domain: \"https://phone-store-ts.herokuapp.com\",\n    // domain: \"https://senyateststore.herokuapp.com\",\n    // domain: \"http://localhost:5000\",\n    clientHost: \"http://localhost:3000\"\n}","import { defaultConstatnts } from '../constants/defaultConstants';\n\nexport const request = async (path: string) => {\n    try {\n        const response = await fetch(defaultConstatnts.domain + path);\n\n        if (!response.ok) {\n            throw response\n        }\n\n        const json = await response.json();\n        return json\n    \n    } catch (err) {\n        console.log('error of request', err)\n        throw err\n    }\n\n}\n\nexport const postRequest = async (path: string, data: any) => {\n    try {\n        const response = await fetch(defaultConstatnts.domain + path, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n                // 'Content-Type': 'application/x-www-form-urlencoded',\n              },\n            body: JSON.stringify(data)\n        });\n\n        if (!response.ok) {\n            throw response\n        }\n\n        const json = await response.json();\n        return json\n    \n    } catch (err) {\n        console.log('error of post request', err)\n    }\n\n}","import { ThunkAction } from 'redux-thunk';\nimport { Action } from 'redux'\n\nimport {\n    PHONE_LIST_LOADING,\n    PHONE_LIST_ERROR,\n    PHONE_LIST_SUCCESS,\n    PHONE_LIST_STATE,\n    PHONE_ITEM_SUCCESS\n} from '../../constants/actions';\nimport { request, postRequest } from '../../api/request';\nimport { AppStateActionTypes } from '../../interfaces/appStateInterface';\nimport { RootStateInterface } from '../../interfaces/rootStateInterface';\nimport { phoneCardInterface, phoneListStateType } from '../../interfaces/phonesInterfaces';\nimport { phonesState } from '../reducers/phones';\n\nexport const phoneLoading = (loading: boolean): AppStateActionTypes => ({\n    type: PHONE_LIST_LOADING,\n    loading\n});\n\nexport const phoneSuccess = (phoneList: phoneCardInterface[]): AppStateActionTypes => ({\n    type: PHONE_LIST_SUCCESS,\n    phoneList\n})\n\nexport const phoneError = (error: any): AppStateActionTypes => ({\n    type: PHONE_LIST_ERROR,\n    error\n})\n\nexport const phoneListState = (phoneListState: phoneListStateType): AppStateActionTypes => ({\n    type: PHONE_LIST_STATE,\n    phoneListState\n})\n\nexport const loadPhones = (): ThunkAction<void, RootStateInterface, unknown, Action<string>> => {\n    return async dispatch => {\n        dispatch(phoneLoading(true));\n        try {\n            const phones: phoneCardInterface[] = await request('/api/phone/list');\n\n            // add mainImage ro other imageList, ecause in db they not connected\n            const modificatedPhoneList = phones.map(phone => {\n                const modificatedAvailabelDevices = phone.availabelDevices.map(device => {\n                    device.images.other.unshift(device.images.main);\n                    return device\n                });\n                phone.availabelDevices = modificatedAvailabelDevices\n                return phone\n            });\n\n\n            await dispatch(phoneSuccess(modificatedPhoneList));\n\n            // sorted by cheap price\n            const sortedPoneList = phones.sort((a, b) => +a.price.current.slice(1,) - +b.price.current.slice(1,))\n            await dispatch(phoneListState({\n                pages: 0,\n                currentPage: 0,\n                onPage: 0,\n                visible: sortedPoneList,\n                sorted: sortedPoneList,\n                currentSortedValue: 'cheap'\n            }))\n        } catch (err) {\n            console.log(err);\n            dispatch(phoneError(err));\n        } finally {\n            dispatch(phoneLoading(false));\n        }\n    }\n}\n\nexport const phoneItemSuccess = (currentModel: phoneCardInterface): AppStateActionTypes => ({\n    type: PHONE_ITEM_SUCCESS,\n    currentModel\n})\n\nexport const getPhoneByModelName = (model_name: string): ThunkAction<void, RootStateInterface, unknown, Action<string>> => {\n    return async dispatch => {\n        dispatch(phoneLoading(true));\n        try {\n            const phone: phoneCardInterface = await request(`/api/phone/item/?model_name=${model_name}`);\n\n            // add mainImage ro other imageList, ecause in db they not connected\n            phone.availabelDevices.map(device => {\n                device.images.other.unshift(device.images.main);\n                return device\n            });\n\n            dispatch(phoneItemSuccess(phone))\n\n        } catch (err) {\n            dispatch(phoneError(err));\n        } finally {\n            dispatch(phoneLoading(false));\n        }\n\n    }\n}\n\n","import {\n    PHONE_HOT_PRICE_SUCCESS,\n    REQUEST_FAILED,\n    REQUEST_LOADING\n} from '../../constants/actions';\nimport { ThunkAction } from 'redux-thunk';\nimport { Action } from 'redux'\nimport { request, postRequest } from '../../api/request';\n\nimport { AppStateActionTypes } from '../../interfaces/appStateInterface';\nimport { RootStateInterface } from '../../interfaces/rootStateInterface';\nimport { phoneCardInterface } from '../../interfaces/phonesInterfaces';\n\n\nexport const hotPricePhoneLoading = (loading: boolean): AppStateActionTypes => ({\n    type: REQUEST_LOADING,\n    loading\n});\n\nexport const hotPricePhoneSuccess = (hotPricePhoneList: phoneCardInterface[]): AppStateActionTypes => ({\n    type: PHONE_HOT_PRICE_SUCCESS,\n    hotPricePhoneList\n})\n\nexport const hotPricePhoneFailed = (error: any): AppStateActionTypes => ({\n    type: REQUEST_FAILED,\n    error\n})\n\nexport const loadHotPricePhones = ():ThunkAction<void, RootStateInterface, unknown, Action<string>>=> {\n    return async dispatch => {\n        dispatch(hotPricePhoneLoading(true))\n\n        try {\n            const phones: phoneCardInterface[] = await request(`/api/phone/hot-price`);\n\n            // add mainImage ro other imageList, because in db they not connected\n            const modificatedPhoneList = phones.map(phone => {\n                const modificatedAvailabelDevices = phone.availabelDevices.map(device => {\n                    device.images.other.unshift(device.images.main);\n                    return device\n                });\n                phone.availabelDevices = modificatedAvailabelDevices\n                return phone\n            });\n\n            dispatch(hotPricePhoneSuccess(modificatedPhoneList))\n\n        } catch (err) {\n            dispatch(hotPricePhoneFailed(err));\n        } finally {\n            dispatch(hotPricePhoneLoading(false));\n        }\n    }\n}","import {SET_FAVORITE_DEVICES} from '../../constants/actions';\nimport {AppStateActionTypes, DeviceScreenType} from '../../interfaces/appStateInterface';\nimport {favoriteDevice} from '../../interfaces/favoriteDevice';\nimport { ThunkAction } from 'redux-thunk';\nimport { Action } from 'redux';\n\nimport { RootStateInterface } from '../../interfaces/rootStateInterface';\nimport store from '..';\n\nexport const setFavoriteDevices = (deviceList: any):AppStateActionTypes => ({\n    type: SET_FAVORITE_DEVICES,\n    deviceList\n})\n\n\nexport const toggleFavoriteDevice = (device: any):ThunkAction<void, RootStateInterface, unknown, Action<string>> => {\n    return async dispatch => {\n        const {deviceList} = store.getState().favoritesDevice;\n        \n        const duplicate = deviceList.find((deviceItem: favoriteDevice) => deviceItem._id === device._id);\n        let newFavoriteList = null;\n\n        if (!duplicate) {\n            newFavoriteList = [...deviceList, device]\n        } else {\n            const listWithoutDuplicate = deviceList.filter((deviceItem: favoriteDevice) => deviceItem._id !== device._id);\n            newFavoriteList = listWithoutDuplicate\n        }\n\n        dispatch(setFavoriteDevices(newFavoriteList))\n\n        localStorage.setItem('@favotiteDeviceList', JSON.stringify(newFavoriteList))\n\n    }\n}\n\n// export const setToLocalStorageFavorites = ():ThunkAction<void, RootStateInterface, unknown, Action<string>> => {\n//     return async dispatch => {\n        \n//     }\n// }","import {SET_CART_DEVICE_LIST} from '../../constants/actions';\nimport {AppStateActionTypes, DeviceScreenType} from '../../interfaces/appStateInterface';\nimport {cartDevice} from '../../interfaces/cartDeviceList';\nimport { ThunkAction } from 'redux-thunk';\nimport { Action } from 'redux';\n\nimport { RootStateInterface } from '../../interfaces/rootStateInterface';\nimport store from '..';\n\nexport const setCartDeviceList = (deviceList: any):AppStateActionTypes => ({\n    type: SET_CART_DEVICE_LIST,\n    deviceList\n})\n\n\nexport const toggleCartDevice = (device: cartDevice):ThunkAction<void, RootStateInterface, unknown, Action<string>> => {\n    return async dispatch => {\n        const {deviceList} = store.getState().cartDeviceList\n\n        const duplicate = deviceList.find((deviceItem: cartDevice) => deviceItem._id === device._id);\n        let newCartList = null;\n\n        if (!duplicate) {\n            newCartList = [...deviceList, device]\n        } else {\n            const listWithoutDuplicate = deviceList.filter((deviceItem: cartDevice) => deviceItem._id !== device._id);\n            newCartList = listWithoutDuplicate\n        }\n\n        dispatch(setCartDeviceList(newCartList))\n\n        localStorage.setItem('@cartDeviceList', JSON.stringify(newCartList))\n    }\n}\n","import { ThunkAction } from 'redux-thunk';\nimport { Action } from 'redux'\n\nimport {\n    TABLET_LIST_LOADING,\n    TABLET_LIST_SUCCESS,\n    TABLET_LIST_ERROR,\n    TABLET_LIST_STATE,\n    TABLET_ITEM_SUCCESS\n} from '../../constants/actions';\nimport { request, postRequest } from '../../api/request';\nimport { AppStateActionTypes } from '../../interfaces/appStateInterface';\nimport { RootStateInterface } from '../../interfaces/rootStateInterface';\nimport { phoneCardInterface, phoneListStateType } from '../../interfaces/phonesInterfaces';\nimport { phonesState } from '../reducers/phones';\nimport { tabletCardInterface } from '../../interfaces/tabletStateInterface';\n\nexport const tabletsLoading = (loading: boolean): AppStateActionTypes => ({\n    type: TABLET_LIST_LOADING,\n    loading\n});\n\nexport const tabletsSuccess = (tabletList: tabletCardInterface[]): AppStateActionTypes => ({\n    type: TABLET_LIST_SUCCESS,\n    tabletList\n})\n\nexport const tabletsError = (error: any): AppStateActionTypes => ({\n    type: TABLET_LIST_ERROR,\n    error\n})\n\nexport const tabletListState = (tabletListState: phoneListStateType): AppStateActionTypes => ({\n    type: TABLET_LIST_STATE,\n    tabletListState\n})\n\n\nexport const loadTablets = (): ThunkAction<void, RootStateInterface, unknown, Action<string>> => {\n    return async dispatch => {\n        dispatch(tabletsLoading(true));\n        try {\n            const tablets: tabletCardInterface[] = await request('/api/tablet/list');\n\n            // add mainImage ro other imageList, ecause in db they not connected\n            const modificatedPhoneList = tablets.map(tablet => {\n                const modificatedAvailabelDevices = tablet.availabelDevices.map(device => {\n                    device.images.other.unshift(device.images.main);\n                    return device\n                });\n                tablet.availabelDevices = modificatedAvailabelDevices\n                return tablet\n            });\n\n\n            await dispatch(tabletsSuccess(modificatedPhoneList));\n\n            // sorted by cheap price\n            const sortedPoneList = tablets.sort((a, b) => +a.price.current.slice(1,) - +b.price.current.slice(1,))\n            await dispatch(tabletListState({\n                pages: 0,\n                currentPage: 0,\n                onPage: 0,\n                visible: sortedPoneList,\n                sorted: sortedPoneList,\n                currentSortedValue: 'cheap'\n            }))\n        } catch (err) {\n            console.log(err);\n            dispatch(tabletsError(err));\n        } finally {\n            dispatch(tabletsLoading(false));\n        }\n    }\n}\n\nexport const tabletItemSuccess = (currentModel: tabletCardInterface): AppStateActionTypes => ({\n    type: TABLET_ITEM_SUCCESS,\n    currentModel\n})\n\nexport const getTabletByModelName = (model_name: string): ThunkAction<void, RootStateInterface, unknown, Action<string>> => {\n    return async dispatch => {\n        dispatch(tabletsLoading(true));\n        try {\n            const tablet: tabletCardInterface = await request(`/api/tablet/item/?model_name=${model_name}`);\n            // console.log('tablet item: ', tablet);\n            \n\n            // add mainImage ro other imageList, ecause in db they not connected\n            tablet.availabelDevices.map(device => {\n                device.images.other.unshift(device.images.main);\n                return device\n            });\n\n            dispatch(tabletItemSuccess(tablet))\n\n        } catch (err) {\n            dispatch(tabletsError(err));\n        } finally {\n            dispatch(tabletsLoading(false));\n        }\n\n    }\n}\n\n","import React, { MouseEvent } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, useLocation, useHistory } from 'react-router-dom';\nimport { RootState } from '../../../store/reducers';\n\nimport './MobileHeader.scss';\n\nconst MobileHeader = ({ favoriteDevices, cartDeviceList }: any) => {\n    const location = useLocation()\n    let history = useHistory();\n\n    return (\n        <div className=\"header-navigation-burger__wrapper\">\n            <div className=\"header-navigation-burger__line\">\n                <div className=\"header-nav-burger__logo-wrapper\">\n                    <img src=\"icons/logo.png\" className=\"logo-image\" style={{ width: '100%' }} />\n                </div>\n\n                <div className=\"header-nav-burger__menu-wrapper\">\n                    {/* <button className=\"burger-icon\" onClick={() => {\n                        document.querySelector('.header-nav-burger__nav-wrapper')?.classList.toggle('header-nav-burger__nav-wrapper--active')\n                    }}>X</button> */}\n                    <div className=\"menu-toggle\" onClick={(event: any) => {\n                        document.querySelector('.header-nav-burger__nav-wrapper')?.classList.toggle('header-nav-burger__nav-wrapper--active')\n                        document.querySelector('.menu-toggle')?.classList.toggle('active')\n\n\n                    }}>\n                        <div className=\"hamburger\">\n                            <span></span>\n                            <span></span>\n                            <span></span>\n                        </div>\n                        <div className=\"cross\">\n                            <span></span>\n                            <span></span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <nav className=\"header-nav-burger__nav-wrapper\">\n                <ul className=\"header-nav-burger__item-wrapper\" onClick={() => {\n                    console.log('click');\n\n                }}>\n                    <li className={`header-nav-burger__item ${location.pathname === \"/\" ? \"header-nav-burger__item--active\" : \"\"}`} onClick={() => history.push('/')}>\n                        <Link to=\"/\" className=\"header-nav-burger__link third-title \">home</Link>\n                    </li>\n\n                    <li className={`header-nav-burger__item ${location.pathname === \"/phones\" ? \"header-nav-burger__item--active\" : \"\"}`} onClick={() => history.push('/phones')}>\n                        <Link to=\"/phones\" className=\"header-nav-burger__link third-title \">phones</Link>\n                    </li>\n\n                    <li className={`header-nav-burger__item ${location.pathname === \"/tablets\" ? \"header-nav-burger__item--active\" : \"\"}`} onClick={() => history.push('/tablets')}>\n                        <Link to=\"/tablets\" className=\"header-nav-burger__link third-title \">tablet</Link>\n                    </li>\n\n                    <li className={`header-nav-burger__item ${location.pathname === \"/accessories\" ? \"header-nav-burger__item--active\" : \"\"}`} onClick={() => history.push('/accessories')}>\n                        <Link to=\"/accessories\" className=\"header-nav-burger__link third-title \">accessories</Link>\n                    </li>\n\n                    <li className={`header-nav-burger__item ${location.pathname === \"/favorites\" ? \"header-nav-burger__item--active\" : \"\"}`} onClick={() => history.push('/favorites')}>\n                        <div style={{ width: \"max-conent\", position: \"relative\" }}>\n                            {\n                                favoriteDevices.length ? (\n                                    <div className=\"badge-wrapper badge-wrapper--mobile-header\">\n                                        <div style={{\n                                            fontSize: 11,\n                                            color: '#fff'\n                                        }}>{favoriteDevices.length}</div>\n                                    </div>\n                                ) : null\n                            }\n                            <Link to=\"/favorites\" className=\"header-nav-burger__link third-title \">Favotites</Link>\n                        </div>\n                    </li>\n                    <li className={`header-nav-burger__item ${location.pathname === \"/cart\" ? \"header-nav-burger__item--active\" : \"\"}`} onClick={() => history.push('/cart')}>\n                        <div style={{ width: \"max-conent\", position: \"relative\" }}>\n                            {\n                                favoriteDevices.length ? (\n                                    <div className=\"badge-wrapper badge-wrapper--mobile-header\">\n                                        <div style={{\n                                            fontSize: 11,\n                                            color: '#fff'\n                                        }}>{cartDeviceList.length}</div>\n                                    </div>\n                                ) : null\n                            }\n                            <Link to=\"/cart\" className=\"header-nav-burger__link third-title \">Chart</Link>\n                        </div>\n\n                    </li>\n                </ul>\n            </nav>\n\n        </div>\n    )\n};\n\nconst mapStateToProps = (state: RootState) => ({\n    favoriteDevices: state.favoritesDevice.deviceList,\n    cartDeviceList: state.cartDeviceList.deviceList\n});\n\nconst matDispatchToProps = () => ({\n\n});\n\nexport default connect(mapStateToProps, matDispatchToProps)(MobileHeader);","import React, { FC, useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\n\nimport './DesktopHeader.scss';\nimport { Link, useParams, useLocation, useHistory } from 'react-router-dom';\nimport { RootState } from '../../../store/reducers';\nimport { favoriteDevice } from '../../../interfaces/favoriteDevice';\nimport { cartDevice } from '../../../interfaces/cartDeviceList';\n\ninterface DesktopHeaderInterface {\n    favoriteDevices: favoriteDevice[],\n    cartDeviceList: cartDevice[]\n}\n\nconst DesktopHeader: FC<DesktopHeaderInterface> = ({ favoriteDevices, cartDeviceList }) => {\n    const location = useLocation()\n    let history = useHistory()\n\n    useEffect(() => {\n        // console.log(location);\n    }, [location])\n\n    return (\n        <div className=\"header-navigation__wrapper\">\n            <div className=\"header-navigation__item\">\n                <div className=\"header-nav__logo-wrapper\">\n                    <img src=\"icons/logo.png\" className=\"logo-image\" style={{width: '100%'}}/>\n                </div>\n                <nav className=\"header-nav__nav-wrapper\">\n                    <ul className=\"header-nav__item-wrapper\">\n                        <li className={`header-nav__item ${location.pathname === \"/\" ? \"header-nav__item--active\" : \"\"}`} onClick={() => history.push('/')}>\n                            <Link to=\"/\" className=\"header-nav__link\">home</Link>\n                        </li>\n\n                        <li className={`header-nav__item ${location.pathname === \"/phones\" ? \"header-nav__item--active\" : \"\"}`} onClick={() => history.push('/phones')}>\n                            <Link to=\"/phones\" className=\"header-nav__link\">phones</Link>\n                        </li>\n\n                        <li className={`header-nav__item ${location.pathname === \"/tablets\" ? \"header-nav__item--active\" : \"\"}`} onClick={() => history.push('/tablets')}>\n                            <Link to=\"/tablets\" className=\"header-nav__link\">tablet</Link>\n                        </li>\n\n                        <li className={`header-nav__item ${location.pathname === \"/accessories\" ? \"header-nav__item--active\" : \"\"}`} onClick={() => history.push('/accessories')}>\n                            <Link to=\"/accessories\" className=\"header-nav__link\">accessories</Link>\n                        </li>\n                    </ul>\n                </nav>\n            </div>\n            <div className=\"header-navigation__item\">\n\n                <div className={`header-navigation__icon-wrapper ${location.pathname === \"/favorites\" ? \"header-navigation__icon-wrapper--active\" : \"\"}`} onClick={() => history.push('/favorites')}>\n                    {\n                        favoriteDevices.length ? (\n                            <div className=\"badge-wrapper\" style={{\n                                top: 15,\n                                right: 15,\n                            }}>\n                                <div style={{\n                                    fontSize: 11,\n                                    color: '#fff'\n                                }}>{favoriteDevices.length}</div>\n                            </div>\n                        ): null\n                    }\n                    <Link to=\"/favorites\" className=\"header-navigation__icon-link\">\n                        <img src=\"/icons/heart.svg\" alt=\"favorites\" />\n                    </Link>\n                </div>\n                <div className={`header-navigation__icon-wrapper ${location.pathname === \"/cart\" ? \"header-navigation__icon-wrapper--active\" : \"\"}`} onClick={() => history.push('/cart')}>\n                    {\n                        cartDeviceList.length ? (\n                            <div className=\"badge-wrapper\" style={{\n                                top: 15,\n                                right: 15,\n                            }}>\n                                <div style={{\n                                    fontSize: 11,\n                                    color: '#fff'\n                                }}>{cartDeviceList.length}</div>\n                            </div>\n                        ) : null\n                    }\n                    <Link to=\"/cart\" className=\"header-navigation__icon-link\">\n                        <img src=\"/icons/shopping-bag.svg\" alt=\"shopping-bag\" />\n                    </Link>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state: RootState) => ({\n    favoriteDevices: state.favoritesDevice.deviceList,\n    cartDeviceList: state.cartDeviceList.deviceList\n});\n\nconst matDispatchToProps = () => ({\n\n});\n\nexport default connect(mapStateToProps, matDispatchToProps)(DesktopHeader);","import React, {FC} from 'react';\nimport { DeviceScreenType } from '../../interfaces/appStateInterface';\nimport { connect } from 'react-redux';\nimport { RootStateInterface } from '../../interfaces/rootStateInterface';\nimport  MobileHeader from './MobileHeader/MobileHeader';\nimport DesktopHeader from './DesktopHeader/DesktopHeader';\n\nconst Header:FC<MainPageInterface> = ({deviceScreen}) => {\n\n    return(\n        <>\n        {\n            deviceScreen.value! <= 750\n                ? <MobileHeader />\n                : <DesktopHeader />\n        }\n        </>\n    )\n}\n\nexport interface MainPageInterface {\n    deviceScreen: DeviceScreenType\n}\n\n\nconst mapStateToProps = (state: RootStateInterface, ownProps:any) => ({\n    deviceScreen: state.appState.deviceScreen\n})\n\n// const mapDispatchToProps = (dispatch) => ({\n    \n// })\n\n\n\nexport default connect(mapStateToProps, null)(Header)","import React from 'react';\nimport {Link} from 'react-router-dom'\n\nimport './SmallNavigation.scss';\n\ninterface smallNavigation {\n    params: {\n        title: string,\n        link: string\n    }[]\n}\n\nconst SmallNavigation: React.FC<smallNavigation> = ({ params }) => {\n    \n    return (\n        <div className=\"small-navigation\">\n            <Link to=\"/\" className=\"small-navigation__home-link\">\n            <img src=\"/icons/Home.svg\" alt=\"home icon\" className=\"small-navigation__home\" />\n            </Link>\n            {\n                params.map((item, index, arr) => (\n                    <div className=\"small-navigation__img-wrapper\" key={item.title}>\n                        <img src=\"/icons/arrow.svg\" alt=\"greater than icon\" className=\"small-navigation__greater-than-sign\" />\n                        {\n                            index === arr.length - 1\n                                ? <p className=\"small-navigation__text\">{item.title}</p>\n                                : <Link to={item.link} className=\"small-navigation__text small-navigation__link\">{item.title}</Link>\n                        }\n                    </div>\n                ))\n            }\n        </div>\n    )\n}\n\nexport default SmallNavigation;","import React from 'react';\nimport { Link, useHistory } from 'react-router-dom';\n\nimport \"./GoBack.scss\";\n\nconst GoBack: React.FC = () => {\n    let history = useHistory();\n\n    return (\n        <div className=\"go-back__navigation\">\n            <Link to=\"\" >\n                <img src=\"/icons/arrow-black.svg\" alt=\"go back icon\" />\n            </Link>\n            <p className=\"small-navigation__text go-back__text\" onClick={() => history.goBack()}>Back</p>\n        </div>\n    )\n}\n\nexport default GoBack","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { phones } from '../../store/actions';\nimport { useParams } from 'react-router-dom'\nimport { RootState } from '../../store/reducers';\nimport { phoneCardInterface } from '../../interfaces/phonesInterfaces';\n\nimport \"./PhoneCardFull.scss\"\nimport { defaultConstatnts } from '../../constants/defaultConstants';\nimport Header from '../Header/Header';\nimport SmallNavigation from '../SmallNavigation/SmallNavigation';\nimport GoBack from '../GoBack/GoBack';\nimport { favoritesDevice, cartDeviceList } from '../../store/actions';\n\nimport { favoriteDevice } from '../../interfaces/favoriteDevice'\nimport { title } from 'process';\nimport { cartDevice } from '../../interfaces/cartDeviceList';\n\ntype params = {\n    model_name: string\n}\n\ninterface PhoneCardFullInterface {\n    currentModel: phoneCardInterface | null,\n    loading: boolean | null,\n    error: any,\n    getPhoneByModelName: (model_name: string) => {},\n    toggleFavoriteDevice: (device: favoriteDevice) => {},\n    toggleCartDevice: (device: cartDevice) => void,\n    favoriteDevices: favoriteDevice[],\n    cartDeviceList: cartDevice[]\n}\n\n\n\nconst PhoneCardFull: React.FC<PhoneCardFullInterface> = (props) => {\n    const {\n        loading, error, currentModel,\n        getPhoneByModelName, favoriteDevices,\n        toggleFavoriteDevice, toggleCartDevice,\n        cartDeviceList\n    } = props\n\n    const [device, setDevice] = useState<any>(null);\n    const [addToFavotireList, setAddToFavoriteList] = useState<boolean | null>(null);\n    const [addToCartList, setAddToCartList] = useState<boolean | null>(null);\n\n    let params: params = useParams();\n\n    useEffect(() => {\n        getPhoneByModelName(params.model_name)\n    }, [])\n\n\n    useEffect(() => {\n        const favorite = favoriteDevices.find((item: favoriteDevice) => item._id === currentModel?._id);\n\n        if (favorite) {\n            setAddToFavoriteList(true)\n        } else {\n            setAddToFavoriteList(false)\n        }\n    }, [favoriteDevices, currentModel])\n\n    useEffect(() => {\n        const cart = cartDeviceList.find((item: cartDevice) => item._id === currentModel?._id);\n\n        if (cart) {\n            setAddToCartList(true)\n        } else {\n            setAddToCartList(false)\n        }\n\n    }, [cartDeviceList, currentModel])\n\n\n    const handleToggleCartList = () => {\n        const cartDevice = {\n            _id: currentModel!._id,\n            price: {\n                old: currentModel!.price.old,\n                current: currentModel!.price.current\n            },\n            image: device.currentDevice.images.main,\n            title: currentModel!.title,\n            routePosition: currentModel!.routePosition,\n            deviceInfo: {\n                camera: currentModel!.deviceInfo.camera,\n                cell: currentModel!.deviceInfo.cell,\n                processor: currentModel!.deviceInfo.processor,\n                resolution: currentModel!.deviceInfo.resolution,\n                screen: currentModel!.deviceInfo.screen,\n                zoom: currentModel!.deviceInfo.zoom,\n                color: device.currentDevice.currentColor,\n                RAM: device.currentDevice.currentRAM,\n            },\n            about: device.abuot\n        }\n\n        toggleCartDevice(cartDevice)\n    }\n\n    useEffect(() => {\n        if (currentModel) {\n            setDevice({\n                ...currentModel,\n                currentDevice: {\n                    ...currentModel.availabelDevices[0],\n                    currentRAM: currentModel.availabelDevices[0].availableRAM[0],\n                    currentColor: currentModel.availabelColor[0],\n                    bigImage: currentModel.availabelDevices[0].images.main,\n                },\n\n            })\n        }\n    }, [currentModel])\n\n    useEffect(() => {\n        // console.log(device.about);\n    }, [device])\n\n    return (\n        <div>\n            <Header />\n            <div className=\"main-limit\">\n                {\n                    device?.title ? <SmallNavigation params={[{ title: 'Phones', link: '/phones' }, { title: device.title, link: '' }]} /> : null\n                }\n                <GoBack />\n                {\n                    loading ? <p>LOADING...</p>\n                        : error ? <p>Error</p>\n                            : loading === false && !error && device ? (\n                                <div className=\"full-card\">\n                                    <p className=\"main-title\">{device.title}</p>\n\n                                    <div className=\"full-card__specifations\">\n\n                                        <div className=\"full-card__images-wrapper\">\n                                            <div className=\"full-card__small-image-list\">\n                                                {\n                                                    device.currentDevice.images.other.map((image: string, index: number) => (\n                                                        <div\n                                                            className={`full-card__small-image ${image === device.currentDevice.bigImage ? \"full-card__small-image--active\" : \"\"}`}\n                                                            onClick={() => {\n                                                                const newDevice = { ...device, currentDevice: { ...device.currentDevice, bigImage: image } }\n                                                                setDevice(newDevice)\n                                                            }}\n                                                            key={image}\n                                                        >\n                                                            <img\n                                                                src={defaultConstatnts.domain + \"/\" + image}\n                                                                alt={device.title}\n                                                                className={`full-card__small-image--itself `}\n                                                            />\n                                                        </div>\n                                                    ))\n                                                }\n                                            </div>\n                                            <div className=\"full-card__big-image\">\n                                                <img\n                                                    src={defaultConstatnts.domain + \"/\" + device.currentDevice.bigImage}\n                                                    alt={device.title}\n                                                    className=\"full-card__big-image--itself\"\n                                                />\n                                            </div>\n                                        </div>\n\n                                        <div className=\"full-card__select-block\">\n                                            <div className=\"full-card__available-color-list__wrapper\">\n                                                <p className=\"card-specification__name full-card__select-titile\">Available colors</p>\n\n                                                <div className=\"full-card__available-color-list\">\n                                                    {\n                                                        device.availabelColor.map((color: string) => (\n                                                            <div\n                                                                className={`full-card__availabe-color-wrapper ${device.currentColor === color ? \"full-card__availabe-color-wrapper--selected\" : \"\"}`}\n                                                                key={color}\n                                                            >\n                                                                <div\n                                                                    className=\"full-card__availabe-color\"\n                                                                    style={{ backgroundColor: color }}\n                                                                    onClick={() => {\n                                                                        const newDeviceIndex = currentModel?.availabelDevices.findIndex((model) => model.color === color)\n\n                                                                        const newDevice = {\n                                                                            ...device, currentDevice: {\n                                                                                ...currentModel!.availabelDevices[newDeviceIndex!],\n                                                                                currentRAM: currentModel!.availabelDevices[newDeviceIndex!].availableRAM[0],\n                                                                                currentColor: currentModel!.availabelColor[newDeviceIndex!],\n                                                                                bigImage: currentModel!.availabelDevices[newDeviceIndex!].images.main,\n                                                                            }\n                                                                        }\n\n                                                                        setDevice(newDevice)\n                                                                    }}\n                                                                ></div>\n                                                            </div>\n                                                        ))\n                                                    }\n                                                </div>\n                                            </div>\n                                            <div className=\"full-card__separate-line\"></div>\n\n                                            <div className=\"full-card__availabe-ram-list_wrapper\">\n                                                <p className=\"card-specification__name\">Select capacity</p>\n\n                                                <div className=\"full-card__availabe-ram-list\">\n                                                    {\n                                                        device.currentDevice.availableRAM.map((ram: string) => (\n                                                            <div\n                                                                className={`full-card__availale-ram-wrapper ${device.currentDevice.currentRAM === ram ? \"full-card__availale-ram-wrapper__selected\" : \"\"}`}\n                                                                onClick={() => {\n                                                                    const updatedDevice = { ...device, currentDevice: { ...device.currentDevice, currentRAM: ram } }\n                                                                    setDevice(updatedDevice)\n                                                                }}\n                                                                key={ram}\n                                                            >\n                                                                <p className=\"full-card__availale-ram\">{ram}</p>\n                                                            </div>\n                                                        ))\n                                                    }\n                                                </div>\n                                            </div>\n\n\n                                            <div className=\"phone-card__price full-card__price\">\n                                                <p className=\"phone-card__current-price full-card__current-price\">{currentModel?.price.current}</p>\n                                                <p className=\"phone-card__old-price\">{currentModel?.price.old}</p>\n                                            </div>\n\n                                            <div className=\"full-card__short-info\">\n                                                <div className=\"phone-card__button--wrapper full-card__button-wrapper\">\n                                                    <div\n                                                        className={`button__add-cart--wrapper phone-card__add-cart--wrapper ${addToCartList ? 'button__add-cart--active' : ''}`}\n                                                        onClick={handleToggleCartList}\n                                                    >\n                                                        <div className=\"button__add-cart--text\">Add to cart</div>\n                                                    </div>\n                                                    <div className=\"button__favorite--wrapper phone-card__favorite--wrapper\" onClick={() => toggleFavoriteDevice(currentModel!)}>\n                                                        <img\n                                                            src={`${addToFavotireList ? '/icons/heart-filed.svg' : '/icons/heart.svg'}`}\n                                                            alt=\"favorite\"\n                                                            className=\"button__favorite--icon\"\n                                                        />\n                                                    </div>\n                                                </div>\n\n                                                <div className=\"card-specification--list\">\n                                                    <div className=\"card-specification--item\">\n                                                        <div className=\"card-specification__name\">Screen</div>\n                                                        <div className=\"card-specification__value\">{currentModel?.deviceInfo.screen}</div>\n                                                    </div>\n\n                                                    <div className=\"card-specification--item\">\n                                                        <div className=\"card-specification__name\">Processor</div>\n                                                        <div className=\"card-specification__value\">{currentModel?.deviceInfo.processor}</div>\n                                                    </div>\n\n                                                    <div className=\"card-specification--item\">\n                                                        <div className=\"card-specification__name\">Camera</div>\n                                                        <div className=\"card-specification__value\">{currentModel?.deviceInfo.camera}</div>\n                                                    </div>\n                                                </div>\n                                            </div>\n\n                                            <div className=\"full-card__id\">\n                                                <p className=\"card-specification__name\">ID: undefined</p>\n                                            </div>\n\n                                        </div>\n\n\n                                    </div>\n\n\n                                    <div className=\"full-card__description\">\n                                        <div className=\"full-card__summary\">\n                                            <p className=\"second-title full-card__second-title\">About</p>\n                                            <div className=\"full-card__separate-line\"></div>\n                                            {\n                                                device.about.map((item: { title: string, description: string }, index: number) => (\n                                                    <div className=\"full-card__summary__paragraph\" key={title + index}>\n                                                        <p className=\"full-card__summary__title third-title\">{item.title}</p>\n                                                        <p className=\"full-card__summary__description body-text\">{item.description}</p>\n                                                    </div>\n                                                ))\n                                            }\n                                        </div>\n                                        <div className=\"full-card__tech-sepcification\">\n                                            <p className=\"second-title full-card__second-title\">Tech specs</p>\n                                            <div className=\"full-card__separate-line\"></div>\n                                            <div className=\"full-card__tech-specifation__list\">\n                                                {\n                                                    Object.entries(device.deviceInfo).map((item: [string, any], index: number) => {\n                                                        const [name, description] = item;\n\n                                                        return (\n                                                            <div className=\"full-card__tech-sepcification__item\" key={name + index}>\n                                                                <p className=\"full-card__tech-sepcification__name card-specification__name\">{name}</p>\n                                                                <p className=\"full-card__tech-sepcification__description card-specification__value\">{description}</p>\n                                                            </div>\n                                                        )\n                                                    })\n\n                                                }\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                </div>\n                            ) : null\n                }\n            </div>\n\n        </div>\n    )\n}\n\nconst mapStateToProps = (state: RootState) => ({\n    loading: state.phonesState.loading,\n    error: state.phonesState.error,\n    currentModel: state.phonesState.currentModel,\n    favoriteDevices: state.favoritesDevice.deviceList,\n    cartDeviceList: state.cartDeviceList.deviceList\n})\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    getPhoneByModelName: (id: string) => dispatch(phones.getPhoneByModelName(id)),\n    toggleFavoriteDevice: (device: favoriteDevice) => dispatch(favoritesDevice.toggleFavoriteDevice(device)),\n    toggleCartDevice: (device: cartDevice) => dispatch(cartDeviceList.toggleCartDevice(device))\n\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PhoneCardFull)","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { RootStateInterface } from '../../interfaces/rootStateInterface';\nimport { useHistory } from \"react-router-dom\";\n\nimport \"./DeviceCardItem.scss\";\nimport { phoneCardInterface } from '../../interfaces/phonesInterfaces';\nimport { phones } from '../../store/actions';\nimport { favoritesDevice, cartDeviceList } from '../../store/actions';\nimport { favoriteDevice } from '../../interfaces/favoriteDevice';\nimport { cartDevice } from '../../interfaces/cartDeviceList';\n\n\ninterface PhoneCardInterface {\n    device: any, // device type\n    toggleFavoriteDevice: any,\n    favoriteDevices: favoriteDevice[],\n    cartDeviceList: cartDevice[],\n    toggleCartDevice: any,\n}\n\nconst DeviceCardItem: React.FC<PhoneCardInterface> = ({ device, toggleFavoriteDevice, favoriteDevices, toggleCartDevice, cartDeviceList }) => {\n    let history = useHistory();\n    const [startClick, setStartClick] = useState<Date | null>(null);\n    const [letPress, setLetPress] = useState(true); // if we move when mouseDown being, we don't navigate on fullPhoneScreen. Because we wont use drag nad drop with slider\n    const [addToFavotireList, setAddToFavoriteList] = useState<boolean | null>(null);\n    const [addToCartList, setAddToCartList] = useState<boolean | null>(null);\n\n\n    useEffect(() => {\n        const favorite = favoriteDevices.find((item: favoriteDevice) => item._id === device._id);\n\n        if (favorite) {\n            setAddToFavoriteList(true)\n        } else {\n            setAddToFavoriteList(false)\n        }\n    }, [favoriteDevices])\n\n\n    useEffect(() => {\n        const favorite = cartDeviceList.find((item: cartDevice) => item._id === device._id);\n\n        if (favorite) {\n            setAddToCartList(true)\n        } else {\n            setAddToCartList(false)\n        }\n    }, [cartDeviceList])\n\n\n    const handleAddToFavoriteList = () => {\n        toggleFavoriteDevice(device)\n    }\n\n    const handleAddToCartList = () => {\n        const cartDevice = {\n            _id: device._id,\n            price: {\n                old: device!.price.old,\n                current: device!.price.current\n            },\n            image: device.availabelDevices[0].images.main,\n            title: device.title,\n            routePosition: device.routePosition,\n            deviceInfo: {\n                \n                camera: device.deviceInfo.camera,\n                cell: device.deviceInfo.cell,\n                processor: device.deviceInfo.processor,\n                resolution: device.deviceInfo.resolution,\n                screen: device.deviceInfo.screen,\n                zoom: device.deviceInfo.zoom,\n                color: device.availabelDevices[0].color,\n                RAM: device.availabelDevices[0].availableRAM[0],\n            },\n            about: device.about\n        }\n\n        toggleCartDevice(cartDevice)\n        // toggleCartDevice(phone)\n    }\n\n    return (\n        <div\n            className=\"phone-card\"\n            onClick={(event) => {\n                if (letPress) {\n\n                    // console.log('device: ', device);\n                    \n                    if (device.type === 'tablet') {\n                        history.push(`/tablet/${device.routePosition}`)\n                    } else {\n                        history.push(`/phone/${device.routePosition}`)\n                    }\n                    \n                    \n                }\n            }}\n            onMouseDown={(event) => {\n                setStartClick(new Date())\n                setLetPress(true)\n            }}\n            onMouseUp={() => {\n                setStartClick(null)\n            }}\n            onMouseMove={(event) => {\n                if (startClick) {\n                    const currentDate = new Date();\n                    const diff = currentDate.getTime() - startClick!.getTime();\n\n                    if (diff < 200) {\n\n                    } else {\n                        setLetPress(false)\n                    }\n                }\n            }}\n        >\n            <div className=\"phone-card__image--wrapper\">\n                <img src={device.availabelDevices[0].images.main} alt={device.title} className=\"phone-card__image--item\" />\n            </div>\n            <div className=\"phone-card__content\">\n                <p className=\"phone-card__title\">{device.title}</p>\n                <div className=\"phone-card__price\">\n                    <p className=\"phone-card__current-price\">{device.price.current}</p>\n                    <p className=\"phone-card__old-price\">{device.price.old}</p>\n                </div>\n\n                <div className=\"phone-card__line\"></div>\n\n                <div className=\"card-specification--list\">\n                    <div className=\"card-specification--item\">\n                        <div className=\"card-specification__name\">Screen</div>\n                        <div className=\"card-specification__value\">{device.deviceInfo.screen}</div>\n                    </div>\n\n                    <div className=\"card-specification--item\">\n                        <div className=\"card-specification__name\">Processor</div>\n                        <div className=\"card-specification__value\">{device.deviceInfo.processor}</div>\n                    </div>\n\n                    <div className=\"card-specification--item\">\n                        <div className=\"card-specification__name\">Camera</div>\n                        <div className=\"card-specification__value\">{device.deviceInfo.camera}</div>\n                    </div>\n                </div>\n\n                <div className=\"phone-card__button--wrapper\" onClick={(event) => event.stopPropagation()}>\n                    <div className={`button__add-cart--wrapper phone-card__add-cart--wrapper ${addToCartList ? 'button__add-cart--active' : ''}`} >\n                        <div\n                            onClick={handleAddToCartList}\n                        >\n                            Add to cart\n                            </div>\n                    </div>\n                    <div className=\"button__favorite--wrapper phone-card__favorite--wrapper\" onClick={handleAddToFavoriteList}>\n                        <img\n                            src={`${addToFavotireList ? '/icons/heart-filed.svg' : '/icons/heart.svg'}`}\n                            alt=\"favorite\"\n                            className=\"button__favorite--icon\"\n                        />\n                    </div>\n                </div>\n\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state: RootStateInterface) => ({\n    favoriteDevices: state.favoritesDevice.deviceList,\n    cartDeviceList: state.cartDeviceList.deviceList\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    toggleFavoriteDevice: (device: favoriteDevice) => dispatch(favoritesDevice.toggleFavoriteDevice(device)),\n    toggleCartDevice: (device: cartDevice) => dispatch(cartDeviceList.toggleCartDevice(device))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DeviceCardItem)","import React, { useState } from 'react';\nimport \"./SliderButtons.scss\";\n\nexport const SampleNextArrow = (props: any) => {\n    const { className, style, onClick, currentSlide, slideCount, slickSliderRef } = props;\n    // const [visibleSlides, setVisibbleSlides] = useState(null);\n    // console.log(props);\n\n    let edgeSlide = false;\n    // console.log(slickSliderRef.current);\n\n    if (slickSliderRef.current) {\n        const { breakpoint } = slickSliderRef.current.state;\n        const { responsive } = slickSliderRef.current.props;\n\n        const currentBreakpoint = responsive ? responsive.find((item: any) => item.breakpoint === breakpoint) : null;\n\n        let visibleSlides = null;\n        if (currentBreakpoint) {\n            visibleSlides = currentBreakpoint.settings.slidesToShow\n        } else {\n            visibleSlides = slickSliderRef.current.props.slidesToShow; // default slides to show.\n        }        \n        \n        edgeSlide = currentSlide === slideCount - visibleSlides ? true : false;\n    }\n\n\n    const extraStyle = [\n        edgeSlide ? \"slider-buttons--not-active\" : \"\",\n        props.classNames\n    ]\n\n    return (\n        <div\n            className={`slider-buttons slider-buttons--left ${extraStyle.join(\" \")}`}\n            onClick={onClick}\n        >\n            <img src={edgeSlide ? \"./icons/arrow.svg\" : \"./icons/arrow-black.svg\"} alt=\"arrow\" className=\"slider-buttons__arrow slider-buttons__arrow--next\" />\n        </div>\n    )\n}\n\n\nexport const SamplePrevArrow = (props: any) => {\n    const { className, style, onClick, currentSlide, slideCount } = props;\n    const edgeSlide = currentSlide === 0 ? true : false;\n\n    const extraStyle = [\n        edgeSlide ? \"slider-buttons--not-active\" : \"\",\n        props.classNames\n    ]\n\n    return (\n        <div\n            className={`slider-buttons slider-buttons--right ${extraStyle.join(\" \")}`}\n            onClick={onClick}\n        >\n            <img src={edgeSlide ? \"./icons/arrow.svg\" : \"./icons/arrow-black.svg\"} alt=\"arrow\" className=\"slider-buttons__arrow slider-buttons__arrow--prev\" />\n        </div>\n    )\n}","import React from 'react';\nimport \"./Preloader.scss\";\n\nexport const Preloader = (props: any) => {\n    const {\n        color = 'black',\n        width = 64,\n        height = 64,\n        borderWidth = 6,\n        wrapperWidth = 64,\n        wrapperHeight = 64\n    } = props;\n    return (\n        <div className=\"preloader-container\" style={{\n            width: `${wrapperWidth}px`,\n            height: `${wrapperHeight}px`,\n        }}>\n            <div className=\"preloader\" style={{\n                border: `${borderWidth}px solid #fff`,\n                width: `${width}px`,\n                height: `${height}px`,\n                borderColor: `${color} transparent ${color} transparent`,\n            }} />\n        </div>\n    )\n}","import React, { FC, useRef, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport Slider from 'react-slick';\n\nimport \"./SliderDevice.scss\";\n\nimport DeviceCardItem from '../DeviceCardItem/DeviceCardItem';\nimport { SampleNextArrow, SamplePrevArrow } from './SliderButtonts';\nimport { Preloader } from '../Preloader/Preloader';\nimport { log } from 'console';\n\ntype sliderDeviceInterface = {\n    deviceList: any,\n    error?: any,\n    loading?: boolean | null\n}\n\nconst SliderDevice: FC<sliderDeviceInterface> = ({deviceList, error, loading}) => {\n    const slickSliderRef = useRef(null);\n\n\n    const settings = {\n        dots: false,\n        infinite: false,\n        swipeToSlide: true,\n        speed: 500,\n        slidesToShow: 4,\n        initialSlide: 0,\n        responsive: [\n            {\n                breakpoint: 1388 + 64, // padding on this width + width slider * counter  = (150 * 2) + 272 * 4 = 1388. (marginLeft + margimRight) * count + = (8 + 8) * 4\n                settings: {\n                    initialSlide: 0,\n                    slidesToShow: 4,\n                }\n            },\n            {\n                breakpoint: 1300, // padding on this width + width slider * counter  = (100 * 2) + 272 * 3 = 1016. (marginLeft + margimRight) * count + = (8 + 8) * 3\n                settings: {\n                    initialSlide: 0,\n                    slidesToShow: 3,\n                }\n            },\n            {\n                breakpoint: 780, // padding on this width + width slider * counter  = (50 * 2) + 272 * 2 = 644. (marginLeft + margimRight) * count + = (8 + 8) * 2\n                settings: {\n                    initialSlide: 0,\n                    slidesToShow: 2,\n                }\n            },\n            {\n                breakpoint: 550, // padding on this width + width slider * counter = (50 * 2) + 272 * 1 = 372. (marginLeft + margimRight) * count + = (8 + 8) * 1\n                settings: {\n                    initialSlide: 0,\n                    slidesToShow: 1,\n                }\n            }\n        ],\n        nextArrow: <SampleNextArrow slickSliderRef={slickSliderRef} classNames=\"slider-buttons__device\" />,\n        prevArrow: <SamplePrevArrow slickSliderRef={slickSliderRef} classNames=\"slider-buttons__device\" />,\n    }\n\n    // useEffect(() => {\n    //     console.log('loadingHotPricePhones');\n\n    // }, [loading])\n\n    // console.log(\n    //     'deviceList: ', deviceList,\n    //     'loading: ', loading,\n    //     // 'deviceList: ', deviceList,\n    // );\n    \n    return (\n        <div className=\"slider-devices\">\n\n            {\n                loading && !deviceList.length\n                    ? (\n                        <div className=\"preloader-wrapper--center\">\n                            <Preloader />\n                            </div>\n                    )\n                    : error ? (\n                        <h1>We can't load data, please try to reload page</h1>\n                    )\n                        : deviceList.length ? (\n                            <Slider {...settings} ref={slickSliderRef}>\n                                {\n                                    deviceList.map((device: any) => <DeviceCardItem device={device} key={device._id} />)\n                                }\n                            </Slider>\n                        ) : null\n\n            }\n        </div>\n    )\n}\n\nexport default SliderDevice","import React, { FC, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport Slider from 'react-slick';\n\nimport \"./SliderImages.scss\";\n\nimport DeviceCardItem from '../DeviceCardItem/DeviceCardItem';\nimport { SampleNextArrow, SamplePrevArrow } from '../SliderDevice/SliderButtonts';\n\ntype sliderImagesInterface = {\n    imageList: any\n}\n\nconst SliderImages: FC<sliderImagesInterface> = (props) => {\n    const slickSliderRef = useRef(null);\n    // console.log(props);\n\n    const settings = {\n        dots: true,\n        infinite: false,\n        swipeToSlide: true,\n        speed: 500,\n        slidesToShow: 1,\n        initialSlide: 0,\n        appendDots: (dots: any) => {\n            return (\n                <div>\n                    <div className=\"slider-images__bottom-dots--wrapper\">\n                        {\n                            dots.map((dot: any, index: number) => (\n                                <div\n                                    className={`slider-images__bottom-dots ${dot.props.className === \"slick-active\" ? \"slider-images__bottom-dots--active\" : \"\"}`}\n                                    onClick={dot.props.children.props.onClick}\n                                    key={index}\n                                >\n                                </div>\n                            )\n                            )\n                        }\n                    </div>\n                </div>\n\n            )\n        },\n        nextArrow: <SampleNextArrow slickSliderRef={slickSliderRef} classNames=\"slider-buttons__big-image slider-buttons__big-image--right\" />,\n        prevArrow: <SamplePrevArrow slickSliderRef={slickSliderRef} classNames=\"slider-buttons__big-image slider-buttons__big-image--left\" />,\n    }\n\n    return (\n        <div className=\"slider-big-images\">\n            {\n                props.imageList.length ? (\n                    <Slider {...settings} ref={slickSliderRef}>\n                        {\n                            props.imageList.map((image: any) => (\n                                <img src={image} alt=\"\" className=\"slider-images__big-image\" key={image}/>\n                            ))\n                        }\n                    </Slider>\n                ) : null\n            }\n        </div>\n    )\n}\n\nexport default SliderImages","import React from 'react';\nimport { connect } from 'react-redux';\nimport {Link} from 'react-router-dom';\n\nimport \"./Footer.scss\"\n\nconst Footer = () => {\n    return (\n        <footer className=\"footer__wrapper\">\n            <div className=\"main-limit footer__content\">\n                <div className=\"footer__logo\">LOGO</div>\n                <div className=\"footer__navigation__wrapper\">\n                    <nav className=\"footer__navigation\">\n                        <ul className=\"footer__navigation__list\">\n                            <li className=\"footer__navigation__item\">\n                                <Link to=\"\" className=\"uppaercase-text footer__navigation__link\">Github</Link>\n                            </li>\n                            <li className=\"footer__navigation__item\">\n                                <Link to=\"\" className=\"uppaercase-text footer__navigation__link\">Contacts</Link>\n                            </li>\n                            <li className=\"footer__navigation__item\">\n                                <Link to=\"\" className=\"uppaercase-text footer__navigation__link\">Right</Link>\n                            </li>\n                        </ul>\n                    </nav>\n                </div>\n                <div className=\"footer__back-to-top\">\n                    <p className=\"small-text\">Back to top</p>\n                    <div className=\"footer__navigation__back-to-top\">\n                        <img src=\"./icons/arrow.svg\" alt=\"arrow\" className=\"footer__back-to-top__arrow\"/>\n                    </div>\n                </div>\n            </div>\n        </footer>\n    )\n}\n\nexport default connect(null, null)(Footer)","import React, {FC} from 'react';\nimport { connect } from 'react-redux';\nimport { useHistory } from \"react-router-dom\";\n\nimport \"./ShopCategory.scss\";\n\nconst ShopCategory: FC = () => {\n    const history = useHistory()\n\n    return (\n        <div className=\"shop-category__list\">\n            <div className=\"shop-category__item\">\n                <img src=\"./icons/phones-catalog-preview.jpg\" alt=\"\" className=\"shop-category__image\" onClick={() => history.push('/phones')}/>\n                <div className=\"shop-category__description\">\n                    <p className=\"shop-category__title\">Mobile phones</p>\n                    <p className=\"small-text shop-category__amount\">undefined</p>\n                </div>\n            </div>\n\n            <div className=\"shop-category__item\">\n                <img src=\"./icons/tablets-category-preview.png\" alt=\"\" className=\"shop-category__image\" onClick={() => history.push('/tablets')}/>\n                <div className=\"shop-category__description\">\n                    <p className=\"shop-category__title\">Tablets</p>\n                    <p className=\"small-text shop-category__amount\">undefined</p>\n                </div>\n            </div>\n\n            <div className=\"shop-category__item\">\n                <img src=\"./icons/accsessories-catalog-preview.jpg\" alt=\"\" className=\"shop-category__image\" onClick={() => history.push('/accessories')}/>\n                <div className=\"shop-category__description\">\n                    <p className=\"shop-category__title\">Accessories</p>\n                    <p className=\"small-text shop-category__amount\">undefined</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default connect(null, null)(ShopCategory)","\n\nimport { useState, useCallback, useEffect, FC } from 'react';\nimport { request } from '../api/request';\nimport { defaultConstatnts } from '../constants/defaultConstants';\n\ninterface useHTTPInterface {\n    path: string\n}\n\nexport const useHTTP = ()=> {\n    const [loading, setLoading] = useState<null | boolean>(null);\n    const [error, setError] = useState<any>(null);\n    const [response, setResponse] = useState(null)\n\n    const getReguest = useCallback(async (path: string) => {\n        console.log('request');\n\n        setLoading(true)\n        try {\n            const response = await request(path);\n            return response\n            // setResponse(response)\n\n        } catch (err) {\n            console.log('error in HTTP hook', err);\n            setError(err)\n        } finally {\n            setLoading(false)\n        }\n    },[])\n\n    const cleanError = () => {\n        setError(null)\n    }\n\n    return {getReguest, loading, error, cleanError}\n}\n\n\n// export const useFetch = (url: string, options: any) => {\n//     const [response, setResponse] = useState(null);\n//     const [error, setError] = useState(null);\n//     const [isLoading, setIsLoading] = useState(false);\n//     useEffect(() => {\n//         const fetchData = async () => {\n//             setIsLoading(true);\n//             try {\n//                 const res = await fetch(defaultConstatnts.domain + url);\n//                 const json = await res.json();\n//                 setResponse(json);\n//                 setIsLoading(false)\n//             } catch (error) {\n//                 setError(error);\n//             }\n//         };\n//         fetchData();\n//     }, []);\n//     return { response, error, isLoading };\n// };","import React, { ChangeEvent, useCallback, useEffect, useState } from 'react';\nimport Header from '../../components/Header/Header';\n\nimport './MainPage.scss';\n\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\n\nimport { connect } from 'react-redux';\nimport { RootStateInterface } from '../../interfaces/rootStateInterface';\nimport { phones, hotPricePhones } from '../../store/actions'\nimport { phoneCardInterface, phoneListStateType } from '../../interfaces/phonesInterfaces';\nimport { DeviceScreenType } from '../../interfaces/appStateInterface';\nimport DeviceCardList from '../../components/DeviceCardList/DeviceCardList';\nimport SmallNavigation from '../../components/SmallNavigation/SmallNavigation';\nimport SliderDevice from '../../components/SliderDevice/SliderDevice';\nimport SliderImages from '../../components/SliderImages/SliderImages';\nimport Footer from '../../components/Footer/Footer';\nimport ShopCategory from '../../components/ShopCategory/ShopCategory';\nimport { useHTTP } from '../../hooks/useHTTP.hook';\n\n\n\nconst MainPage: React.FC<mainPropsInterfaces> = (props) => {\n    const { getReguest: getNewModelPhones, loading: loadingNewModelPhones, error: errorNewModelPhones } = useHTTP();\n    const { getReguest: getHotPricePhones, loading: loadingHotPricePhones, error: errorHotPricePhones } = useHTTP();\n    const [imageList, setImageList] = useState<string[]>([])\n\n    const [newModelPhones, setNewModelPhones] = useState([]);\n    const [hotPricePhones, setHotPricePhones] = useState([]);\n\n\n    useEffect(() => {\n        props.loadHotPricePhones();\n        loadNewModels();\n        loadHotPricePhones();    \n        \n        console.log(newModelPhones);\n        \n    }, [])\n\n    useEffect(() => {\n        if (props.deviceScreen.value && props.deviceScreen.value  < 700) {\n            if (imageList[0] !== \"icons/big-slider-image-small-1.jpg\") {\n                setImageList([\n                    \"icons/big-slider-image-small-1.jpg\",\n                    \"icons/big-slider-image-small-2.jpg\",\n                    \"icons/big-slider-image-small-3.jpg\",\n                    \"icons/big-slider-image-small-5.jpg\",\n                    \"icons/big-slider-image-small-6.jpg\",\n                ])\n            }\n        } else {\n            if (imageList[0] !== \"icons/big-slider-1.jpg\") {\n                setImageList([\n                    \"icons/big-slider-image-big-1.jpg\",\n                    \"icons/big-slider-image-big-2.jpg\",\n                    \"icons/big-slider-image-big-3.jpg\",\n                    \"icons/big-slider-image-big-4.jpg\",\n                    \"icons/big-slider-image-big-5.jpg\",\n                ])\n            }\n        }\n    }, [props.deviceScreen])\n\n    const loadHotPricePhones = useCallback(async () => {\n        const request = await getHotPricePhones('/api/phone/hot-price');\n\n        if (request) {\n            setHotPricePhones(request)\n        }\n    },[])\n\n    const loadNewModels = useCallback(async () => {\n        const request = await getNewModelPhones('/api/phone/new-models');\n        if (request) {\n            setNewModelPhones(request)\n        }\n    },[])\n\n    // useEffect(() => {\n    //     console.log('loadingHotPricePhones');\n\n    // }, [loadingHotPricePhones])\n\n    return (\n        <div className=\"main-page page\">\n            <Header />\n            <div className=\"main-limit\">\n                <div className=\"main-page__big-slider__wrapper\">\n                <SliderImages imageList={imageList} />\n                </div>\n\n                <p className=\"main-title main-page__title\">Hot price</p>\n                <SliderDevice deviceList={hotPricePhones} loading={loadingHotPricePhones} error={errorHotPricePhones} />\n\n                <p className=\"main-title main-page__title\">Shop by category</p>\n                <ShopCategory />\n\n                <p className=\"main-title main-page__title\">Brand new models</p>\n                <SliderDevice deviceList={newModelPhones} loading={loadingNewModelPhones} error={errorNewModelPhones} />\n\n            </div>\n            <Footer />\n        </div>\n    )\n}\n\ninterface mainPropsInterfaces {\n    hotPricePhonesLoading: boolean | null,\n    hotPricePhonesFailed: any,\n    hotPricePhonesList: phoneCardInterface[],\n    deviceScreen: {name: string | null, value: number | null},\n    loadHotPricePhones: () => {},\n}\n\nconst mapStateToProps = (state: RootStateInterface, ownProps: any) => ({\n    hotPricePhonesLoading: state.hotPricePhones.loading,\n    hotPricePhonesFailed: state.hotPricePhones.error,\n    hotPricePhonesList: state.hotPricePhones.hotPricePhoneList,\n    deviceScreen: state.appState.deviceScreen,\n})\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    loadHotPricePhones: () => dispatch(hotPricePhones.loadHotPricePhones()),\n})\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainPage)","import React from 'react';\nimport { connect } from 'react-redux';\nimport { phoneCardInterface } from '../../interfaces/phonesInterfaces';\nimport DeviceCardItem from '../DeviceCardItem/DeviceCardItem';\n\nimport \"./DeviceCardList.scss\";\n\ninterface cardListInterface {\n    deviceList: any // array of device type\n}\n\nconst DeviceCardList: React.FC<cardListInterface> = ({ deviceList }) => {\n    // console.log(phoneList);\n\n\n    return (\n        <>\n            <div className=\"phone-list\">\n                {\n                    deviceList.map((device: phoneCardInterface) => <DeviceCardItem device={device} key={device._id} />)\n                }\n            </div>\n        </>\n    )\n}\n\nconst mapStateToProps = () => ({});\n\nconst mapDispatchToProps = () => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DeviceCardList)","import React, { FC, useEffect, useRef, useState } from 'react';\nimport \"./Select.scss\";\n\ninterface selectInterface {\n    itemList: itemType[],\n    defaultSelectIndex?: number,\n    setSelectedItem: any,\n    selectedItem: any,\n    width?: number\n}\n\ntype itemType = {\n    title: string,\n    value: string | number\n}\n\nexport const Select: FC<selectInterface> = (props) => {\n    const {\n        itemList,\n        defaultSelectIndex = 0,\n        selectedItem,\n        setSelectedItem,\n        width = 176\n    } = props;\n\n    const [openMenu, setOpenMenu] = useState(false);\n    const selectRef = useRef<HTMLDivElement>(null);\n\n    useEffect(() => {\n        if (!selectedItem) {\n            setSelectedItem(itemList[defaultSelectIndex])\n        }\n    }, [])\n\n    const handleMenu = () => {\n        setOpenMenu(!openMenu)\n    }\n\n    const selectItem = (item: itemType) => {\n        setSelectedItem(item);\n        setOpenMenu(false)\n    }\n\n    // delect click outside and close select\n    useEffect(() => {\n        document.addEventListener('click', (event: any) => {\n            if (selectRef.current && !selectRef.current!.contains(event.target)) {\n                setOpenMenu(false)\n            }\n        })\n    }, [])\n\n    return (\n        <div className=\"custom-select\" ref={selectRef} style={{ width: `${width}px` }}>\n            <div className=\"custom-select__selected-field\" onClick={handleMenu} style={openMenu ? { border: \"1px solid #313237\" } : {}}>\n                <p className=\"buttons-text custom-select__selected-text\">{selectedItem.title} </p>\n                <img src={\"/icons/arrow.svg\"} className=\"custom-select__arrow\" style={openMenu ? { transform: \"rotate(90deg)\" } : {}} />\n            </div>\n\n            {\n                openMenu && (\n                    <>\n                        <div className=\"custom-select__list\">\n                            {\n                                itemList.map(item => (\n                                    <div className=\"custom-select__item-field\" onClick={() => selectItem(item)} key={item.value}>{item.title}</div>\n                                ))\n                            }\n                        </div>\n\n                        {/* <div className=\"custom-select__overlay\" onClick={() => setOpenMenu(false)}></div> */}\n                    </>\n                )\n            }\n\n        </div>\n    )\n}","import React, { useState, useEffect } from 'react';\n\nimport \"./Pagination.scss\";\ninterface paginationInter {\n    structureList: {\n        currentPage: number,\n        currentVissible: any[],\n        pages: any[],\n        data: any[],\n        loaded: boolean,\n        onPage: number\n    },\n    setStructureList: any,\n    leftSpace: number,\n    rightSpace: number\n}\n\nexport const Pagination = ({ structureList, setStructureList, leftSpace = 2, rightSpace = 2 }: paginationInter) => {\n    const [paginationList, setPaginationList] = useState<any>([]);\n    const [limit, setLimit] = useState({\n        first: true,\n        last: false\n    })\n\n    const updatePagination = (page: any = null) => {\n        const { data, onPage } = structureList;\n\n        // without + 1 we recive leftSpace and rightSpace less on 1 the we get from props ;)\n        let leftStep = leftSpace + 1;\n        let rightStep = rightSpace + 1;\n\n        while (structureList.currentPage - leftStep <= 0) {\n            leftStep--;\n            rightStep++;\n        }\n\n        while (structureList.currentPage + rightStep > structureList.pages.length) {\n            leftStep++;\n            rightStep--\n        }\n\n        let space = [structureList.currentPage - leftStep, structureList.currentPage, structureList.currentPage + rightStep];\n\n        let i = 0;\n        let luft = [];\n\n        while ((structureList.currentPage + rightStep - i) - (structureList.currentPage - leftStep)) {\n            const newValue = structureList.currentPage - leftStep + i;\n            if (newValue > 0) {\n                luft.push(newValue)\n            }\n            i++;\n        }\n\n        luft[0] = 1;\n\n        // if (luft[0] !== structureList.pages.length) {\n        //     luft.push(structureList.pages.length);\n        // }\n\n        luft.push(structureList.pages.length);\n\n        if (luft[luft.length - 1] === 0 || luft[luft.length - 1] === luft[0]) {\n            luft.pop()\n        }\n\n        // console.log('luft: ', luft);\n        // console.log('page: ', page);\n\n\n\n\n        setPaginationList(luft);\n        if (page) {\n\n            // track esge pages, and add especial style for them\n            if (page === luft[luft.length - 1]) { // if current page is last\n                if (luft[0] !== page) { // if last page === first page\n                    setLimit({\n                        last: true,\n                        first: false\n                    })\n                } else { // if last page !== first page\n                    setLimit({\n                        last: true,\n                        first: true\n                    })\n                }\n            } else {\n                if (luft[0] === page) { // if last page === first page\n                    setLimit({\n                        last: false,\n                        first: true\n                    })\n                } else { // if last page !== first page\n                    setLimit({\n                        last: false,\n                        first: false\n                    })\n                }\n            }\n\n            setStructureList({\n                ...structureList,\n                currentPage: page,\n                currentVissible: data.slice((page! - 1) * onPage, onPage * page!)\n            })\n        }\n    }\n\n    useEffect(() => {\n        updatePagination()\n    }, [structureList])\n\n    // console.log('paginationList: ', paginationList);\n\n    const goPrevPage = () => {\n        const { currentPage } = structureList;\n        updatePagination(currentPage - 1)\n    }\n\n    const goNextPage = () => {\n        console.log('structureList: ', structureList);\n\n        const { currentPage, pages } = structureList;\n        if (Number(pages[pages.length - 1]) >= currentPage + 1) {\n            updatePagination(currentPage + 1)\n        }\n\n    }\n\n    return (\n        structureList.data.length ? (\n            <div className=\"pagination\">\n                <div className={`pagination__buttons pagination__prev-button ${limit.first ? 'pagination__buttons--not-active' : ''}`} onClick={goPrevPage}>\n                    <img src={limit.first ? \"./icons/arrow.svg\" : \"./icons/arrow-black.svg\"} alt=\"arrow\" className=\"pagination__buttons-arrow pagination__buttons-arrow--prev\" />\n                </div>\n                {\n                    paginationList.map((page: number, index: number, list: any) => {\n                        const elem = (\n                            <div\n                                className={`small-text pagination__item ${page === structureList.currentPage ? 'pagination__item--selected' : ''}`}\n                                onClick={(event: any) => updatePagination(page)}\n                            >\n                                {page}\n                            </div>\n                        )\n                        if (index === 0 && page + 1 !== list[index + 1] && list.length > 1) {\n                            return (\n                                <>\n                                    {elem}\n                                    <div className=\"pagination__dots-wrapper\">\n                                        <div className=\"pagination__dot\"></div>\n                                        <div className=\"pagination__dot\"></div>\n                                        <div className=\"pagination__dot\"></div>\n                                        <div className=\"pagination__dot\"></div>\n                                    </div>\n                                </>\n                            )\n                        }\n\n                        if (index === list.length - 1 && list[list.length - 2] !== page - 1 && list.length > 1) {\n                            return (\n                                <>\n                                    <div className=\"pagination__dots-wrapper\">\n                                        <div className=\"pagination__dot\"></div>\n                                        <div className=\"pagination__dot\"></div>\n                                        <div className=\"pagination__dot\"></div>\n                                        <div className=\"pagination__dot\"></div>\n                                    </div>\n                                    {elem}\n                                </>\n                            )\n                        }\n                        return elem\n                    })\n                }\n                <div className={`pagination__buttons pagination__prev-button ${limit.last ? 'pagination__buttons--not-active' : ''}`} onClick={goNextPage}>\n                    <img src={limit.last ? \"./icons/arrow.svg\" : \"./icons/arrow-black.svg\"} alt=\"arrow\" className=\"pagination__buttons-arrow pagination__buttons-arrow--next\" />\n                </div>\n            </div>\n\n        ) : null\n\n    )\n}","import React, { ChangeEvent, useEffect, useState } from 'react';\nimport Header from '../../components/Header/Header';\n\nimport './PhonesPage.scss';\nimport { connect } from 'react-redux';\nimport { RootStateInterface } from '../../interfaces/rootStateInterface';\nimport { phones } from '../../store/actions'\nimport { phoneCardInterface, phoneListStateType } from '../../interfaces/phonesInterfaces';\nimport { DeviceScreenType } from '../../interfaces/appStateInterface';\nimport DeviceCardList from '../../components/DeviceCardList/DeviceCardList';\nimport SmallNavigation from '../../components/SmallNavigation/SmallNavigation';\nimport { Select } from '../../components/Select/Select';\nimport { Preloader } from '../../components/Preloader/Preloader';\nimport { Pagination } from '../../components/Pagination/Pagination';\nimport { phonesState } from '../../store/reducers/phones';\nimport Footer from '../../components/Footer/Footer';\n\nconst selectList = [\n    {\n        title: 'Rich',\n        value: 'rich'\n    },\n    {\n        title: 'Cheap',\n        value: 'cheap'\n    }\n]\n\nconst selectitemsOnPageList = [\n    {\n        title: '5',\n        value: 5\n    },\n    {\n        title: '10',\n        value: 10\n    },\n    {\n        title: '15',\n        value: 15\n    },\n    {\n        title: '25',\n        value: 25\n    },\n    {\n        title: '50',\n        value: 50\n    },\n]\n\nconst PhonesPage: React.FC<mainPropsInterfaces> = ({ phoneList, loadPhones, setPhoneListState, phoneListState, phoneLoadSuccss }) => {\n    const [searchField, setSearchField] = useState('');\n    const [selectedSortValue, setSelectedSortValue] = useState({\n        title: 'Cheap',\n        value: 'cheap'\n    });\n\n    const [selectedItemsOnPAgeValue, setSelectedItemsOnPageValue] = useState({\n        title: '5',\n        value: 5\n    });\n\n    const [structureList, setStructureList] = useState<any>({\n        onPage: 16,\n        currentPage: 1,\n        pages: [],\n        data: [],\n        currentVissible: [],\n        loaded: false\n    })\n\n    useEffect(() => {\n        if (phoneList.length) {\n\n            setStructureList({\n                ...structureList,\n                // onPage: 5,\n                // currentPage: 1,\n                // pages: Array.from(Array(Math.ceil(phoneList.length / 5)).keys(), (_, i) => i + 1),\n                // data: phoneList,\n                // currentVissible: phoneList.slice(0, 5),\n                loaded: true\n            })\n        }\n    }, [phoneList])\n\n    console.log(structureList.currentVissible);\n\n\n    const handlePageStructure = (value: number) => {\n        const { onPage, data } = structureList;\n\n        setStructureList({\n            ...structureList,\n            onPage: value,\n            pages: Array.from(Array(Math.ceil(phoneListState.visible.length / value)), (_, i) => i + 1),\n            currentVissible: phoneListState.visible.slice(0, value),\n            currentPage: 1,\n            data: phoneListState.visible\n        })\n    }\n\n    useEffect(() => {\n\n        if (phoneList.length) {\n            // console.log(structureList);\n            // console.log('phoneListState: ', phoneListState.visible);\n            console.log('curentVisible: ', [...phoneListState.visible].slice(0, structureList.onPage));\n\n\n\n            setStructureList({\n                ...structureList,\n                data: phoneListState.visible,\n                pages: Array.from(Array(Math.ceil(phoneListState.visible.length / structureList.onPage)), (_, i) => i + 1),\n                currentVissible: [...phoneListState.visible].slice(0, structureList.onPage),\n                currentPage: 1,\n            })\n        }\n\n    }, [phoneListState])\n\n    useEffect(() => {\n        loadPhones();\n    }, []);\n\n    useEffect(() => {\n        handleSort(selectedSortValue.value);\n    }, [selectedSortValue])\n\n    const handleVisible = (event: ChangeEvent<HTMLInputElement>) => {\n        const { value } = event.target\n        setSearchField(value)\n\n        const filtered = [...phoneListState.sorted].filter(phone => phone.title.toLocaleLowerCase().includes(value.toLocaleLowerCase()));\n\n        console.log('filtered: ', filtered);\n\n        setPhoneListState({\n            ...phoneListState,\n            visible: filtered,\n        })\n    }\n\n    const handleSort = (value: string) => {\n        // sort all items\n        const sortedList = [...phoneList].sort((a, b) => {\n            if (value === 'rich') {\n                return +b.price.current.slice(1,) - +a.price.current.slice(1,)\n            } else if (value === 'cheap') {\n                return +a.price.current.slice(1,) - +b.price.current.slice(1,)\n            } else {\n                return 1\n            }\n        });\n\n        // sort visible part\n        const sortedVisible = [...phoneListState.visible].sort((a, b) => {\n            if (value === 'rich') {\n                return +b.price.current.slice(1,) - +a.price.current.slice(1,)\n            } else if (value === 'cheap') {\n                return +a.price.current.slice(1,) - +b.price.current.slice(1,)\n            } else {\n                return 1\n            }\n        });\n\n        setPhoneListState({\n            ...phoneListState,\n            sorted: sortedList,\n            visible: sortedVisible,\n            currentSortedValue: value\n        })\n    }\n\n\n    useEffect(() => {\n        handlePageStructure(selectedItemsOnPAgeValue.value)\n        console.log(selectedItemsOnPAgeValue);\n\n    }, [selectedItemsOnPAgeValue])\n\n    return (\n        <div className=\"phones-page page\">\n            <Header />\n            <div className=\"main-limit\">\n                <SmallNavigation params={[{ title: 'Phones', link: '/phones' }]} />\n                <p className=\"main-title page-name-title\">Mobile phones</p>\n                <p className=\"small-text models-count\">{\n                    structureList.loaded && structureList?.data?.length\n                        ? structureList.data.length\n                        : <Preloader\n                            color=\"#89939A\"\n                            width=\"12\"\n                            height=\"12\"\n                            borderWidth=\"1\"\n                            wrapperWidth=\"12\"\n                            wrapperHeight=\"12\"\n                        />\n                } models</p>\n\n\n\n                <div className=\"phones-page__select-phones--wrapper\">\n                    <div>\n                        <p className=\"small-text models-count\"> Sort by</p>\n                        <Select itemList={selectList} setSelectedItem={setSelectedSortValue} selectedItem={selectedSortValue} />\n                    </div>\n\n                    <div style={{ marginLeft: 20 }}>\n                        <p className=\"small-text models-count\"> Items on page</p>\n                        <Select\n                            itemList={selectitemsOnPageList}\n                            setSelectedItem={setSelectedItemsOnPageValue}\n                            selectedItem={selectedItemsOnPAgeValue}\n                            defaultSelectIndex={selectitemsOnPageList.findIndex((item) => item.value === structureList.onPage)}\n                            width={128}\n                        />\n                    </div>\n\n                    <div className=\"filter\" style={{marginLeft: 15}}>\n                        <p className=\"small-text models-count\">Serach field</p>\n                        <label style={{ display: 'flex', alignItems: 'center', position: 'relative' }}>\n                            <img src=\"/icons/Search.svg\" style={{ position: 'absolute', left: 5 }} />\n\n                            <input id=\"filter-field\" type=\"text\" value={searchField} onChange={handleVisible} className=\"filter-input--wrapper\" />\n                        </label>\n                    </div>\n                </div>\n\n\n\n                <DeviceCardList deviceList={structureList.currentVissible} />\n\n                <div className=\"phones-page__pagination-warpper\">\n                    <Pagination\n                        structureList={structureList}\n                        setStructureList={setStructureList}\n                        leftSpace={2}\n                        rightSpace={2}\n                    />\n                </div>\n            </div>\n            <Footer />\n        </div>\n    )\n}\n\ninterface mainPropsInterfaces {\n    deviceScreen: DeviceScreenType,\n    phoneList: phoneCardInterface[],\n    phoneListState: any,\n    loadPhones: () => {},\n    setPhoneListState: (phoneListState: phoneListStateType) => {},\n    phoneLoadSuccss: (data: phoneCardInterface[]) => {}\n}\n\nconst mapStateToProps = (state: RootStateInterface, ownProps: any) => ({\n    deviceScreen: state.appState.deviceScreen,\n    phoneList: state.phonesState.phoneList,\n    phoneListState: state.phonesState.phoneListState,\n    phoneState: state.phonesState.phoneListState\n})\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    loadPhones: () => dispatch(phones.loadPhones()),\n    setPhoneListState: (phoneListState: phoneListStateType) => dispatch(phones.phoneListState(phoneListState)),\n    phoneLoadSuccss: (data: phoneCardInterface[]) => dispatch(phones.phoneSuccess(data))\n})\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PhonesPage)","import React, { FC, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport GoBack from '../../components/GoBack/GoBack';\nimport Header from '../../components/Header/Header';\nimport DeviceCardList from '../../components/DeviceCardList/DeviceCardList';\nimport SmallNavigation from '../../components/SmallNavigation/SmallNavigation';\nimport { RootStateInterface } from '../../interfaces/rootStateInterface';\n\nimport './FavoritePage.scss';\nimport Footer from '../../components/Footer/Footer';\n\ninterface FavoritePage {\n    favoriteDevices: any[]\n}\n\nconst FavoritePage: FC<FavoritePage> = ({ favoriteDevices }) => {\n    return (\n        <div className=\"favorite-page page\">\n            <Header />\n\n            <div className=\"main-limit\">\n                {\n                    <SmallNavigation params={[{ title: 'Favorites', link: '/favorites' }]} />\n                }\n                <GoBack />\n                <h1>Favorites</h1>\n                <DeviceCardList deviceList={favoriteDevices} />\n            </div>\n            <Footer />\n        </div>\n    )\n}\n\nconst mapStateToProps = (state: RootStateInterface, ownProps: any) => ({\n    favoriteDevices: state.favoritesDevice.deviceList\n})\n\n\nexport default connect(mapStateToProps, null)(FavoritePage)","import React, { FC, useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport GoBack from '../../components/GoBack/GoBack';\nimport Header from '../../components/Header/Header';\nimport SmallNavigation from '../../components/SmallNavigation/SmallNavigation';\nimport { cartDevice } from '../../interfaces/cartDeviceList';\nimport { RootState } from '../../store/reducers';\nimport { cartDeviceList } from '../../store/actions';\n\nimport './CartPage.scss';\nimport Footer from '../../components/Footer/Footer';\n\ninterface cartPageInterface {\n    chartDeviceList: cartDevice[],\n    toggleCartDevice: (device: cartDevice) => void\n}\n\ninterface deviceCheckoutType extends cartDevice {\n    priceNumber: number;\n    count: number;\n};\n\nconst CartPage: FC<cartPageInterface> = ({ chartDeviceList, toggleCartDevice }) => {\n    const [checkoutDeviceList, setCheckoutDeviceList] = useState<any>([])\n    const [totalSum, setTotalSum] = useState(0);\n    const [deletedItemsId, setDeletedItemsId] = useState<string[]>([])\n\n    useEffect(() => {\n        if (!checkoutDeviceList.length) {\n            setCheckoutDeviceList(chartDeviceList.map((device: cartDevice) => ({\n                ...device,\n                priceNumber: Number(device.price.current.slice(1,)),\n                count: 1\n            })))\n        } else {\n            setCheckoutDeviceList(checkoutDeviceList.filter((device: any) => deletedItemsId.every((item: string) => item !== device._id)))\n        }\n    }, [chartDeviceList])\n\n    useEffect(() => {\n        let totalSuma = 0;\n\n        for (const item of checkoutDeviceList) {\n            totalSuma += item.priceNumber * item.count\n        }\n\n        setTotalSum(totalSuma)\n\n    }, [checkoutDeviceList])\n\n\n    const plusDevice = (id: string) => { \n        const newCheckoutDevice = checkoutDeviceList.map((device: deviceCheckoutType) => {\n            if (device._id === id) {\n                return {\n                    ...device,\n                    count: device.count + 1\n                }\n            }\n            return device\n        })\n\n        setCheckoutDeviceList(newCheckoutDevice)\n    }\n\n    const minusDevice = (id: string) => {\n        const newCheckoutDevice = checkoutDeviceList.map((device: deviceCheckoutType) => {\n            if (device._id === id) {\n                if (device.count - 1) {\n                    return {\n                        ...device,\n                        count: device.count - 1\n                    }\n                }\n                return device\n            }\n\n            return device\n        })\n        setCheckoutDeviceList(newCheckoutDevice)\n    }\n\n\n    useEffect(() => {\n        console.log('checkoutDeviceList: ', checkoutDeviceList);\n    }, [checkoutDeviceList])\n\n\n    const removeDeviceFromList = (id: string) => {\n        // now we have a bug\n        const mathcedDevice = checkoutDeviceList.find((device: cartDevice) => device._id === id);\n        setDeletedItemsId([...deletedItemsId, id])\n\n        console.log('mathcedDevice: ', mathcedDevice);\n        \n        toggleCartDevice(mathcedDevice!)\n    }   \n\n    return (\n        <div className=\"page\">\n            <Header />\n            <div className=\"main-limit\">\n                {\n                    <SmallNavigation params={[{ title: 'Cart', link: '/cart' }]} />\n                }\n                <GoBack />\n                <div className=\"cart\">\n                    <div>\n                        {\n                            checkoutDeviceList.map((device: deviceCheckoutType) => (\n                                <div className=\"cart-item\">\n                                    <div className=\"cart-item__preview\">\n                                        <div className=\"cart-item__cross\" onClick={() => removeDeviceFromList(device._id)}>\n                                            <img src=\"/icons/cross.svg\" className=\"cart-item__cross--icon\" />\n                                        </div>\n                                        <div className=\"cart-item__image-wrapper\">\n                                            <img src={device.image} className=\"cart-item__image\" />\n                                        </div>\n                                        <div className=\"cart-item__title-wrapper\">\n                                            <p className=\"cart-title--text\">{device.title}</p>\n                                        </div>\n                                    </div>\n\n                                    <div className=\"cart-item__info\">\n                                        <div className=\"cart-item__counter\">\n                                            <div\n                                                className=\"slider-buttons slider-buttons--not-active slider-buttons--cart\"\n                                                onClick={() => minusDevice(device._id)}\n                                            >\n                                                -\n                                        </div>\n                                            <p className=\"cart-item__count\">\n                                                {device.count}\n                                            </p>\n                                            <div\n                                                onClick={() => plusDevice(device._id)}\n                                                className=\"slider-buttons slider-buttons--cart\"\n                                            >\n                                                +\n                                            </div>\n\n                                        </div>\n\n                                        <div className=\"cart-item__price-wrapper\">\n                                            <p className=\"second-title cart-item__price\">{device.priceNumber * device.count} {device.price.current[0]}</p>\n                                        </div>\n                                    </div>\n\n                                </div>\n                            ))\n                        }\n                    </div>\n\n                    <div className=\"cart__checkout\">\n                        <div className=\"cart__total\">\n                            <p className=\"cart__total-price second-title\">{totalSum}</p>\n                            <p className=\"cart__total-items small-text\">Total for {checkoutDeviceList.length} items</p>\n                        </div>\n\n                        <div className=\"cart__line\"></div>\n                        <div className=\"cart__button-wrapper\">\n                            <div className=\"button__add-cart--wrapper cart__button\">\n                                <p style={{ margin: 0 }}>Ceckout</p>\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n            <Footer />\n        </div>\n    )\n}\n\nconst mapStateToProps = (state: RootState, ownProps: any) => ({\n    chartDeviceList: state.cartDeviceList.deviceList\n})\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    toggleCartDevice: (device: cartDevice) => dispatch(cartDeviceList.toggleCartDevice(device))\n})\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CartPage)","import React, { ChangeEvent, FC, useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport DeviceCardList from '../../components/DeviceCardList/DeviceCardList'\nimport Footer from '../../components/Footer/Footer'\nimport Header from '../../components/Header/Header'\nimport { Pagination } from '../../components/Pagination/Pagination'\nimport { Preloader } from '../../components/Preloader/Preloader'\nimport { Select } from '../../components/Select/Select'\nimport SmallNavigation from '../../components/SmallNavigation/SmallNavigation'\nimport { RootStateInterface } from '../../interfaces/rootStateInterface'\nimport { tabletCardInterface, tabletListStateType } from '../../interfaces/tabletStateInterface'\nimport { tablets } from '../../store/actions';\n\nconst selectList = [\n    {\n        title: 'Rich',\n        value: 'rich'\n    },\n    {\n        title: 'Cheap',\n        value: 'cheap'\n    }\n]\n\nconst selectitemsOnPageList = [\n    {\n        title: '5',\n        value: 5\n    },\n    {\n        title: '10',\n        value: 10\n    },\n    {\n        title: '15',\n        value: 15\n    },\n    {\n        title: '25',\n        value: 25\n    },\n    {\n        title: '50',\n        value: 50\n    },\n]\n\nconst TabletsPage: FC = ({ tabletList, tabletListState, loadTablets, setTabletListState }: any) => {\n    const [searchField, setSearchField] = useState('');\n    const [selectedSortValue, setSelectedSortValue] = useState({\n        title: 'Cheap',\n        value: 'cheap'\n    });\n\n    const [selectedItemsOnPAgeValue, setSelectedItemsOnPageValue] = useState({\n        title: '5',\n        value: 5\n    });\n\n    const [structureList, setStructureList] = useState<any>({\n        onPage: 16,\n        currentPage: 1,\n        pages: [],\n        data: [],\n        currentVissible: [],\n        loaded: false\n    })\n\n    useEffect(() => {\n        if (tabletList.length) {\n\n            setStructureList({\n                onPage: 5,\n                currentPage: 1,\n                pages: Array.from(Array(Math.ceil(tabletList.length / 5)).keys(), (_, i) => i + 1),\n                data: tabletList,\n                currentVissible: tabletList.slice(0, 5),\n                loaded: true\n            })\n        }\n    }, [tabletList])\n\n    const handlePageStructure = (value: number) => {\n        // const { onPage, data } = structureList;\n\n        setStructureList({\n            ...structureList,\n            onPage: value,\n            pages: Array.from(Array(Math.ceil(tabletListState.visible.length / value)), (_, i) => i + 1),\n            currentVissible: tabletListState.visible.slice(0, value),\n            currentPage: 1,\n            data: tabletListState.visible\n        })\n    }\n\n    useEffect(() => {\n\n        if (tabletList.length) {\n            // console.log(structureList);\n            // console.log('tabletListState: ', tabletListState.visible);\n            console.log('curentVisible: ', [...tabletListState.visible].slice(0, structureList.onPage));\n\n\n\n            setStructureList({\n                ...structureList,\n                data: tabletListState.visible,\n                pages: Array.from(Array(Math.ceil(tabletListState.visible.length / structureList.onPage)), (_, i) => i + 1),\n                currentVissible: [...tabletListState.visible].slice(0, structureList.onPage),\n                currentPage: 1,\n            })\n        }\n\n    }, [tabletListState])\n\n    useEffect(() => {\n        loadTablets();\n    }, []);\n\n    useEffect(() => {\n        handleSort(selectedSortValue.value);\n    }, [selectedSortValue])\n\n    const handleVisible = (event: ChangeEvent<HTMLInputElement>) => {\n        const { value } = event.target\n        setSearchField(value)\n\n        const filtered = [...tabletListState.sorted].filter(phone => phone.title.toLocaleLowerCase().includes(value.toLocaleLowerCase()));\n\n        console.log('filtered: ', filtered);\n\n        setTabletListState({\n            ...tabletListState,\n            visible: filtered,\n        })\n    }\n\n    const handleSort = (value: string) => {\n        // sort all items\n        const sortedList = [...tabletList].sort((a, b) => {\n            if (value === 'rich') {\n                return +b.price.current.slice(1,) - +a.price.current.slice(1,)\n            } else if (value === 'cheap') {\n                return +a.price.current.slice(1,) - +b.price.current.slice(1,)\n            } else {\n                return 1\n            }\n        });\n\n        // sort visible part\n        const sortedVisible = [...tabletListState.visible].sort((a, b) => {\n            if (value === 'rich') {\n                return +b.price.current.slice(1,) - +a.price.current.slice(1,)\n            } else if (value === 'cheap') {\n                return +a.price.current.slice(1,) - +b.price.current.slice(1,)\n            } else {\n                return 1\n            }\n        });\n\n        setTabletListState({\n            ...tabletListState,\n            sorted: sortedList,\n            visible: sortedVisible,\n            currentSortedValue: value\n        })\n    }\n\n\n    useEffect(() => {\n        handlePageStructure(selectedItemsOnPAgeValue.value)\n        console.log(selectedItemsOnPAgeValue);\n\n    }, [selectedItemsOnPAgeValue])\n\n    return (\n        <div className=\"tablets-page page\">\n            <Header />\n            <div className=\"main-limit\">\n                <SmallNavigation params={[{ title: 'Tablets', link: '/tablets' }]} />\n\n                <p className=\"main-title page-name-title\">Mobile phones</p>\n                <p className=\"small-text models-count\">{\n                    structureList.loaded && structureList?.data?.length\n                        ? structureList.data.length\n                        : <Preloader\n                            color=\"#89939A\"\n                            width=\"12\"\n                            height=\"12\"\n                            borderWidth=\"1\"\n                            wrapperWidth=\"12\"\n                            wrapperHeight=\"12\"\n                        />\n                } models</p>\n\n\n\n                <div className=\"phones-page__select-phones--wrapper\">\n                    <div>\n                        <p className=\"small-text models-count\"> Sort by</p>\n                        <Select itemList={selectList} setSelectedItem={setSelectedSortValue} selectedItem={selectedSortValue} />\n                    </div>\n\n                    <div style={{marginLeft: 20}}>\n                        <p className=\"small-text models-count\"> Items on page</p>\n                        <Select\n                            itemList={selectitemsOnPageList}\n                            setSelectedItem={setSelectedItemsOnPageValue}\n                            selectedItem={selectedItemsOnPAgeValue}\n                            defaultSelectIndex={selectitemsOnPageList.findIndex((item) => item.value === structureList.onPage)}\n                            width={128}\n                        />\n                    </div>\n\n                    <div className=\"filter\" style={{marginLeft: 15}}>\n                        <p className=\"small-text models-count\">Serach field</p>\n                        <label style={{ display: 'flex', alignItems: 'center', position: 'relative' }}>\n                            <img src=\"/icons/Search.svg\" style={{ position: 'absolute', left: 5 }} />\n\n                            <input id=\"filter-field\" type=\"text\" value={searchField} onChange={handleVisible} className=\"filter-input--wrapper\" />\n                        </label>\n                    </div>\n                </div>\n\n                <DeviceCardList deviceList={structureList.currentVissible} />\n\n                <div className=\"phones-page__pagination-warpper\">\n                    <Pagination\n                        structureList={structureList}\n                        setStructureList={setStructureList}\n                        leftSpace={2}\n                        rightSpace={2}\n                    />\n                </div>\n            </div>\n            <Footer/>\n        </div>\n\n    )\n}\n\nconst mapStateToProps = (state: RootStateInterface, ownProps: any) => ({\n    deviceScreen: state.appState.deviceScreen,\n    tabletList: state.tabletsState.tabletList,\n    tabletListState: state.tabletsState.tabletListState,\n})\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    loadTablets: () => dispatch(tablets.loadTablets()),\n    setTabletListState: (tabletListState: tabletListStateType) => dispatch(tablets.tabletListState(tabletListState)),\n})\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TabletsPage)","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { phones, tablets } from '../../store/actions';\nimport { useParams } from 'react-router-dom'\nimport { RootState } from '../../store/reducers';\nimport { phoneCardInterface } from '../../interfaces/phonesInterfaces';\n\nimport \"./TabletCardFull.scss\"\nimport { defaultConstatnts } from '../../constants/defaultConstants';\nimport Header from '../Header/Header';\nimport SmallNavigation from '../SmallNavigation/SmallNavigation';\nimport GoBack from '../GoBack/GoBack';\nimport { favoritesDevice, cartDeviceList } from '../../store/actions';\n\nimport { favoriteDevice } from '../../interfaces/favoriteDevice'\nimport { title } from 'process';\nimport { cartDevice } from '../../interfaces/cartDeviceList';\n\ntype params = {\n    model_name: string\n}\n\ninterface PhoneCardFullInterface {\n    currentModel: phoneCardInterface | null,\n    loading: boolean | null,\n    error: any,\n    getTabletByModelName: (model_name: string) => {},\n    toggleFavoriteDevice: (device: favoriteDevice) => {},\n    toggleCartDevice: (device: cartDevice) => void,\n    favoriteDevices: favoriteDevice[],\n    cartDeviceList: cartDevice[]\n}\n\n\n\nconst TabletCardFull: React.FC<PhoneCardFullInterface> = (props) => {\n    const {\n        loading, error, currentModel,\n        getTabletByModelName, favoriteDevices,\n        toggleFavoriteDevice, toggleCartDevice,\n        cartDeviceList\n    } = props\n\n    const [device, setDevice] = useState<any>(null);\n    const [addToFavotireList, setAddToFavoriteList] = useState<boolean | null>(null);\n    const [addToCartList, setAddToCartList] = useState<boolean | null>(null);\n\n    let params: params = useParams();\n\n    useEffect(() => {\n        getTabletByModelName(params.model_name)\n    }, [])\n\n\n    useEffect(() => {\n        const favorite = favoriteDevices.find((item: favoriteDevice) => item._id === currentModel?._id);\n\n        if (favorite) {\n            setAddToFavoriteList(true)\n        } else {\n            setAddToFavoriteList(false)\n        }\n    }, [favoriteDevices, currentModel])\n\n    useEffect(() => {\n        const cart = cartDeviceList.find((item: cartDevice) => item._id === currentModel?._id);\n\n        if (cart) {\n            setAddToCartList(true)\n        } else {\n            setAddToCartList(false)\n        }\n\n    }, [cartDeviceList, currentModel])\n\n\n    const handleToggleCartList = () => {\n        const cartDevice = {\n            _id: currentModel!._id,\n            price: {\n                old: currentModel!.price.old,\n                current: currentModel!.price.current\n            },\n            image: device.currentDevice.images.main,\n            title: currentModel!.title,\n            routePosition: currentModel!.routePosition,\n            deviceInfo: {\n                camera: currentModel!.deviceInfo.camera,\n                cell: currentModel!.deviceInfo.cell,\n                processor: currentModel!.deviceInfo.processor,\n                resolution: currentModel!.deviceInfo.resolution,\n                screen: currentModel!.deviceInfo.screen,\n                zoom: currentModel!.deviceInfo.zoom,\n                color: device.currentDevice.currentColor,\n                RAM: device.currentDevice.currentRAM,\n            },\n            about: device.abuot\n        }\n\n        toggleCartDevice(cartDevice)\n    }\n\n    useEffect(() => {\n        if (currentModel) {\n            setDevice({\n                ...currentModel,\n                currentDevice: {\n                    ...currentModel.availabelDevices[0],\n                    currentRAM: currentModel.availabelDevices[0].availableRAM[0],\n                    currentColor: currentModel.availabelColor[0],\n                    bigImage: currentModel.availabelDevices[0].images.main,\n                },\n\n            })\n        }\n    }, [currentModel])\n\n    useEffect(() => {\n        // console.log(device.about);\n    }, [device])\n\n    return (\n        <div>\n            <Header />\n            <div className=\"main-limit\">\n                {\n                    device?.title ? <SmallNavigation params={[{ title: 'Phones', link: '/phones' }, { title: device.title, link: '' }]} /> : null\n                }\n                <GoBack />\n                {\n                    loading ? <p>LOADING...</p>\n                        : error ? <p>Error</p>\n                            : loading === false && !error && device ? (\n                                <div className=\"full-card\">\n                                    <p className=\"main-title\">{device.title}</p>\n\n                                    <div className=\"full-card__specifations\">\n\n                                        <div className=\"full-card__images-wrapper\">\n                                            <div className=\"full-card__small-image-list\">\n                                                {\n                                                    device.currentDevice.images.other.map((image: string, index: number) => (\n                                                        <div\n                                                            className={`full-card__small-image ${image === device.currentDevice.bigImage ? \"full-card__small-image--active\" : \"\"}`}\n                                                            onClick={() => {\n                                                                const newDevice = { ...device, currentDevice: { ...device.currentDevice, bigImage: image } }\n                                                                setDevice(newDevice)\n                                                            }}\n                                                            key={image}\n                                                        >\n                                                            <img\n                                                                src={defaultConstatnts.domain + \"/\" + image}\n                                                                alt={device.title}\n                                                                className={`full-card__small-image--itself `}\n                                                            />\n                                                        </div>\n                                                    ))\n                                                }\n                                            </div>\n                                            <div className=\"full-card__big-image\">\n                                                <img\n                                                    src={defaultConstatnts.domain + \"/\" + device.currentDevice.bigImage}\n                                                    alt={device.title}\n                                                    className=\"full-card__big-image--itself\"\n                                                />\n                                            </div>\n                                        </div>\n\n                                        <div className=\"full-card__select-block\">\n                                            <div className=\"full-card__available-color-list__wrapper\">\n                                                <p className=\"card-specification__name full-card__select-titile\">Available colors</p>\n\n                                                <div className=\"full-card__available-color-list\">\n                                                    {\n                                                        device.availabelColor.map((color: string) => (\n                                                            <div\n                                                                className={`full-card__availabe-color-wrapper ${device.currentColor === color ? \"full-card__availabe-color-wrapper--selected\" : \"\"}`}\n                                                                key={color}\n                                                            >\n                                                                <div\n                                                                    className=\"full-card__availabe-color\"\n                                                                    style={{ backgroundColor: color }}\n                                                                    onClick={() => {\n                                                                        const newDeviceIndex = currentModel?.availabelDevices.findIndex((model) => model.color === color)\n\n                                                                        const newDevice = {\n                                                                            ...device, currentDevice: {\n                                                                                ...currentModel!.availabelDevices[newDeviceIndex!],\n                                                                                currentRAM: currentModel!.availabelDevices[newDeviceIndex!].availableRAM[0],\n                                                                                currentColor: currentModel!.availabelColor[newDeviceIndex!],\n                                                                                bigImage: currentModel!.availabelDevices[newDeviceIndex!].images.main,\n                                                                            }\n                                                                        }\n\n                                                                        setDevice(newDevice)\n                                                                    }}\n                                                                ></div>\n                                                            </div>\n                                                        ))\n                                                    }\n                                                </div>\n                                            </div>\n                                            <div className=\"full-card__separate-line\"></div>\n\n                                            <div className=\"full-card__availabe-ram-list_wrapper\">\n                                                <p className=\"card-specification__name\">Select capacity</p>\n\n                                                <div className=\"full-card__availabe-ram-list\">\n                                                    {\n                                                        device.currentDevice.availableRAM.map((ram: string) => (\n                                                            <div\n                                                                className={`full-card__availale-ram-wrapper ${device.currentDevice.currentRAM === ram ? \"full-card__availale-ram-wrapper__selected\" : \"\"}`}\n                                                                onClick={() => {\n                                                                    const updatedDevice = { ...device, currentDevice: { ...device.currentDevice, currentRAM: ram } }\n                                                                    setDevice(updatedDevice)\n                                                                }}\n                                                                key={ram}\n                                                            >\n                                                                <p className=\"full-card__availale-ram\">{ram}</p>\n                                                            </div>\n                                                        ))\n                                                    }\n                                                </div>\n                                            </div>\n\n\n                                            <div className=\"phone-card__price full-card__price\">\n                                                <p className=\"phone-card__current-price full-card__current-price\">{currentModel?.price.current}</p>\n                                                <p className=\"phone-card__old-price\">{currentModel?.price.old}</p>\n                                            </div>\n\n                                            <div className=\"full-card__short-info\">\n                                                <div className=\"phone-card__button--wrapper full-card__button-wrapper\">\n                                                    <div\n                                                        className={`button__add-cart--wrapper phone-card__add-cart--wrapper ${addToCartList ? 'button__add-cart--active' : ''}`}\n                                                        onClick={handleToggleCartList}\n                                                    >\n                                                        <div className=\"button__add-cart--text\">Add to cart</div>\n                                                    </div>\n                                                    <div className=\"button__favorite--wrapper phone-card__favorite--wrapper\" onClick={() => toggleFavoriteDevice(currentModel!)}>\n                                                        <img\n                                                            src={`${addToFavotireList ? '/icons/heart-filed.svg' : '/icons/heart.svg'}`}\n                                                            alt=\"favorite\"\n                                                            className=\"button__favorite--icon\"\n                                                        />\n                                                    </div>\n                                                </div>\n\n                                                <div className=\"card-specification--list\">\n                                                    <div className=\"card-specification--item\">\n                                                        <div className=\"card-specification__name\">Screen</div>\n                                                        <div className=\"card-specification__value\">{currentModel?.deviceInfo.screen}</div>\n                                                    </div>\n\n                                                    <div className=\"card-specification--item\">\n                                                        <div className=\"card-specification__name\">Processor</div>\n                                                        <div className=\"card-specification__value\">{currentModel?.deviceInfo.processor}</div>\n                                                    </div>\n\n                                                    <div className=\"card-specification--item\">\n                                                        <div className=\"card-specification__name\">Camera</div>\n                                                        <div className=\"card-specification__value\">{currentModel?.deviceInfo.camera}</div>\n                                                    </div>\n                                                </div>\n                                            </div>\n\n                                            <div className=\"full-card__id\">\n                                                <p className=\"card-specification__name\">ID: undefined</p>\n                                            </div>\n\n                                        </div>\n\n\n                                    </div>\n\n\n                                    <div className=\"full-card__description\">\n                                        <div className=\"full-card__summary\">\n                                            <p className=\"second-title full-card__second-title\">About</p>\n                                            <div className=\"full-card__separate-line\"></div>\n                                            {\n                                                device.about.map((item: { title: string, description: string }, index: number) => (\n                                                    <div className=\"full-card__summary__paragraph\" key={title + index}>\n                                                        <p className=\"full-card__summary__title third-title\">{item.title}</p>\n                                                        <p className=\"full-card__summary__description body-text\">{item.description}</p>\n                                                    </div>\n                                                ))\n                                            }\n                                        </div>\n                                        <div className=\"full-card__tech-sepcification\">\n                                            <p className=\"second-title full-card__second-title\">Tech specs</p>\n                                            <div className=\"full-card__separate-line\"></div>\n                                            <div className=\"full-card__tech-specifation__list\">\n                                                {\n                                                    Object.entries(device.deviceInfo).map((item: [string, any], index: number) => {\n                                                        const [name, description] = item;\n\n                                                        return (\n                                                            <div className=\"full-card__tech-sepcification__item\" key={name + index}>\n                                                                <p className=\"full-card__tech-sepcification__name card-specification__name\">{name}</p>\n                                                                <p className=\"full-card__tech-sepcification__description card-specification__value\">{description}</p>\n                                                            </div>\n                                                        )\n                                                    })\n\n                                                }\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                </div>\n                            ) : null\n                }\n            </div>\n\n        </div>\n    )\n}\n\nconst mapStateToProps = (state: RootState) => ({\n    loading: state.tabletsState.loading,\n    error: state.tabletsState.error,\n    currentModel: state.tabletsState.currentModel,\n    favoriteDevices: state.favoritesDevice.deviceList,\n    cartDeviceList: state.cartDeviceList.deviceList\n})\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    getTabletByModelName: (id: string) => dispatch(tablets.getTabletByModelName(id)),\n    toggleFavoriteDevice: (device: favoriteDevice) => dispatch(favoritesDevice.toggleFavoriteDevice(device)),\n    toggleCartDevice: (device: cartDevice) => dispatch(cartDeviceList.toggleCartDevice(device))\n\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TabletCardFull)","import React, { FC } from 'react';\nimport Footer from '../../components/Footer/Footer';\nimport Header from '../../components/Header/Header';\nimport './NotFoundPage.scss'\n\nconst NotFoundPage: FC = () => {\n    return (\n        <div className=\"page not-found-page\">\n            <Header />\n\n            <div className=\"main-limit not-found-page--content\">\n                <h1>This page doesn't exist</h1>\n            </div>\n\n            <Footer />\n        </div>\n    )\n}\n\nexport default NotFoundPage","import React, { useEffect } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux'\nimport { useRoutes } from './routes';\nimport './App.scss';\n\nimport store from './store';\nimport { setDeviceScreen } from './store/actions/appState';\nimport { setFavoriteDevices } from './store/actions/favoritesDevice';\nimport { setCartDeviceList } from './store/actions/cartDeviceList';\n\n\n\nfunction App() {\n  const routes = useRoutes(false);\n\n  // check device screen width\n  const checkDeviceSize = (event?: any) => {\n    const screenWidth = event ? event.currentTarget.innerWidth : window.innerWidth;\n\n    store.dispatch(setDeviceScreen({\n      value: screenWidth,\n      name: screenWidth > 0 && screenWidth <= 500\n        ? 'phone'\n        : screenWidth > 500 && screenWidth <= 900 \n        ? 'tablet'\n        : 'desktop'\n    }))\n  }\n\n  useEffect(() => {\n    window.addEventListener('resize', checkDeviceSize);\n    checkDeviceSize();\n\n    // add favoriteDevice from localStorage to redux\n    const favoriteDeviceLocalList = localStorage.getItem('@favotiteDeviceList') || JSON.stringify([]);\n    store.dispatch(setFavoriteDevices(JSON.parse(favoriteDeviceLocalList!)));\n\n    // add chartDeviceList from localStorage to redux\n    const cartDeviceLocalList = localStorage.getItem('@cartDeviceList') || JSON.stringify([]);\n    \n    store.dispatch(setCartDeviceList(JSON.parse(cartDeviceLocalList!)));\n\n    return () => {\n      window.removeEventListener('resize', checkDeviceSize);\n    }\n  }, [])\n\n  return (\n    <Provider store={store}>\n      <div className=\"app\">\n        <BrowserRouter>\n          {routes}\n        </BrowserRouter>\n      </div>\n    </Provider>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport PhoneCardFull from './components/PhoneCardFull/PhoneCardFull';\nimport MainPage from './pages/MainPage/MainPage';\nimport PhonesPage from './pages/PhonesPage/PhonesPage';\nimport FavoritePage from './pages/FavoritesPage/FavoritePage';\nimport ChartPage from './pages/CartPage/CartPage';\nimport TabletsPage from './pages/TabletsPage/TabletsPage';\nimport TabletCardFull from './components/TabletCardFull/TabletCardFull';\nimport NotFoundPage from './pages/NotFoundPage/NotFoundPage';\n\n\nexport const useRoutes = (isAuthentificated: boolean) => {\n\n    return (\n        <Switch>\n            <Route path=\"/\" exact>\n                <MainPage />\n            </Route>\n            <Route path=\"/phones\" exact>\n                <PhonesPage />\n            </Route>\n            <Route path=\"/tablets\" exact>\n                <TabletsPage />\n            </Route>\n            <Route path=\"/phone/:model_name\" exact>\n                <PhoneCardFull/>\n            </Route>\n            <Route path=\"/tablet/:model_name\" exact>\n                <TabletCardFull />\n            </Route>\n            <Route path=\"/favorites\" exact>\n                <FavoritePage />\n            </Route>\n\n            <Route path=\"/cart\" exact>\n                <ChartPage />\n            </Route>\n\n            <Route>\n                <NotFoundPage />\n            </Route>\n        </Switch>\n    )\n}\n","import {DEVICE_SCREEN} from '../../constants/actions';\nimport {AppStateActionTypes, DeviceScreenType} from '../../interfaces/appStateInterface';\n\n\nexport const setDeviceScreen = (payload: DeviceScreenType): AppStateActionTypes => ({\n    type: DEVICE_SCREEN,\n    payload\n})\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport store from './store';\n\nimport App from './App';\n\nimport './index.scss';\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}