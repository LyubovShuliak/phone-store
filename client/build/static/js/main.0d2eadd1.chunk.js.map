{"version":3,"sources":["store/reducers/appState.ts","store/reducers/phones.ts","store/reducers/favoritesDevice.ts","store/reducers/cartDeviceList.ts","store/reducers/tablets.ts","store/reducers/accessories.ts","store/reducers/index.ts","constants/actions.ts","store/index.ts","components/Header/MobileHeader/MobileHeader.tsx","components/Header/DesktopHeader/DesktopHeader.tsx","components/Header/Header.tsx","constants/defaultConstants.ts","api/request.ts","store/actions/phones.ts","store/actions/favoritesDevice.ts","store/actions/cartDeviceList.ts","store/actions/tablets.ts","store/actions/accessories.ts","components/DeviceCardItem/DeviceCardItem.tsx","components/SliderDevice/SliderButtonts.tsx","components/Preloader/Preloader.tsx","components/SliderDevice/SliderDevice.tsx","components/SliderImages/SliderImages.tsx","components/Footer/Footer.tsx","components/ShopCategory/ShopCategory.tsx","hooks/useHTTP.hook.ts","pages/MainPage/MainPage.tsx","components/DeviceCardList/DeviceCardList.tsx","components/SmallNavigation/SmallNavigation.tsx","components/Select/Select.tsx","components/Pagination/Pagination.tsx","pages/PhonesPage/PhonesPage.tsx","components/GoBack/GoBack.tsx","pages/FavoritesPage/FavoritePage.tsx","pages/CartPage/CartPage.tsx","pages/TabletsPage/TabletsPage.tsx","pages/NotFoundPage/NotFoundPage.tsx","pages/AccessoriesPage/AccessoriesPage.tsx","components/DeviceFullCard/DeviceFullCard.tsx","App.tsx","routes.tsx","store/actions/appState.ts","index.tsx"],"names":["initialState","deviceScreen","name","value","deviceCount","tablets","phones","accessories","phoneList","error","loading","phoneListState","pages","currentPage","onPage","visible","sorted","currentSortedValue","currentModel","deviceList","tabletList","tabletListState","accessoriesList","accessoriesListState","rootReducer","combineReducers","appState","state","action","type","payload","phone","favoritesDevice","cartDeviceList","tablet","createStore","applyMiddleware","thunk","connect","favoriteDevices","props","useState","openSearchField","setOpenSearchField","location","useLocation","history","useHistory","className","onClick","push","src","style","width","children","marginRight","position","right","cursor","event","document","querySelector","classList","toggle","console","log","pathname","to","length","fontSize","color","preventDefault","target","contains","display","alignItems","height","useEffect","top","alt","ownProps","defaultConstatnts","request","path","a","fetch","response","ok","json","phoneLoading","phoneSuccess","phoneError","loadPhones","dispatch","modificatedPhoneList","map","modificatedAvailabelDevices","availabelDevices","device","images","other","unshift","main","sortedPoneList","sort","b","price","current","slice","setFavoriteDevices","toggleFavoriteDevice","store","getState","duplicate","find","deviceItem","_id","newFavoriteList","listWithoutDuplicate","filter","localStorage","setItem","JSON","stringify","setCartDeviceList","toggleCartDevice","newCartList","tabletsLoading","tabletsSuccess","tabletsError","loadTablets","accessoriesLoading","accessoriesSuccess","accessoriesError","loadAccsseories","modificatedAccessoriesList","item","model","sortedAccessoriesList","startClick","setStartClick","letPress","setLetPress","addToFavotireList","setAddToFavoriteList","addToCartList","setAddToCartList","favorite","routePosition","onMouseDown","Date","onMouseUp","onMouseMove","getTime","title","old","shortInfo","Object","entries","index","description","key","stopPropagation","cartDevice","image","deviceInfo","about","SampleNextArrow","currentSlide","slideCount","slickSliderRef","edgeSlide","breakpoint","responsive","currentBreakpoint","settings","slidesToShow","extraStyle","classNames","join","SamplePrevArrow","Preloader","borderWidth","wrapperWidth","wrapperHeight","border","borderColor","SliderDevice","useRef","dots","infinite","swipeToSlide","speed","initialSlide","nextArrow","prevArrow","ref","SliderImages","appendDots","dot","imageList","body","scrollIntoView","behavior","block","inline","useHTTP","setLoading","setError","data","setData","getReguest","useCallback","cleanError","hotPriceList","newModelList","getNewModelPhones","loadingNewModelPhones","errorNewModelPhones","getHotPricePhones","loadingHotPricePhones","errorHotPricePhones","setImageList","newModelPhones","setNewModelPhones","hotPricePhones","setHotPricePhones","loadHotPricePhones","loadNewModels","SmallNavigation","params","arr","link","Select","itemList","defaultSelectIndex","selectedItem","setSelectedItem","openMenu","setOpenMenu","selectRef","addEventListener","transform","selectItem","Pagination","structureList","setStructureList","leftSpace","rightSpace","paginationList","setPaginationList","first","last","limit","setLimit","updatePagination","page","leftStep","rightStep","i","luft","newValue","pop","currentVissible","list","elem","Number","selectList","selectitemsOnPageList","phoneState","setPhoneListState","phoneLoadSuccss","searchField","setSearchField","noMathes","setNoMathces","selectedSortValue","setSelectedSortValue","selectedItemsOnPAgeValue","setSelectedItemsOnPageValue","loaded","Array","from","Math","ceil","_","handleSort","sortedList","sortedVisible","handlePageStructure","id","onChange","filtered","toLocaleLowerCase","includes","placeholder","findIndex","lineHeight","GoBack","goBack","favoriteDeviceList","setFavoriteDeviceList","chartDeviceList","checkoutDeviceList","setCheckoutDeviceList","totalSum","setTotalSum","deletedItemsId","setDeletedItemsId","every","priceNumber","count","totalSuma","mathcedDevice","removeDeviceFromList","newCheckoutDevice","minusDevice","plusDevice","margin","setTabletListState","NotFoundPage","setAccessoriesListState","keys","productType","match","isLoading","setDevice","useParams","model_name","cart","currentDevice","currentColor","availabelColor","bigImage","newDevice","backgroundColor","newDeviceIndex","abuot","App","routes","exact","checkDeviceSize","screenWidth","currentTarget","innerWidth","window","favoriteDeviceLocalList","getItem","parse","cartDeviceLocalList","removeEventListener","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.0d2eadd1.chunk.js","sourcesContent":["import { DEVICE_SCREEN, SET_DEVICES_COUNT } from '../../constants/actions'\nimport { AppStateInterface, AppStateActionTypes } from '../../interfaces/appStateInterface';\n\nconst initialState: AppStateInterface = {\n    deviceScreen: {\n        name: null,\n        value: null\n    },\n    deviceCount: {\n        tablets: null,\n        phones: null,\n        accessories: null\n    }\n};\n\n\nexport const appState = (state = initialState, action: AppStateActionTypes) => {\n    switch (action.type) {\n        case DEVICE_SCREEN:\n            return { ...state, deviceScreen: action.payload }\n\n        case SET_DEVICES_COUNT:\n            return { ...state, deviceCount: action.payload }\n\n        default:\n            return state\n    }\n}\n","import {\n    PHONE_LIST_LOADING,\n    PHONE_LIST_SUCCESS,\n    PHONE_LIST_ERROR,\n    PHONE_LIST_STATE,\n} from '../../constants/actions'\nimport { phoneState } from '../../interfaces/phonesInterfaces';\nimport { AppStateActionTypes } from '../../interfaces/appStateInterface';\n\n\n\nconst initialState: phoneState = {\n    phoneList: [],\n    error: null,\n    loading: null,\n    phoneListState: {\n        pages: 0,\n        currentPage: 0,\n        onPage: 0,\n        visible: [],\n        sorted: [],\n        currentSortedValue: '',\n    },\n    currentModel: null\n};\n\n\nexport const phone = (state = initialState, action: AppStateActionTypes) => {\n    switch (action.type) {\n        case PHONE_LIST_LOADING:\n            return { ...state, loading: action.loading }\n\n        case PHONE_LIST_SUCCESS:\n            return { ...state, phoneList: action.phoneList }\n\n        case PHONE_LIST_ERROR:\n            return { ...state, error: action.error }\n\n        case PHONE_LIST_STATE:\n            return { ...state, phoneListState: action.phoneListState }\n\n            default:\n            return state\n    }\n}\n","import { SET_FAVORITE_DEVICES } from '../../constants/actions'\nimport { AppStateActionTypes } from '../../interfaces/appStateInterface';\nimport {favoriteDeviceState} from '../../interfaces/favoriteDevice'\n\nconst initialState: favoriteDeviceState = {\n    deviceList: []\n};\n\n\nexport const favoritesDevice = (state = initialState, action: AppStateActionTypes) => {\n    switch (action.type) {\n        case SET_FAVORITE_DEVICES:\n            return { ...state, deviceList: action.deviceList }\n\n        default:\n            return state\n    }\n}\n","import { SET_CART_DEVICE_LIST } from '../../constants/actions'\nimport { AppStateActionTypes } from '../../interfaces/appStateInterface';\nimport {cartDeviceListState} from '../../interfaces/cartDeviceList'\n\nconst initialState: cartDeviceListState = {\n    deviceList: []\n};\n\n\nexport const cartDeviceList = (state = initialState, action: AppStateActionTypes) => {\n    switch (action.type) {\n        case SET_CART_DEVICE_LIST:\n            return { ...state, deviceList: action.deviceList }\n\n        default:\n            return state\n    }\n}\n","import {\n    TABLET_LIST_LOADING,\n    TABLET_LIST_SUCCESS,\n    TABLET_LIST_ERROR,\n    TABLET_LIST_STATE,\n} from '../../constants/actions'\nimport { AppStateActionTypes } from '../../interfaces/appStateInterface';\nimport { tabletState } from '../../interfaces/tabletStateInterface';\n\n\n\nconst initialState: tabletState = {\n    tabletList: [],\n    error: null,\n    loading: null,\n    tabletListState: {\n        pages: 0,\n        currentPage: 0,\n        onPage: 0,\n        visible: [],\n        sorted: [],\n        currentSortedValue: '',\n    },\n    currentModel: null\n};\n\n\nexport const tablet = (state = initialState, action: AppStateActionTypes) => {\n    switch (action.type) {\n        case TABLET_LIST_LOADING:\n            return { ...state, loading: action.loading }\n\n        case TABLET_LIST_SUCCESS:\n            return { ...state, tabletList: action.tabletList }\n\n        case TABLET_LIST_ERROR:\n            return { ...state, error: action.error }\n\n        case TABLET_LIST_STATE:\n            return { ...state, tabletListState: action.tabletListState }\n\n        default:\n            return state\n    }\n}\n","import {\n    ACCESSORIES_LIST_LOADING,\n    ACCESSORIES_LIST_SUCCESS,\n    ACCESSORIES_LIST_ERROR,\n    ACCESSORIES_LIST_STATE,\n} from '../../constants/actions'\nimport { AppStateActionTypes } from '../../interfaces/appStateInterface';\nimport { accessoriesState } from '../../interfaces/accessoriesStateInterface';\n\n\n\nconst initialState: accessoriesState = {\n    accessoriesList: [],\n    error: null,\n    loading: null,\n    accessoriesListState: {\n        pages: 0,\n        currentPage: 0,\n        onPage: 0,\n        visible: [],\n        sorted: [],\n        currentSortedValue: '',\n    },\n    currentModel: null\n};\n\n\nexport const accessories = (state = initialState, action: AppStateActionTypes) => {\n    switch (action.type) {\n        case ACCESSORIES_LIST_LOADING:\n            return { ...state, loading: action.loading }\n\n        case ACCESSORIES_LIST_SUCCESS:\n            return { ...state, accessoriesList: action.accessoriesList }\n\n        case ACCESSORIES_LIST_ERROR:\n            return { ...state, error: action.error }\n\n        case ACCESSORIES_LIST_STATE:\n            return { ...state, accessoriesListState: action.accessoriesListState }\n\n        default:\n            return state\n    }\n}\n","import { combineReducers, Reducer, AnyAction } from 'redux';\nimport { appState } from './appState';\nimport { phone } from './phones';\nimport { favoritesDevice } from './favoritesDevice';\nimport { cartDeviceList } from './cartDeviceList';\nimport { tablet } from './tablets'\nimport {accessories} from './accessories'\n\nimport { AppStateInterface } from '../../interfaces/appStateInterface';\n\n\n// export interface ApplicationState {\n//     appState: AppStateInterface;\n//   }\n\n// export default combineReducers<AppStateInterface, AnyAction>({appState});\n\nexport const rootReducer = combineReducers({\n  appState,\n  phone,\n  favoritesDevice,\n  cartDeviceList,\n  tablet,\n  accessories\n})\n\nexport type RootState = ReturnType<typeof rootReducer>","export const DEVICE_SCREEN = 'DEVICE_SCREEN';\nexport const SET_DEVICES_COUNT = 'SET_DEVICES_COUNT'\n\nexport const REQUEST_LOADING = 'REQUEST_LOADING';\nexport const REQUEST_FAILED = 'REQUEST_FAILED';\n\nexport const PHONE_LIST_LOADING = 'PHONE_LIST_LOADING';\nexport const PHONE_LIST_ERROR = 'PHONE_LIST_ERROR';\nexport const PHONE_LIST_SUCCESS = 'PHONE_LIST_SUCCESS';\nexport const PHONE_LIST_STATE = 'PHONE_LIST_STATE'\n\nexport const TABLET_LIST_LOADING = 'TABLET_LIST_LOADING'\nexport const TABLET_LIST_SUCCESS = 'TABLET_LIST_SUCCESS'\nexport const TABLET_LIST_ERROR = 'TABLET_LIST_ERROR'\nexport const TABLET_LIST_STATE = 'TABLET_LIST_STATE'\n\nexport const ACCESSORIES_LIST_LOADING = 'ACCESSORIES_LIST_LOADING'\nexport const ACCESSORIES_LIST_SUCCESS = 'ACCESSORIES_LIST_SUCCESS'\nexport const ACCESSORIES_LIST_ERROR = 'ACCESSORIES_LIST_ERROR'\nexport const ACCESSORIES_LIST_STATE = 'ACCESSORIES_LIST_STATE'\n\nexport const SET_FAVORITE_DEVICES = 'SET_FAVORITE_DEVICES';\n\nexport const SET_CART_DEVICE_LIST = 'SET_CART_DEVICE_LIST'","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport {rootReducer} from './reducers'\n\nexport default createStore(rootReducer, applyMiddleware(thunk))","import React, { MouseEvent, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, useLocation, useHistory } from 'react-router-dom';\nimport { RootState } from '../../../store/reducers';\n\nimport './MobileHeader.scss';\n\nconst MobileHeader = (props: any) => {\n    const { favoriteDevices, cartDeviceList, deviceScreen } = props;\n    const [openSearchField, setOpenSearchField] = useState(false)\n\n    const location = useLocation()\n    let history = useHistory();\n\n    return (\n        <div className=\"header-navigation-burger__wrapper\">\n            <div className=\"header-navigation-burger__line\">\n                <div className=\"header-nav-burger__logo-wrapper\" onClick={() => history.push('/')}>\n                    <img src=\"icons/logo.png\" className=\"logo-image\" style={{ width: '100%' }} />\n                </div>\n\n                {\n                    props.children && deviceScreen.value >= 500\n                        ? (\n                            <div className=\"header-search-field--wrapper\" style={{ marginRight: 20 }}>\n                                <label className=\"header-search-field--label\">\n                                    <img src=\"/icons/Search.svg\" style={{ position: 'absolute', right: 25, cursor: 'pointer' }} />\n\n                                    {props.children}\n                                </label>\n                            </div>\n                        )\n                        : props.children && deviceScreen.value < 500\n                            ? (\n                                <div className=\"header-search-field--wrapper\">\n                                    <div\n                                        className=\"header-search-field--icon-wrapper header-search-field--icon-wrapper--mobile\"\n                                        onClick={() => setOpenSearchField(true)}\n                                    >\n                                        <img src=\"/icons/Search.svg\" style={{ cursor: 'pointer' }} />\n                                    </div>\n\n                                </div>\n                            )\n                            : null\n\n                }\n\n                <div className=\"header-nav-burger__menu-wrapper\">\n                    <div className=\"menu-toggle\" onClick={(event: any) => {\n                        document.querySelector('.header-nav-burger__nav-wrapper')?.classList.toggle('header-nav-burger__nav-wrapper--active')\n                        document.querySelector('.menu-toggle')?.classList.toggle('active')\n\n\n                    }}>\n                        <div className=\"hamburger\">\n                            <span></span>\n                            <span></span>\n                            <span></span>\n                        </div>\n                        <div className=\"cross\">\n                            <span></span>\n                            <span></span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n\n            <nav className=\"header-nav-burger__nav-wrapper\">\n                <ul className=\"header-nav-burger__item-wrapper\" onClick={() => {\n                    console.log('click');\n\n                }}>\n                    <li className={`header-nav-burger__item ${location.pathname === \"/\" ? \"header-nav-burger__item--active\" : \"\"}`} onClick={() => history.push('/')}>\n                        <Link to=\"/\" className=\"header-nav-burger__link third-title \">home</Link>\n                    </li>\n\n                    <li className={`header-nav-burger__item ${location.pathname === \"/phones\" ? \"header-nav-burger__item--active\" : \"\"}`} onClick={() => history.push('/phones')}>\n                        <Link to=\"/phones\" className=\"header-nav-burger__link third-title \">phones</Link>\n                    </li>\n\n                    <li className={`header-nav-burger__item ${location.pathname === \"/tablets\" ? \"header-nav-burger__item--active\" : \"\"}`} onClick={() => history.push('/tablets')}>\n                        <Link to=\"/tablets\" className=\"header-nav-burger__link third-title \">tablet</Link>\n                    </li>\n\n                    <li className={`header-nav-burger__item ${location.pathname === \"/accessories\" ? \"header-nav-burger__item--active\" : \"\"}`} onClick={() => history.push('/accessories')}>\n                        <Link to=\"/accessories\" className=\"header-nav-burger__link third-title \">accessories</Link>\n                    </li>\n\n                    <li className={`header-nav-burger__item ${location.pathname === \"/favorites\" ? \"header-nav-burger__item--active\" : \"\"}`} onClick={() => history.push('/favorites')}>\n                        <div style={{ width: \"max-conent\", position: \"relative\" }}>\n                            {\n                                favoriteDevices.length ? (\n                                    <div className=\"badge-wrapper badge-wrapper--mobile-header\">\n                                        <div style={{\n                                            fontSize: 11,\n                                            color: '#fff'\n                                        }}>{favoriteDevices.length}</div>\n                                    </div>\n                                ) : null\n                            }\n                            <Link to=\"/favorites\" className=\"header-nav-burger__link third-title \">Favotites</Link>\n                        </div>\n                    </li>\n                    <li className={`header-nav-burger__item ${location.pathname === \"/cart\" ? \"header-nav-burger__item--active\" : \"\"}`} onClick={() => history.push('/cart')}>\n                        <div style={{ width: \"max-conent\", position: \"relative\" }}>\n                            {\n                                favoriteDevices.length ? (\n                                    <div className=\"badge-wrapper badge-wrapper--mobile-header\">\n                                        <div style={{\n                                            fontSize: 11,\n                                            color: '#fff'\n                                        }}>{cartDeviceList.length}</div>\n                                    </div>\n                                ) : null\n                            }\n                            <Link to=\"/cart\" className=\"header-nav-burger__link third-title \">Chart</Link>\n                        </div>\n\n                    </li>\n                </ul>\n            </nav>\n\n            {\n                openSearchField && (\n\n                    <div\n                        className=\"search-field-alert--wrapper\"\n                        onClick={(event: MouseEvent<HTMLElement>) => {\n                            event.preventDefault();\n\n                            const target = event.target as HTMLElement\n\n                            if (target.classList.contains('search-field-alert--wrapper')) {\n                                setOpenSearchField(false)\n                            }\n                        }}\n                    >\n                        <div className=\"search-field-alert__content search-field-alert__content--mobile\">\n                            <div\n                                className=\"search-field-alert__cross\"\n                                onClick={() => setOpenSearchField(false)}\n                            >\n                                <img src=\"/icons/cross.svg\" className=\"search-field-alert__cross--icon\" />\n                            </div>\n                            <label style={{\n                                display: 'flex',\n                                alignItems: 'center',\n                                width: '100%',\n                                height: '100%'\n                            }}>\n\n                                <img src=\"/icons/Search.svg\" style={{ position: 'absolute', right: 25 }} />\n                                {props.children}\n                            </label>\n\n                        </div>\n                    </div>\n                )\n            }\n        </div>\n    )\n};\n\nconst mapStateToProps = (state: RootState) => ({\n    favoriteDevices: state.favoritesDevice.deviceList,\n    cartDeviceList: state.cartDeviceList.deviceList,\n    deviceScreen: state.appState.deviceScreen\n});\n\nconst matDispatchToProps = () => ({\n\n});\n\nexport default connect(mapStateToProps, matDispatchToProps)(MobileHeader);","import React, { FC, useEffect, useState, MouseEvent } from 'react';\nimport { connect } from 'react-redux';\n\nimport './DesktopHeader.scss';\nimport { Link, useParams, useLocation, useHistory } from 'react-router-dom';\nimport { RootState } from '../../../store/reducers';\nimport { favoriteDevice } from '../../../interfaces/favoriteDevice';\nimport { cartDevice } from '../../../interfaces/cartDeviceList';\nimport { DeviceScreenType } from '../../../interfaces/appStateInterface';\n\ninterface DesktopHeaderInterface {\n    favoriteDevices: favoriteDevice[],\n    cartDeviceList: cartDevice[],\n    deviceScreen: DeviceScreenType\n}\n\nconst DesktopHeader: FC<DesktopHeaderInterface> = (props) => {\n    const { favoriteDevices, cartDeviceList, deviceScreen } = props;\n    const [openSearchField, setOpenSearchField] = useState(false)\n\n    const location = useLocation()\n    let history = useHistory()\n\n    useEffect(() => {\n        if (deviceScreen.value! >= 910) {\n            setOpenSearchField(false)\n        }\n    }, [deviceScreen])\n\n\n    // console.log('props.children: ', props.children);\n\n\n    return (\n        <div className=\"header-navigation__wrapper\">\n            <div className=\"header-navigation__item\">\n                <div className=\"header-nav__logo-wrapper\" onClick={() => history.push('/')}>\n                    <img src=\"icons/logo.png\" className=\"logo-image\" style={{ width: '100%' }} />\n                </div>\n                <nav className=\"header-nav__nav-wrapper\">\n                    <ul className=\"header-nav__item-wrapper\">\n                        <li className={`header-nav__item ${location.pathname === \"/\" ? \"header-nav__item--active\" : \"\"}`} onClick={() => history.push('/')}>\n                            <Link to=\"/\" className=\"header-nav__link\">home</Link>\n                        </li>\n\n                        <li className={`header-nav__item ${location.pathname === \"/phones\" ? \"header-nav__item--active\" : \"\"}`} onClick={() => history.push('/phones')}>\n                            <Link to=\"/phones\" className=\"header-nav__link\">phones</Link>\n                        </li>\n\n                        <li className={`header-nav__item ${location.pathname === \"/tablets\" ? \"header-nav__item--active\" : \"\"}`} onClick={() => history.push('/tablets')}>\n                            <Link to=\"/tablets\" className=\"header-nav__link\">tablet</Link>\n                        </li>\n\n                        <li className={`header-nav__item ${location.pathname === \"/accessories\" ? \"header-nav__item--active\" : \"\"}`} onClick={() => history.push('/accessories')}>\n                            <Link to=\"/accessories\" className=\"header-nav__link\">accessories</Link>\n                        </li>\n                    </ul>\n                </nav>\n            </div>\n\n            {\n                props.children && deviceScreen.value! >= 910\n                    ? (\n\n                        <div className=\"header-search-field--wrapper\">\n                            <label className=\"header-search-field--label\">\n                                <img src=\"/icons/Search.svg\" style={{ position: 'absolute', right: 25, cursor: 'pointer' }} />\n                                {props.children}\n                            </label>\n                        </div>\n                    )\n                    : props.children && deviceScreen.value! < 910\n                        ? (\n                            <div className=\"header-search-field--wrapper\">\n                                <div\n                                    className=\"header-search-field--icon-wrapper\"\n                                    onClick={() => setOpenSearchField(true)}\n                                >\n                                    <img src=\"/icons/Search.svg\" style={{ cursor: 'pointer' }} />\n                                </div>\n\n                            </div>\n                        )\n                        : null\n            }\n\n            <div className=\"header-navigation__item\">\n\n                <div className={`header-navigation__icon-wrapper ${location.pathname === \"/favorites\" ? \"header-navigation__icon-wrapper--active\" : \"\"}`} onClick={() => history.push('/favorites')}>\n                    {\n                        favoriteDevices.length ? (\n                            <div className=\"badge-wrapper\" style={{\n                                top: 15,\n                                right: 15,\n                            }}>\n                                <div style={{\n                                    fontSize: 11,\n                                    color: '#fff'\n                                }}>{favoriteDevices.length}</div>\n                            </div>\n                        ) : null\n                    }\n                    <Link to=\"/favorites\" className=\"header-navigation__icon-link\">\n                        <img src=\"/icons/heart.svg\" alt=\"favorites\" />\n                    </Link>\n                </div>\n                <div className={`header-navigation__icon-wrapper ${location.pathname === \"/cart\" ? \"header-navigation__icon-wrapper--active\" : \"\"}`} onClick={() => history.push('/cart')}>\n                    {\n                        cartDeviceList.length ? (\n                            <div className=\"badge-wrapper\" style={{\n                                top: 15,\n                                right: 15,\n                            }}>\n                                <div style={{\n                                    fontSize: 11,\n                                    color: '#fff'\n                                }}>{cartDeviceList.length}</div>\n                            </div>\n                        ) : null\n                    }\n                    <Link to=\"/cart\" className=\"header-navigation__icon-link\">\n                        <img src=\"/icons/shopping-bag.svg\" alt=\"shopping-bag\" />\n                    </Link>\n                </div>\n            </div>\n\n            {\n                openSearchField && (\n                    <div\n                        className=\"search-field-alert--wrapper\"\n                        onClick={(event: MouseEvent<HTMLElement>) => {\n                            event.preventDefault();\n\n                            const target = event.target as HTMLElement\n\n                            if (target.classList.contains('search-field-alert--wrapper')) {\n                                setOpenSearchField(false)\n                            }\n                        }}\n                    >\n\n                        <div className=\"search-field-alert__content\">\n                            <div\n                                className=\"search-field-alert__cross\"\n                                onClick={() => setOpenSearchField(false)}\n                            >\n                                <img src=\"/icons/cross.svg\" className=\"search-field-alert__cross--icon\" />\n                            </div>\n                            <label style={{\n                                display: 'flex',\n                                alignItems: 'center',\n                                width: '100%',\n                                height: '100%'\n                            }}>\n\n                                <img src=\"/icons/Search.svg\" style={{ position: 'absolute', right: 25 }} />\n                                {props.children}\n                            </label>\n\n                        </div>\n\n                    </div>\n                )\n            }\n        </div>\n    )\n}\n\nconst mapStateToProps = (state: RootState) => ({\n    favoriteDevices: state.favoritesDevice.deviceList,\n    cartDeviceList: state.cartDeviceList.deviceList,\n    deviceScreen: state.appState.deviceScreen\n});\n\nconst matDispatchToProps = () => ({\n\n});\n\nexport default connect(mapStateToProps, matDispatchToProps)(DesktopHeader);","import React, { FC } from 'react';\nimport { DeviceScreenType } from '../../interfaces/appStateInterface';\nimport { connect } from 'react-redux';\nimport { RootStateInterface } from '../../interfaces/rootStateInterface';\nimport MobileHeader from './MobileHeader/MobileHeader';\nimport DesktopHeader from './DesktopHeader/DesktopHeader';\n\nconst Header: FC<MainPageInterface> = (props) => {\n    const { deviceScreen } = props;\n\n    return (\n        <header className=\"footer\">\n            {\n                deviceScreen.value! <= 750\n                    ? <MobileHeader>{props.children}</MobileHeader>\n                    : <DesktopHeader>{props.children}</DesktopHeader>\n            }\n        </header>\n    )\n}\n\nexport interface MainPageInterface {\n    deviceScreen: DeviceScreenType\n}\n\n\nconst mapStateToProps = (state: RootStateInterface, ownProps: any) => ({\n    deviceScreen: state.appState.deviceScreen\n})\n\n// const mapDispatchToProps = (dispatch) => ({\n\n// })\n\n\n\nexport default connect(mapStateToProps, null)(Header)","export const defaultConstatnts = {\n    domain: \"https://phone-store-ts.herokuapp.com\",\n    // domain: \"https://senyateststore.herokuapp.com\",\n    // domain: \"http://localhost:5000\",\n    clientHost: \"http://localhost:3000\"\n}","import { defaultConstatnts } from '../constants/defaultConstants';\n\nexport const request = async (path: string) => {\n    try {\n        const response = await fetch(defaultConstatnts.domain + path);\n\n        if (!response.ok) {\n            throw response\n        }\n\n        const json = await response.json();\n        \n        return json\n    \n    } catch (err) {\n        console.log('error of request', err)\n        throw err\n    }\n\n}\n\nexport const postRequest = async (path: string, data: any) => {\n    try {\n        const response = await fetch(defaultConstatnts.domain + path, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n                // 'Content-Type': 'application/x-www-form-urlencoded',\n              },\n            body: JSON.stringify(data)\n        });\n\n        if (!response.ok) {\n            throw response\n        }\n\n        const json = await response.json();\n        return json\n    \n    } catch (err) {\n        console.log('error of post request', err)\n    }\n\n}","import { ThunkAction } from 'redux-thunk';\nimport { Action } from 'redux'\n\nimport {\n    PHONE_LIST_LOADING,\n    PHONE_LIST_ERROR,\n    PHONE_LIST_SUCCESS,\n    PHONE_LIST_STATE,\n} from '../../constants/actions';\nimport { request, postRequest } from '../../api/request';\nimport { AppStateActionTypes } from '../../interfaces/appStateInterface';\nimport { RootStateInterface } from '../../interfaces/rootStateInterface';\nimport { phoneCardInterface, phoneListStateType } from '../../interfaces/phonesInterfaces';\nimport { phone } from '../reducers/phones';\n\nexport const phoneLoading = (loading: boolean): AppStateActionTypes => ({\n    type: PHONE_LIST_LOADING,\n    loading\n});\n\nexport const phoneSuccess = (phoneList: phoneCardInterface[]): AppStateActionTypes => ({\n    type: PHONE_LIST_SUCCESS,\n    phoneList\n})\n\nexport const phoneError = (error: any): AppStateActionTypes => ({\n    type: PHONE_LIST_ERROR,\n    error\n})\n\nexport const phoneListState = (phoneListState: phoneListStateType): AppStateActionTypes => ({\n    type: PHONE_LIST_STATE,\n    phoneListState\n})\n\nexport const loadPhones = (): ThunkAction<void, RootStateInterface, unknown, Action<string>> => {\n    return async dispatch => {\n        dispatch(phoneLoading(true));\n        try {\n            const phones: phoneCardInterface[] = await request('/api/phone/list');\n\n            // add mainImage ro other imageList, ecause in db they not connected\n            const modificatedPhoneList = phones.map(phone => {\n                const modificatedAvailabelDevices = phone.availabelDevices.map(device => {\n                    device.images.other.unshift(device.images.main);\n                    return device\n                });\n                phone.availabelDevices = modificatedAvailabelDevices\n                return phone\n            });\n\n\n            await dispatch(phoneSuccess(modificatedPhoneList));\n\n            // sorted by cheap price\n            const sortedPoneList = phones.sort((a, b) => +a.price.current.slice(1,) - +b.price.current.slice(1,))\n            await dispatch(phoneListState({\n                pages: 0,\n                currentPage: 0,\n                onPage: 0,\n                visible: sortedPoneList,\n                sorted: sortedPoneList,\n                currentSortedValue: 'cheap'\n            }))\n        } catch (err) {\n            console.log(err);\n            dispatch(phoneError(err));\n        } finally {\n            dispatch(phoneLoading(false));\n        }\n    }\n}\n","import {SET_FAVORITE_DEVICES} from '../../constants/actions';\nimport {AppStateActionTypes, DeviceScreenType} from '../../interfaces/appStateInterface';\nimport {favoriteDevice} from '../../interfaces/favoriteDevice';\nimport { ThunkAction } from 'redux-thunk';\nimport { Action } from 'redux';\n\nimport { RootStateInterface } from '../../interfaces/rootStateInterface';\nimport store from '..';\n\nexport const setFavoriteDevices = (deviceList: any):AppStateActionTypes => ({\n    type: SET_FAVORITE_DEVICES,\n    deviceList\n})\n\n\nexport const toggleFavoriteDevice = (device: any):ThunkAction<void, RootStateInterface, unknown, Action<string>> => {\n    return async dispatch => {\n        const {deviceList} = store.getState().favoritesDevice;\n        \n        const duplicate = deviceList.find((deviceItem: favoriteDevice) => deviceItem._id === device._id);\n        let newFavoriteList = null;\n\n        if (!duplicate) {\n            newFavoriteList = [...deviceList, device]\n        } else {\n            const listWithoutDuplicate = deviceList.filter((deviceItem: favoriteDevice) => deviceItem._id !== device._id);\n            newFavoriteList = listWithoutDuplicate\n        }\n\n        dispatch(setFavoriteDevices(newFavoriteList))\n\n        localStorage.setItem('@favotiteDeviceList', JSON.stringify(newFavoriteList))\n\n    }\n}\n\n// export const setToLocalStorageFavorites = ():ThunkAction<void, RootStateInterface, unknown, Action<string>> => {\n//     return async dispatch => {\n        \n//     }\n// }","import {SET_CART_DEVICE_LIST} from '../../constants/actions';\nimport {AppStateActionTypes, DeviceScreenType} from '../../interfaces/appStateInterface';\nimport {cartDevice} from '../../interfaces/cartDeviceList';\nimport { ThunkAction } from 'redux-thunk';\nimport { Action } from 'redux';\n\nimport { RootStateInterface } from '../../interfaces/rootStateInterface';\nimport store from '..';\n\nexport const setCartDeviceList = (deviceList: any):AppStateActionTypes => ({\n    type: SET_CART_DEVICE_LIST,\n    deviceList\n})\n\n\nexport const toggleCartDevice = (device: cartDevice):ThunkAction<void, RootStateInterface, unknown, Action<string>> => {\n    return async dispatch => {\n        const {deviceList} = store.getState().cartDeviceList\n\n        const duplicate = deviceList.find((deviceItem: cartDevice) => deviceItem._id === device._id);\n        let newCartList = null;\n\n        if (!duplicate) {\n            newCartList = [...deviceList, device]\n        } else {\n            const listWithoutDuplicate = deviceList.filter((deviceItem: cartDevice) => deviceItem._id !== device._id);\n            newCartList = listWithoutDuplicate\n        }\n\n        dispatch(setCartDeviceList(newCartList))\n\n        localStorage.setItem('@cartDeviceList', JSON.stringify(newCartList))\n    }\n}\n","import { ThunkAction } from 'redux-thunk';\nimport { Action } from 'redux'\n\nimport {\n    TABLET_LIST_LOADING,\n    TABLET_LIST_SUCCESS,\n    TABLET_LIST_ERROR,\n    TABLET_LIST_STATE,\n} from '../../constants/actions';\nimport { request, postRequest } from '../../api/request';\nimport { AppStateActionTypes } from '../../interfaces/appStateInterface';\nimport { RootStateInterface } from '../../interfaces/rootStateInterface';\nimport { phoneCardInterface, phoneListStateType } from '../../interfaces/phonesInterfaces';\nimport { phone } from '../reducers/phones';\nimport { tabletCardInterface } from '../../interfaces/tabletStateInterface';\n\nexport const tabletsLoading = (loading: boolean): AppStateActionTypes => ({\n    type: TABLET_LIST_LOADING,\n    loading\n});\n\nexport const tabletsSuccess = (tabletList: tabletCardInterface[]): AppStateActionTypes => ({\n    type: TABLET_LIST_SUCCESS,\n    tabletList\n})\n\nexport const tabletsError = (error: any): AppStateActionTypes => ({\n    type: TABLET_LIST_ERROR,\n    error\n})\n\nexport const tabletListState = (tabletListState: phoneListStateType): AppStateActionTypes => ({\n    type: TABLET_LIST_STATE,\n    tabletListState\n})\n\n\nexport const loadTablets = (): ThunkAction<void, RootStateInterface, unknown, Action<string>> => {\n    return async dispatch => {\n        dispatch(tabletsLoading(true));\n        try {\n            const tablets: tabletCardInterface[] = await request('/api/tablet/list');\n\n            // add mainImage ro other imageList, ecause in db they not connected\n            const modificatedPhoneList = tablets.map(tablet => {\n                const modificatedAvailabelDevices = tablet.availabelDevices.map(device => {\n                    device.images.other.unshift(device.images.main);\n                    return device\n                });\n                tablet.availabelDevices = modificatedAvailabelDevices\n                return tablet\n            });\n\n\n            await dispatch(tabletsSuccess(modificatedPhoneList));\n\n            // sorted by cheap price\n            const sortedPoneList = tablets.sort((a, b) => +a.price.current.slice(1,) - +b.price.current.slice(1,))\n            await dispatch(tabletListState({\n                pages: 0,\n                currentPage: 0,\n                onPage: 0,\n                visible: sortedPoneList,\n                sorted: sortedPoneList,\n                currentSortedValue: 'cheap'\n            }))\n        } catch (err) {\n            console.log(err);\n            dispatch(tabletsError(err));\n        } finally {\n            dispatch(tabletsLoading(false));\n        }\n    }\n}\n","import { ThunkAction } from 'redux-thunk';\nimport { Action } from 'redux'\n\nimport {\n    ACCESSORIES_LIST_LOADING,\n    ACCESSORIES_LIST_SUCCESS,\n    ACCESSORIES_LIST_ERROR,\n    ACCESSORIES_LIST_STATE,\n} from '../../constants/actions';\nimport { request, postRequest } from '../../api/request';\nimport { AppStateActionTypes } from '../../interfaces/appStateInterface';\nimport { RootStateInterface } from '../../interfaces/rootStateInterface';\nimport { accessoriesCardInterface, accessoriesListStateType } from '../../interfaces/accessoriesStateInterface';\nimport { phone } from '../reducers/phones';\nimport { tabletCardInterface } from '../../interfaces/tabletStateInterface';\n\nexport const accessoriesLoading = (loading: boolean): AppStateActionTypes => ({\n    type: ACCESSORIES_LIST_LOADING,\n    loading\n});\n\nexport const accessoriesSuccess = (accessoriesList: accessoriesCardInterface[]): AppStateActionTypes => ({\n    type: ACCESSORIES_LIST_SUCCESS,\n    accessoriesList\n})\n\nexport const accessoriesError = (error: any): AppStateActionTypes => ({\n    type: ACCESSORIES_LIST_ERROR,\n    error\n})\n\nexport const accessoriesListState = (accessoriesListState: accessoriesListStateType): AppStateActionTypes => ({\n    type: ACCESSORIES_LIST_STATE,\n    accessoriesListState\n})\n\n\nexport const loadAccsseories = (): ThunkAction<void, RootStateInterface, unknown, Action<string>> => {\n    return async dispatch => {\n        dispatch(accessoriesLoading(true));\n        try {\n            const accessories: accessoriesCardInterface[] = await request('/api/accessories/list');\n\n            // add mainImage ro other imageList, ecause in db they not connected\n            const modificatedAccessoriesList = accessories.map(item => {\n                const modificatedAvailabelDevices = item.availabelDevices.map(model => {\n                    model.images.other.unshift(model.images.main);\n                    return model\n                });\n                item.availabelDevices = modificatedAvailabelDevices\n                return item\n            });\n\n\n            await dispatch(accessoriesSuccess(modificatedAccessoriesList));\n\n            // sorted by cheap price\n            const sortedAccessoriesList = accessories.sort((a, b) => +a.price.current.slice(1,) - +b.price.current.slice(1,))\n            await dispatch(accessoriesListState({\n                pages: 0,\n                currentPage: 0,\n                onPage: 0,\n                visible: sortedAccessoriesList,\n                sorted: sortedAccessoriesList,\n                currentSortedValue: 'cheap'\n            }))\n        } catch (err) {\n            console.log(err);\n            dispatch(accessoriesError(err));\n        } finally {\n            dispatch(accessoriesLoading(false));\n        }\n    }\n}\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { RootStateInterface } from '../../interfaces/rootStateInterface';\nimport { useHistory } from \"react-router-dom\";\n\nimport \"./DeviceCardItem.scss\";\nimport { phoneCardInterface } from '../../interfaces/phonesInterfaces';\nimport { phones } from '../../store/actions';\nimport { favoritesDevice, cartDeviceList } from '../../store/actions';\nimport { favoriteDevice } from '../../interfaces/favoriteDevice';\nimport { cartDevice } from '../../interfaces/cartDeviceList';\n\n\ninterface PhoneCardInterface {\n    device: any, // device type\n    toggleFavoriteDevice: any,\n    favoriteDevices: favoriteDevice[],\n    cartDeviceList: cartDevice[],\n    toggleCartDevice: any,\n}\n\nconst DeviceCardItem: React.FC<PhoneCardInterface> = ({ device, toggleFavoriteDevice, favoriteDevices, toggleCartDevice, cartDeviceList }) => {\n    let history = useHistory();\n    const [startClick, setStartClick] = useState<Date | null>(null);\n    const [letPress, setLetPress] = useState(true); // if we move when mouseDown being, we don't navigate on fullPhoneScreen. Because we wont use drag nad drop with slider\n    const [addToFavotireList, setAddToFavoriteList] = useState<boolean | null>(null);\n    const [addToCartList, setAddToCartList] = useState<boolean | null>(null);\n\n\n    useEffect(() => {\n        const favorite = favoriteDevices.find((item: favoriteDevice) => item._id === device._id);\n\n        if (favorite) {\n            setAddToFavoriteList(true)\n        } else {\n            setAddToFavoriteList(false)\n        }\n    }, [favoriteDevices])\n\n\n    useEffect(() => {\n        const favorite = cartDeviceList.find((item: cartDevice) => item._id === device._id);\n\n        if (favorite) {\n            setAddToCartList(true)\n        } else {\n            setAddToCartList(false)\n        }\n    }, [cartDeviceList])\n\n\n    const handleAddToFavoriteList = () => {\n        toggleFavoriteDevice(device)\n    }\n\n    const handleAddToCartList = () => {\n        const cartDevice = {\n            _id: device._id,\n            price: device.price,\n            image: device.availabelDevices[0].images.main,\n            title: device.title,\n            routePosition: device.routePosition,\n            deviceInfo: {\n                ...device.deviceInfo\n            },\n            about: device?.about\n        }\n\n        toggleCartDevice(cartDevice)\n        // toggleCartDevice(phone)\n    }\n\n    return (\n        <div\n            className=\"phone-card\"\n            onClick={(event) => {\n                if (letPress) {\n\n                    // console.log('device: ', device);\n                    history.push(device.routePosition)\n                    // if (device.type === 'tablet') {\n                    //     history.push(`/tablet/${device.routePosition}`)\n                    // } else if (device.type){\n                    //     history.push(device.routePosition)\n                    // } else {\n                    //     history.push(`/phone/${device.routePosition}`)\n                    // }\n\n\n                }\n            }}\n            onMouseDown={(event) => {\n                setStartClick(new Date())\n                setLetPress(true)\n            }}\n            onMouseUp={() => {\n                setStartClick(null)\n            }}\n            onMouseMove={(event) => {\n                if (startClick) {\n                    const currentDate = new Date();\n                    const diff = currentDate.getTime() - startClick!.getTime();\n\n                    if (diff < 200) {\n\n                    } else {\n                        setLetPress(false)\n                    }\n                }\n            }}\n        >\n            <div className=\"phone-card__image--wrapper\">\n                <img src={device.availabelDevices[0].images.main} alt={device.title} className=\"phone-card__image--item\" />\n            </div>\n            <div className=\"phone-card__content\">\n                <p className=\"phone-card__title\">{device.title}</p>\n               <div>\n               <div className=\"phone-card__price\">\n                    <p className=\"phone-card__current-price\">{device.price.current}</p>\n                    <p className=\"phone-card__old-price\">{device.price.old}</p>\n                </div>\n\n                <div className=\"phone-card__line\"></div>\n                {/* \n                <div className=\"card-specification--list\">\n                    <div className=\"card-specification--item\">\n                        <div className=\"card-specification__name\">Screen</div>\n                        <div className=\"card-specification__value\">{device.deviceInfo.screen}</div>\n                    </div>\n\n                    <div className=\"card-specification--item\">\n                        <div className=\"card-specification__name\">Processor</div>\n                        <div className=\"card-specification__value\">{device.deviceInfo.processor}</div>\n                    </div>\n\n                    <div className=\"card-specification--item\">\n                        <div className=\"card-specification__name\">Camera</div>\n                        <div className=\"card-specification__value\">{device.deviceInfo.camera}</div>\n                    </div>\n                </div> */}\n\n                {\n                    device.shortInfo && (\n                        <div className=\"card-specification--list\">\n                            {\n                                Object.entries(device.shortInfo).map((item: [string, any], index: number) => {\n                                    const [name, description] = item;\n\n                                    return (\n                                        <div className=\"card-specification--item\" key={name + index}>\n                                            <p className=\"card-specification__name\">{name}</p>\n                                            <p className=\"card-specification__value\">{description}</p>\n                                        </div>\n                                    )\n                                })\n                            }\n                        </div>\n                    )\n                }\n\n                <div className=\"phone-card__button--wrapper\" onClick={(event) => event.stopPropagation()}>\n                    <div className={`button__add-cart--wrapper phone-card__add-cart--wrapper ${addToCartList ? 'button__add-cart--active' : ''}`} >\n                        <div\n                            onClick={handleAddToCartList}\n                        >\n                            Add to cart\n                            </div>\n                    </div>\n                    <div className=\"button__favorite--wrapper phone-card__favorite--wrapper\" onClick={handleAddToFavoriteList}>\n                        <img\n                            src={`${addToFavotireList ? '/icons/heart-filed.svg' : '/icons/heart.svg'}`}\n                            alt=\"favorite\"\n                            className=\"button__favorite--icon\"\n                        />\n                    </div>\n                </div>\n\n               </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state: RootStateInterface) => ({\n    favoriteDevices: state.favoritesDevice.deviceList,\n    cartDeviceList: state.cartDeviceList.deviceList\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    toggleFavoriteDevice: (device: favoriteDevice) => dispatch(favoritesDevice.toggleFavoriteDevice(device)),\n    toggleCartDevice: (device: cartDevice) => dispatch(cartDeviceList.toggleCartDevice(device))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DeviceCardItem)","import React, { useState } from 'react';\nimport \"./SliderButtons.scss\";\n\nexport const SampleNextArrow = (props: any) => {\n    const { className, style, onClick, currentSlide, slideCount, slickSliderRef } = props;\n    // const [visibleSlides, setVisibbleSlides] = useState(null);\n    // console.log(props);\n\n    let edgeSlide = false;\n    // console.log(slickSliderRef.current);\n\n    if (slickSliderRef.current) {\n        const { breakpoint } = slickSliderRef.current.state;\n        const { responsive } = slickSliderRef.current.props;\n\n        const currentBreakpoint = responsive ? responsive.find((item: any) => item.breakpoint === breakpoint) : null;\n\n        let visibleSlides = null;\n        if (currentBreakpoint) {\n            visibleSlides = currentBreakpoint.settings.slidesToShow\n        } else {\n            visibleSlides = slickSliderRef.current.props.slidesToShow; // default slides to show.\n        }        \n        \n        edgeSlide = currentSlide === slideCount - visibleSlides ? true : false;\n    }\n\n\n    const extraStyle = [\n        edgeSlide ? \"slider-buttons--not-active\" : \"\",\n        props.classNames\n    ]\n\n    return (\n        <div\n            className={`slider-buttons slider-buttons--left ${extraStyle.join(\" \")}`}\n            onClick={onClick}\n        >\n            <img src={edgeSlide ? \"./icons/arrow.svg\" : \"./icons/arrow-black.svg\"} alt=\"arrow\" className=\"slider-buttons__arrow slider-buttons__arrow--next\" />\n        </div>\n    )\n}\n\n\nexport const SamplePrevArrow = (props: any) => {\n    const { className, style, onClick, currentSlide, slideCount } = props;\n    const edgeSlide = currentSlide === 0 ? true : false;\n\n    const extraStyle = [\n        edgeSlide ? \"slider-buttons--not-active\" : \"\",\n        props.classNames\n    ]\n\n    return (\n        <div\n            className={`slider-buttons slider-buttons--right ${extraStyle.join(\" \")}`}\n            onClick={onClick}\n        >\n            <img src={edgeSlide ? \"./icons/arrow.svg\" : \"./icons/arrow-black.svg\"} alt=\"arrow\" className=\"slider-buttons__arrow slider-buttons__arrow--prev\" />\n        </div>\n    )\n}","import React from 'react';\nimport \"./Preloader.scss\";\n\nexport const Preloader = (props: any) => {\n    const {\n        color = 'black',\n        width = 64,\n        height = 64,\n        borderWidth = 6,\n        wrapperWidth = 64,\n        wrapperHeight = 64\n    } = props;\n    return (\n        <div className=\"preloader-container\" style={{\n            width: `${wrapperWidth}px`,\n            height: `${wrapperHeight}px`,\n        }}>\n            <div className=\"preloader\" style={{\n                border: `${borderWidth}px solid #fff`,\n                width: `${width}px`,\n                height: `${height}px`,\n                borderColor: `${color} transparent ${color} transparent`,\n            }} />\n        </div>\n    )\n}","import React, { FC, useRef, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport Slider from 'react-slick';\n\nimport \"./SliderDevice.scss\";\n\nimport DeviceCardItem from '../DeviceCardItem/DeviceCardItem';\nimport { SampleNextArrow, SamplePrevArrow } from './SliderButtonts';\nimport { Preloader } from '../Preloader/Preloader';\nimport { log } from 'console';\n\ntype sliderDeviceInterface = {\n    deviceList: any,\n    error?: any,\n    loading?: boolean | null\n}\n\nconst SliderDevice: FC<sliderDeviceInterface> = ({deviceList, error, loading}) => {\n    const slickSliderRef = useRef(null);\n\n\n    const settings = {\n        dots: false,\n        infinite: false,\n        swipeToSlide: true,\n        speed: 500,\n        slidesToShow: 4,\n        initialSlide: 0,\n        responsive: [\n            {\n                breakpoint: 1388 + 64, // padding on this width + width slider * counter  = (150 * 2) + 272 * 4 = 1388. (marginLeft + margimRight) * count + = (8 + 8) * 4\n                settings: {\n                    initialSlide: 0,\n                    slidesToShow: 4,\n                }\n            },\n            {\n                breakpoint: 1300, // padding on this width + width slider * counter  = (100 * 2) + 272 * 3 = 1016. (marginLeft + margimRight) * count + = (8 + 8) * 3\n                settings: {\n                    initialSlide: 0,\n                    slidesToShow: 3,\n                }\n            },\n            {\n                breakpoint: 780, // padding on this width + width slider * counter  = (50 * 2) + 272 * 2 = 644. (marginLeft + margimRight) * count + = (8 + 8) * 2\n                settings: {\n                    initialSlide: 0,\n                    slidesToShow: 2,\n                }\n            },\n            {\n                breakpoint: 550, // padding on this width + width slider * counter = (50 * 2) + 272 * 1 = 372. (marginLeft + margimRight) * count + = (8 + 8) * 1\n                settings: {\n                    initialSlide: 0,\n                    slidesToShow: 1,\n                }\n            }\n        ],\n        nextArrow: <SampleNextArrow slickSliderRef={slickSliderRef} classNames=\"slider-buttons__device\" />,\n        prevArrow: <SamplePrevArrow slickSliderRef={slickSliderRef} classNames=\"slider-buttons__device\" />,\n    }\n\n    // useEffect(() => {\n    //     console.log('loadingHotPricePhones');\n\n    // }, [loading])\n\n    // console.log(\n    //     'deviceList: ', deviceList,\n    //     'loading: ', loading,\n    //     // 'deviceList: ', deviceList,\n    // );\n    \n    return (\n        <div className=\"slider-devices\">\n\n            {\n                loading && !deviceList.length\n                    ? (\n                        <div className=\"preloader-wrapper--center\">\n                            <Preloader />\n                            </div>\n                    )\n                    : error ? (\n                        <h1>We can't load data, please try to reload page</h1>\n                    )\n                        : deviceList.length ? (\n                            <Slider {...settings} ref={slickSliderRef}>\n                                {\n                                    deviceList.map((device: any) => <DeviceCardItem device={device} key={device._id} />)\n                                }\n                            </Slider>\n                        ) : null\n\n            }\n        </div>\n    )\n}\n\nexport default SliderDevice","import React, { FC, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport Slider from 'react-slick';\n\nimport \"./SliderImages.scss\";\n\nimport DeviceCardItem from '../DeviceCardItem/DeviceCardItem';\nimport { SampleNextArrow, SamplePrevArrow } from '../SliderDevice/SliderButtonts';\n\ntype sliderImagesInterface = {\n    imageList: any\n}\n\nconst SliderImages: FC<sliderImagesInterface> = (props) => {\n    const slickSliderRef = useRef(null);\n    // console.log(props);\n\n    const settings = {\n        dots: true,\n        infinite: false,\n        swipeToSlide: true,\n        speed: 500,\n        slidesToShow: 1,\n        initialSlide: 0,\n        appendDots: (dots: any) => {\n            return (\n                <div>\n                    <div className=\"slider-images__bottom-dots--wrapper\">\n                        {\n                            dots.map((dot: any, index: number) => (\n                                <div\n                                    className={`slider-images__bottom-dots ${dot.props.className === \"slick-active\" ? \"slider-images__bottom-dots--active\" : \"\"}`}\n                                    onClick={dot.props.children.props.onClick}\n                                    key={index}\n                                >\n                                </div>\n                            )\n                            )\n                        }\n                    </div>\n                </div>\n\n            )\n        },\n        nextArrow: <SampleNextArrow slickSliderRef={slickSliderRef} classNames=\"slider-buttons__big-image slider-buttons__big-image--right\" />,\n        prevArrow: <SamplePrevArrow slickSliderRef={slickSliderRef} classNames=\"slider-buttons__big-image slider-buttons__big-image--left\" />,\n    }\n\n    return (\n        <div className=\"slider-big-images\">\n            {\n                props.imageList.length ? (\n                    <Slider {...settings} ref={slickSliderRef}>\n                        {\n                            props.imageList.map((image: any) => (\n                                <img src={image} alt=\"\" className=\"slider-images__big-image\" key={image}/>\n                            ))\n                        }\n                    </Slider>\n                ) : null\n            }\n        </div>\n    )\n}\n\nexport default SliderImages","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link, useHistory } from 'react-router-dom';\n\nimport \"./Footer.scss\"\n\nconst Footer = () => {\n    let history = useHistory();\n\n    return (\n        <footer className=\"footer__wrapper\">\n            <div className=\"main-limit footer__content\">\n                <div className=\"footer__logo\" onClick={() => history.push('/')}>\n                    <img src=\"icons/logo.png\" className=\"logo-image\" style={{ width: '100%' }} />\n                </div>\n                <div className=\"footer__navigation__wrapper\">\n                    <nav className=\"footer__navigation\">\n                        <ul className=\"footer__navigation__list\">\n                            <li className=\"footer__navigation__item\">\n                                <Link to=\"\" className=\"uppaercase-text footer__navigation__link\">Github</Link>\n                            </li>\n                            <li className=\"footer__navigation__item\">\n                                <Link to=\"\" className=\"uppaercase-text footer__navigation__link\">Contacts</Link>\n                            </li>\n                            <li className=\"footer__navigation__item\">\n                                <Link to=\"\" className=\"uppaercase-text footer__navigation__link\">Right</Link>\n                            </li>\n                        </ul>\n                    </nav>\n                </div>\n                <div className=\"footer__back-to-top\">\n                    <p className=\"small-text\">Back to top</p>\n                    <div className=\"footer__navigation__back-to-top\" onClick={() => {\n                        document.body.querySelector('.footer')?.scrollIntoView({ behavior: \"smooth\", block: \"end\", inline: \"nearest\" })\n                        // console.log(document.body.querySelector('.header-navigation__wrapper'));\n                        \n                    }}>\n                        <img src=\"./icons/arrow.svg\" alt=\"arrow\" className=\"footer__back-to-top__arrow\" />\n                    </div>\n                </div>\n            </div>\n        </footer>\n    )\n}\n\nexport default connect(null, null)(Footer)","import React, { FC } from 'react';\nimport { connect } from 'react-redux';\nimport { useHistory } from \"react-router-dom\";\nimport { DeviceCountType } from '../../interfaces/appStateInterface';\nimport { RootStateInterface } from '../../interfaces/rootStateInterface';\n\nimport \"./ShopCategory.scss\";\n\nconst ShopCategory: FC<ShopCategoryInterface> = ({ deviceCount }) => {\n    const history = useHistory()\n\n    return (\n        <div className=\"shop-category__list\">\n            <div className=\"shop-category__item\">\n                <img src=\"./icons/phones-catalog-preview.jpg\" alt=\"\" className=\"shop-category__image\" onClick={() => history.push('/phones')} />\n                <div className=\"shop-category__description\">\n                    <p className=\"shop-category__title\">Mobile phones</p>\n                    <p className=\"small-text shop-category__amount\">{deviceCount.phones} models</p>\n                </div>\n            </div>\n\n            <div className=\"shop-category__item\">\n                <img src=\"./icons/tablets-category-preview.png\" alt=\"\" className=\"shop-category__image\" onClick={() => history.push('/tablets')} />\n                <div className=\"shop-category__description\">\n                    <p className=\"shop-category__title\">Tablets</p>\n                    <p className=\"small-text shop-category__amount\">{deviceCount.tablets} models</p>\n                </div>\n            </div>\n\n            <div className=\"shop-category__item\">\n                <img src=\"./icons/accsessories-catalog-preview.jpg\" alt=\"\" className=\"shop-category__image\" onClick={() => history.push('/accessories')} />\n                <div className=\"shop-category__description\">\n                    <p className=\"shop-category__title\">Accessories</p>\n                    <p className=\"small-text shop-category__amount\"> {deviceCount.accessories} models</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\ninterface ShopCategoryInterface {\n    deviceCount: DeviceCountType\n}\n\nconst mapStateToProps = (state: RootStateInterface, ownProps: any) => ({\n    deviceCount: state.appState.deviceCount\n})\n\n\nexport default connect(mapStateToProps, null)(ShopCategory)","\n\nimport { useState, useCallback, useEffect, FC } from 'react';\nimport { request } from '../api/request';\nimport { defaultConstatnts } from '../constants/defaultConstants';\n\ninterface useHTTPInterface {\n    path: string\n}\n\nexport const useHTTP = ()=> {\n    const [loading, setLoading] = useState<null | boolean>(null);\n    const [error, setError] = useState<any>(null);\n    const [response, setResponse] = useState(null);\n    const [data, setData] = useState(null)\n\n\n    const getReguest = useCallback(async (path: string) => {\n        // console.log('request');\n\n        setLoading(true)\n        try {\n            const response = await request(path);\n            setData(response)\n            return response\n            // setResponse(response)\n\n        } catch (err) {\n            console.log('error in HTTP hook', err);\n            setError(err)\n        } finally {\n            setLoading(false)\n        }\n    },[])\n\n    const cleanError = () => {\n        setError(null)\n    }\n\n    return {getReguest, loading, error, data, cleanError}\n}\n\n\n// export const useFetch = (url: string, options: any) => {\n//     const [response, setResponse] = useState(null);\n//     const [error, setError] = useState(null);\n//     const [isLoading, setIsLoading] = useState(false);\n//     useEffect(() => {\n//         const fetchData = async () => {\n//             setIsLoading(true);\n//             try {\n//                 const res = await fetch(defaultConstatnts.domain + url);\n//                 const json = await res.json();\n//                 setResponse(json);\n//                 setIsLoading(false)\n//             } catch (error) {\n//                 setError(error);\n//             }\n//         };\n//         fetchData();\n//     }, []);\n//     return { response, error, isLoading };\n// };","import React, { ChangeEvent, useCallback, useEffect, useState } from 'react';\nimport Header from '../../components/Header/Header';\n\nimport './MainPage.scss';\n\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\n\nimport { connect } from 'react-redux';\nimport { RootStateInterface } from '../../interfaces/rootStateInterface';\nimport { phoneCardInterface } from '../../interfaces/phonesInterfaces';\nimport SliderDevice from '../../components/SliderDevice/SliderDevice';\nimport SliderImages from '../../components/SliderImages/SliderImages';\nimport Footer from '../../components/Footer/Footer';\nimport ShopCategory from '../../components/ShopCategory/ShopCategory';\nimport { useHTTP } from '../../hooks/useHTTP.hook';\nimport { request } from '../../api/request';\n\nlet hotPriceList: any = null;\nlet newModelList: any = null;\n\n\nconst MainPage: React.FC<mainPropsInterfaces> = (props) => {\n    const { getReguest: getNewModelPhones, loading: loadingNewModelPhones, error: errorNewModelPhones } = useHTTP();\n    const { getReguest: getHotPricePhones, loading: loadingHotPricePhones, error: errorHotPricePhones } = useHTTP();\n    const [imageList, setImageList] = useState<string[]>([])\n\n    const [newModelPhones, setNewModelPhones] = useState(newModelList ? newModelList : []);\n    const [hotPricePhones, setHotPricePhones] = useState(hotPriceList ? hotPriceList : []);\n\n    useEffect(() => {\n        // loadNewModels();\n        if (!hotPriceList) {\n            loadHotPricePhones()\n        }\n\n        if (!newModelList) {\n            loadNewModels()\n        }\n\n    }, [])\n\n    useEffect(() => {\n        if (props.deviceScreen.value && props.deviceScreen.value < 700) {\n            if (imageList[0] !== \"icons/big-slider-image-small-1.jpg\") {\n                setImageList([\n                    \"icons/big-slider-image-small-1.jpg\",\n                    \"icons/big-slider-image-small-2.jpg\",\n                    \"icons/big-slider-image-small-3.jpg\",\n                    \"icons/big-slider-image-small-5.jpg\",\n                    \"icons/big-slider-image-small-6.jpg\",\n                ])\n            }\n        } else {\n            if (imageList[0] !== \"icons/big-slider-1.jpg\") {\n                setImageList([\n                    \"icons/big-slider-image-big-1.jpg\",\n                    \"icons/big-slider-image-big-2.jpg\",\n                    \"icons/big-slider-image-big-3.jpg\",\n                    \"icons/big-slider-image-big-4.jpg\",\n                    \"icons/big-slider-image-big-5.jpg\",\n                ])\n            }\n        }\n    }, [props.deviceScreen])\n\n    const loadHotPricePhones = useCallback(async () => {\n        const request = await getHotPricePhones('/api/phone/hot-price');\n\n        if (request) {\n            setHotPricePhones(request)\n            hotPriceList = request\n        }\n    }, [])\n\n    const loadNewModels = useCallback(async () => {\n        const request = await getNewModelPhones('/api/phone/new-models');\n        if (request) {\n            setNewModelPhones(request)\n            newModelList = request\n        }\n    }, [])\n\n\n    return (\n        <div className=\"main-page page\">\n            <Header />\n            <div className=\"main-limit\">\n                <div className=\"main-page__big-slider__wrapper\">\n                    <SliderImages imageList={imageList} />\n                </div>\n\n                <p className=\"main-title main-page__title\">Hot price</p>\n                <SliderDevice deviceList={hotPricePhones} loading={loadingHotPricePhones} error={errorHotPricePhones} />\n\n                <p className=\"main-title main-page__title\">Shop by category</p>\n                <ShopCategory />\n\n                <p className=\"main-title main-page__title\">Brand new models</p>\n                <SliderDevice deviceList={newModelPhones} loading={loadingNewModelPhones} error={errorNewModelPhones} />\n\n            </div>\n            <Footer />\n        </div>\n    )\n}\n\ninterface mainPropsInterfaces {\n    deviceScreen: { name: string | null, value: number | null },\n}\n\nconst mapStateToProps = (state: RootStateInterface, ownProps: any) => ({\n    deviceScreen: state.appState.deviceScreen,\n})\n\nconst mapDispatchToProps = (dispatch: any) => ({\n})\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainPage)","import React from 'react';\nimport { connect } from 'react-redux';\nimport { phoneCardInterface } from '../../interfaces/phonesInterfaces';\nimport DeviceCardItem from '../DeviceCardItem/DeviceCardItem';\n\nimport \"./DeviceCardList.scss\";\n\ninterface cardListInterface {\n    deviceList: any // array of device type\n}\n\nconst DeviceCardList: React.FC<cardListInterface> = ({ deviceList }) => {\n    // console.log(phoneList);\n\n\n    return (\n        <>\n            <div className=\"phone-list\">\n                {\n                    deviceList.map((device: phoneCardInterface) => <DeviceCardItem device={device} key={device._id} />)\n                }\n            </div>\n        </>\n    )\n}\n\nconst mapStateToProps = () => ({});\n\nconst mapDispatchToProps = () => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DeviceCardList)","import React from 'react';\nimport {Link} from 'react-router-dom'\n\nimport './SmallNavigation.scss';\n\ninterface smallNavigation {\n    params: {\n        title: string,\n        link: string\n    }[]\n}\n\nconst SmallNavigation: React.FC<smallNavigation> = ({ params }) => {\n    \n    return (\n        <div className=\"small-navigation\">\n            <Link to=\"/\" className=\"small-navigation__home-link\">\n            <img src=\"/icons/Home.svg\" alt=\"home icon\" className=\"small-navigation__home\" />\n            </Link>\n            {\n                params.map((item, index, arr) => (\n                    <div className=\"small-navigation__img-wrapper\" key={item.title}>\n                        <img src=\"/icons/arrow.svg\" alt=\"greater than icon\" className=\"small-navigation__greater-than-sign\" />\n                        {\n                            index === arr.length - 1\n                                ? <p className=\"small-navigation__text\">{item.title}</p>\n                                : <Link to={item.link} className=\"small-navigation__text small-navigation__link\">{item.title}</Link>\n                        }\n                    </div>\n                ))\n            }\n        </div>\n    )\n}\n\nexport default SmallNavigation;","import React, { FC, useEffect, useRef, useState } from 'react';\nimport \"./Select.scss\";\n\ninterface selectInterface {\n    itemList: itemType[],\n    defaultSelectIndex?: number,\n    setSelectedItem: any,\n    selectedItem: any,\n    width?: number\n}\n\ntype itemType = {\n    title: string,\n    value: string | number\n}\n\nexport const Select: FC<selectInterface> = (props) => {\n    const {\n        itemList,\n        defaultSelectIndex = 0,\n        selectedItem,\n        setSelectedItem,\n        width = 176\n    } = props;\n\n    const [openMenu, setOpenMenu] = useState(false);\n    const selectRef = useRef<HTMLDivElement>(null);\n\n    useEffect(() => {\n        if (!selectedItem) {\n            setSelectedItem(itemList[defaultSelectIndex])\n        }\n    }, [])\n\n    const handleMenu = () => {\n        setOpenMenu(!openMenu)\n    }\n\n    const selectItem = (item: itemType) => {\n        setSelectedItem(item);\n        setOpenMenu(false)\n    }\n\n    // delect click outside and close select\n    useEffect(() => {\n        document.addEventListener('click', (event: any) => {\n            if (selectRef.current && !selectRef.current!.contains(event.target)) {\n                setOpenMenu(false)\n            }\n        })\n    }, [])\n\n    return (\n        <div className=\"custom-select\" ref={selectRef} style={{ width: `${width}px` }}>\n            <div className=\"custom-select__selected-field\" onClick={handleMenu} style={openMenu ? { border: \"1px solid #313237\" } : {}}>\n                <p className=\"buttons-text custom-select__selected-text\">{selectedItem.title} </p>\n                <img src={\"/icons/arrow.svg\"} className=\"custom-select__arrow\" style={openMenu ? { transform: \"rotate(90deg)\" } : {}} />\n            </div>\n\n            {\n                openMenu && (\n                    <>\n                        <div className=\"custom-select__list\">\n                            {\n                                itemList.map(item => (\n                                    <div className=\"custom-select__item-field\" onClick={() => selectItem(item)} key={item.value}>{item.title}</div>\n                                ))\n                            }\n                        </div>\n\n                        {/* <div className=\"custom-select__overlay\" onClick={() => setOpenMenu(false)}></div> */}\n                    </>\n                )\n            }\n\n        </div>\n    )\n}","import React, { useState, useEffect } from 'react';\n\nimport \"./Pagination.scss\";\ninterface paginationInter {\n    structureList: {\n        currentPage: number,\n        currentVissible: any[],\n        pages: any[],\n        data: any[],\n        loaded: boolean,\n        onPage: number\n    },\n    setStructureList: any,\n    leftSpace: number,\n    rightSpace: number\n}\n\nexport const Pagination = ({ structureList, setStructureList, leftSpace = 2, rightSpace = 2 }: paginationInter) => {\n    const [paginationList, setPaginationList] = useState<any>([]);\n    const [limit, setLimit] = useState({\n        first: true,\n        last: false\n    })\n\n    const updatePagination = (page: any = null) => {\n        const { data, onPage } = structureList;\n\n        // without + 1 we recive leftSpace and rightSpace less on 1 the we get from props ;)\n        let leftStep = leftSpace + 1;\n        let rightStep = rightSpace + 1;\n\n        while (structureList.currentPage - leftStep <= 0) {\n            leftStep--;\n            rightStep++;\n        }\n\n        while (structureList.currentPage + rightStep > structureList.pages.length) {\n            leftStep++;\n            rightStep--\n        }\n\n        let space = [structureList.currentPage - leftStep, structureList.currentPage, structureList.currentPage + rightStep];\n\n        let i = 0;\n        let luft = [];\n\n        while ((structureList.currentPage + rightStep - i) - (structureList.currentPage - leftStep)) {\n            const newValue = structureList.currentPage - leftStep + i;\n            if (newValue > 0) {\n                luft.push(newValue)\n            }\n            i++;\n        }\n\n        luft[0] = 1;\n\n        // if (luft[0] !== structureList.pages.length) {\n        //     luft.push(structureList.pages.length);\n        // }\n\n        luft.push(structureList.pages.length);\n\n        if (luft[luft.length - 1] === 0 || luft[luft.length - 1] === luft[0]) {\n            luft.pop()\n        }\n\n        // console.log('luft: ', luft);\n        // console.log('page: ', page);\n\n\n\n\n        setPaginationList(luft);\n        if (page) {\n\n            // track esge pages, and add especial style for them\n            if (page === luft[luft.length - 1]) { // if current page is last\n                if (luft[0] !== page) { // if last page === first page\n                    setLimit({\n                        last: true,\n                        first: false\n                    })\n                } else { // if last page !== first page\n                    setLimit({\n                        last: true,\n                        first: true\n                    })\n                }\n            } else {\n                if (luft[0] === page) { // if last page === first page\n                    setLimit({\n                        last: false,\n                        first: true\n                    })\n                } else { // if last page !== first page\n                    setLimit({\n                        last: false,\n                        first: false\n                    })\n                }\n            }\n\n            setStructureList({\n                ...structureList,\n                currentPage: page,\n                currentVissible: data.slice((page! - 1) * onPage, onPage * page!)\n            })\n        }\n    }\n\n    useEffect(() => {\n        updatePagination()\n    }, [structureList])\n\n    // console.log('paginationList: ', paginationList);\n\n    const goPrevPage = () => {\n        const { currentPage } = structureList;\n        updatePagination(currentPage - 1)\n    }\n\n    const goNextPage = () => {\n        // console.log('structureList: ', structureList);\n\n        const { currentPage, pages } = structureList;\n        if (Number(pages[pages.length - 1]) >= currentPage + 1) {\n            updatePagination(currentPage + 1)\n        }\n\n    }\n\n    return (\n        structureList.data.length ? (\n            <div className=\"pagination\">\n                <div className={`pagination__buttons pagination__prev-button ${limit.first ? 'pagination__buttons--not-active' : ''}`} onClick={goPrevPage}>\n                    <img src={limit.first ? \"./icons/arrow.svg\" : \"./icons/arrow-black.svg\"} alt=\"arrow\" className=\"pagination__buttons-arrow pagination__buttons-arrow--prev\" />\n                </div>\n                {\n                    paginationList.map((page: number, index: number, list: any) => {\n                        const elem = (\n                            <div\n                                className={`small-text pagination__item ${page === structureList.currentPage ? 'pagination__item--selected' : ''}`}\n                                onClick={(event: any) => updatePagination(page)}\n                            >\n                                {page}\n                            </div>\n                        )\n                        if (index === 0 && page + 1 !== list[index + 1] && list.length > 1) {\n                            return (\n                                <>\n                                    {elem}\n                                    <div className=\"pagination__dots-wrapper\">\n                                        <div className=\"pagination__dot\"></div>\n                                        <div className=\"pagination__dot\"></div>\n                                        <div className=\"pagination__dot\"></div>\n                                        <div className=\"pagination__dot\"></div>\n                                    </div>\n                                </>\n                            )\n                        }\n\n                        if (index === list.length - 1 && list[list.length - 2] !== page - 1 && list.length > 1) {\n                            return (\n                                <>\n                                    <div className=\"pagination__dots-wrapper\">\n                                        <div className=\"pagination__dot\"></div>\n                                        <div className=\"pagination__dot\"></div>\n                                        <div className=\"pagination__dot\"></div>\n                                        <div className=\"pagination__dot\"></div>\n                                    </div>\n                                    {elem}\n                                </>\n                            )\n                        }\n                        return elem\n                    })\n                }\n                <div className={`pagination__buttons pagination__prev-button ${limit.last ? 'pagination__buttons--not-active' : ''}`} onClick={goNextPage}>\n                    <img src={limit.last ? \"./icons/arrow.svg\" : \"./icons/arrow-black.svg\"} alt=\"arrow\" className=\"pagination__buttons-arrow pagination__buttons-arrow--next\" />\n                </div>\n            </div>\n\n        ) : null\n\n    )\n}","import React, { ChangeEvent, useEffect, useState } from 'react';\nimport Header from '../../components/Header/Header';\n\nimport './PhonesPage.scss';\nimport { connect } from 'react-redux';\nimport { RootStateInterface } from '../../interfaces/rootStateInterface';\nimport { phones } from '../../store/actions'\nimport { phoneCardInterface, phoneListStateType } from '../../interfaces/phonesInterfaces';\nimport { DeviceCountType, DeviceScreenType } from '../../interfaces/appStateInterface';\nimport DeviceCardList from '../../components/DeviceCardList/DeviceCardList';\nimport SmallNavigation from '../../components/SmallNavigation/SmallNavigation';\nimport { Select } from '../../components/Select/Select';\nimport { Preloader } from '../../components/Preloader/Preloader';\nimport { Pagination } from '../../components/Pagination/Pagination';\nimport { phone } from '../../store/reducers/phones';\nimport Footer from '../../components/Footer/Footer';\n\nconst selectList = [\n    {\n        title: 'Rich',\n        value: 'rich'\n    },\n    {\n        title: 'Cheap',\n        value: 'cheap'\n    }\n]\n\nconst selectitemsOnPageList = [\n    {\n        title: '5',\n        value: 5\n    },\n    {\n        title: '10',\n        value: 10\n    },\n    {\n        title: '15',\n        value: 15\n    },\n    {\n        title: '25',\n        value: 25\n    },\n    {\n        title: '50',\n        value: 50\n    },\n]\n\nconst PhonesPage: React.FC<mainPropsInterfaces> = (props) => {\n    const {\n        phoneList, loadPhones,\n        setPhoneListState, phoneListState,\n        phoneLoadSuccss, deviceCount\n    } = props\n    const [searchField, setSearchField] = useState('');\n    const [noMathes, setNoMathces] = useState(false)\n    const [selectedSortValue, setSelectedSortValue] = useState({\n        title: 'Cheap',\n        value: 'cheap'\n    });\n\n    const [selectedItemsOnPAgeValue, setSelectedItemsOnPageValue] = useState({\n        title: '5',\n        value: 5\n    });\n\n    const [structureList, setStructureList] = useState<any>({\n        onPage: 16,\n        currentPage: 1,\n        pages: [],\n        data: [],\n        currentVissible: [],\n        loaded: false\n    })\n\n    useEffect(() => {\n        if (phoneList.length) {\n\n            setStructureList({\n                ...structureList,\n                // onPage: 5,\n                // currentPage: 1,\n                // pages: Array.from(Array(Math.ceil(phoneList.length / 5)).keys(), (_, i) => i + 1),\n                // data: phoneList,\n                // currentVissible: phoneList.slice(0, 5),\n                loaded: true\n            })\n        }\n    }, [phoneList])\n\n    // console.log(structureList.currentVissible);\n\n\n    const handlePageStructure = (value: number) => {\n        const { onPage, data } = structureList;\n\n        setStructureList({\n            ...structureList,\n            onPage: value,\n            pages: Array.from(Array(Math.ceil(phoneListState.visible.length / value)), (_, i) => i + 1),\n            currentVissible: phoneListState.visible.slice(0, value),\n            currentPage: 1,\n            data: phoneListState.visible\n        })\n    }\n\n    useEffect(() => {\n\n        if (phoneList.length) {\n            // console.log(structureList);\n            // console.log('phoneListState: ', phoneListState.visible);\n            // console.log('curentVisible: ', [...phoneListState.visible].slice(0, structureList.onPage));\n\n\n\n            setStructureList({\n                ...structureList,\n                data: phoneListState.visible,\n                pages: Array.from(Array(Math.ceil(phoneListState.visible.length / structureList.onPage)), (_, i) => i + 1),\n                currentVissible: [...phoneListState.visible].slice(0, structureList.onPage),\n                currentPage: 1,\n            })\n        }\n\n    }, [phoneListState])\n\n    useEffect(() => {\n        loadPhones();\n    }, []);\n\n    useEffect(() => {\n        handleSort(selectedSortValue.value);\n    }, [selectedSortValue])\n\n    const handleVisible = (event: ChangeEvent<HTMLInputElement>) => {\n        const { value } = event.target\n        setSearchField(value)\n\n        const filtered = [...phoneListState.sorted].filter(phone => phone.title.toLocaleLowerCase().includes(value.toLocaleLowerCase()));\n\n        if (filtered.length) {\n            setNoMathces(false)\n        } else {\n            setNoMathces(true)\n        }\n\n        setPhoneListState({\n            ...phoneListState,\n            visible: filtered,\n        })\n    }\n\n    const handleSort = (value: string) => {\n        // sort all items\n        const sortedList = [...phoneList].sort((a, b) => {\n            if (value === 'rich') {\n                return +b.price.current.slice(1,) - +a.price.current.slice(1,)\n            } else if (value === 'cheap') {\n                return +a.price.current.slice(1,) - +b.price.current.slice(1,)\n            } else {\n                return 1\n            }\n        });\n\n        // sort visible part\n        const sortedVisible = [...phoneListState.visible].sort((a, b) => {\n            if (value === 'rich') {\n                return +b.price.current.slice(1,) - +a.price.current.slice(1,)\n            } else if (value === 'cheap') {\n                return +a.price.current.slice(1,) - +b.price.current.slice(1,)\n            } else {\n                return 1\n            }\n        });\n\n        setPhoneListState({\n            ...phoneListState,\n            sorted: sortedList,\n            visible: sortedVisible,\n            currentSortedValue: value\n        })\n    }\n\n\n    useEffect(() => {\n        handlePageStructure(selectedItemsOnPAgeValue.value)\n        // console.log(selectedItemsOnPAgeValue);\n\n    }, [selectedItemsOnPAgeValue])\n\n    return (\n        <div className=\"phones-page page\">\n            <Header>\n                <input\n                    id=\"filter-field\"\n                    type=\"text\"\n                    value={searchField}\n                    onChange={handleVisible}\n                    className=\"filter-input--wrapper filter-input--search\"\n                    placeholder=\"Search in phones...\"\n                />\n            </Header>\n\n            <div className=\"main-limit content\">\n                <SmallNavigation params={[{ title: 'Phones', link: '/phones' }]} />\n                <p className=\"main-title page-name-title\">Mobile phones</p>\n                <p className=\"small-text models-count\">{\n                    structureList.loaded && structureList?.data?.length\n                        ? structureList.data.length\n                        : deviceCount.phones ?? <Preloader\n                            color=\"#89939A\"\n                            width=\"12\"\n                            height=\"12\"\n                            borderWidth=\"1\"\n                            wrapperWidth=\"12\"\n                            wrapperHeight=\"12\"\n                        />\n                } models</p>\n\n\n\n                <div className=\"phones-page__select-phones--wrapper\">\n                    <div>\n                        <p className=\"small-text models-count\"> Sort by</p>\n                        <Select itemList={selectList} setSelectedItem={setSelectedSortValue} selectedItem={selectedSortValue} />\n                    </div>\n\n                    <div>\n                        <p className=\"small-text models-count\"> Items on page</p>\n                        <Select\n                            itemList={selectitemsOnPageList}\n                            setSelectedItem={setSelectedItemsOnPageValue}\n                            selectedItem={selectedItemsOnPAgeValue}\n                            defaultSelectIndex={selectitemsOnPageList.findIndex((item) => item.value === structureList.onPage)}\n                            width={128}\n                        />\n                    </div>\n                </div>\n\n\n                <DeviceCardList deviceList={structureList.currentVissible} />\n\n                {\n                    noMathes && (\n                        <div className=\"empty-list--information\">\n                            <p className=\"uppaercase-text\" style={{ fontSize: 20, lineHeight: 'inherit' }}>\n                                Doesn't find any device\n                            </p>\n                        </div>\n                    )\n                }\n\n                <div className=\"phones-page__pagination-warpper\">\n                    <Pagination\n                        structureList={structureList}\n                        setStructureList={setStructureList}\n                        leftSpace={2}\n                        rightSpace={2}\n                    />\n                </div>\n            </div>\n            <Footer />\n        </div>\n    )\n}\n\ninterface mainPropsInterfaces {\n    deviceScreen: DeviceScreenType,\n    phoneList: phoneCardInterface[],\n    phoneListState: any,\n    deviceCount: DeviceCountType,\n    loadPhones: () => {},\n    setPhoneListState: (phoneListState: phoneListStateType) => {},\n    phoneLoadSuccss: (data: phoneCardInterface[]) => {}\n}\n\nconst mapStateToProps = (state: RootStateInterface, ownProps: any) => ({\n    deviceScreen: state.appState.deviceScreen,\n    phoneList: state.phone.phoneList,\n    phoneListState: state.phone.phoneListState,\n    phoneState: state.phone.phoneListState,\n    deviceCount: state.appState.deviceCount\n})\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    loadPhones: () => dispatch(phones.loadPhones()),\n    setPhoneListState: (phoneListState: phoneListStateType) => dispatch(phones.phoneListState(phoneListState)),\n    phoneLoadSuccss: (data: phoneCardInterface[]) => dispatch(phones.phoneSuccess(data))\n})\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PhonesPage)","import React from 'react';\nimport { Link, useHistory } from 'react-router-dom';\n\nimport \"./GoBack.scss\";\n\nconst GoBack: React.FC = () => {\n    let history = useHistory();\n\n    return (\n        <div className=\"go-back__navigation\">\n            <Link to=\"\" >\n                <img src=\"/icons/arrow-black.svg\" alt=\"go back icon\" />\n            </Link>\n            <p className=\"small-navigation__text go-back__text\" onClick={() => history.goBack()}>Back</p>\n        </div>\n    )\n}\n\nexport default GoBack","import React, { ChangeEvent, FC, useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport GoBack from '../../components/GoBack/GoBack';\nimport Header from '../../components/Header/Header';\nimport DeviceCardList from '../../components/DeviceCardList/DeviceCardList';\nimport SmallNavigation from '../../components/SmallNavigation/SmallNavigation';\nimport { RootStateInterface } from '../../interfaces/rootStateInterface';\n\nimport './FavoritePage.scss';\nimport Footer from '../../components/Footer/Footer';\n\ninterface FavoritePage {\n    favoriteDevices: any[]\n}\n\nconst FavoritePage: FC<FavoritePage> = ({ favoriteDevices }) => {\n    const [searchField, setSearchField] = useState('');\n    const [favoriteDeviceList, setFavoriteDeviceList] = useState<any>([])\n    const [noMathes, setNoMathces] = useState(false)\n\n\n    useEffect(() => {\n        setFavoriteDeviceList([...favoriteDevices].filter(device => device.title.toLocaleLowerCase().includes(searchField.toLocaleLowerCase())))\n    }, [favoriteDevices])\n\n\n    const handleVisible = (event: ChangeEvent<HTMLInputElement>) => {\n        const { value } = event.target\n        setSearchField(value)\n\n        const filtered = [...favoriteDevices].filter(device => device.title.toLocaleLowerCase().includes(value.toLocaleLowerCase()));\n        if (filtered.length) {\n            setNoMathces(false)\n        } else {\n            setNoMathces(true)\n        }\n\n        setFavoriteDeviceList(filtered)\n    }\n\n    return (\n        <div className=\"favorite-page page\">\n            <Header>\n                <input\n                    id=\"filter-field\"\n                    type=\"text\"\n                    value={searchField}\n                    onChange={handleVisible}\n                    className=\"filter-input--wrapper filter-input--search\"\n                    placeholder=\"Search in phones...\"\n                />\n            </Header>\n\n            <div className=\"main-limit content\">\n                {\n                    <SmallNavigation params={[{ title: 'Favorites', link: '/favorites' }]} />\n                }\n                <GoBack />\n                <p className=\"main-title\">Favorites</p>\n                {\n                    favoriteDeviceList.length\n                        ? <DeviceCardList deviceList={favoriteDeviceList} />\n                        : !noMathes && !favoriteDeviceList.length\n                            ? (\n                                <div className=\"empty-list--information\">\n                                    <p className=\"uppaercase-text\" style={{ fontSize: 20, lineHeight: 'inherit' }}>\n                                        You haven't added anything to your wishlist yet. When you enter some product from your wish list, it will be displayed here\n                                </p>\n                                </div>\n                            )\n                            : noMathes ? (\n                                <div className=\"empty-list--information\">\n                                    <p className=\"uppaercase-text\" style={{ fontSize: 20, lineHeight: 'inherit' }}>\n                                        Doesn't find any device\n                                </p>\n                                </div>\n                            ) : null\n                }\n\n            </div>\n            <Footer />\n        </div>\n    )\n}\n\nconst mapStateToProps = (state: RootStateInterface, ownProps: any) => ({\n    favoriteDevices: state.favoritesDevice.deviceList,\n    cartDeviceList: state.cartDeviceList.deviceList\n})\n\n\nexport default connect(mapStateToProps, null)(FavoritePage)","import React, { FC, useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport GoBack from '../../components/GoBack/GoBack';\nimport Header from '../../components/Header/Header';\nimport SmallNavigation from '../../components/SmallNavigation/SmallNavigation';\nimport { cartDevice } from '../../interfaces/cartDeviceList';\nimport { RootState } from '../../store/reducers';\nimport { cartDeviceList } from '../../store/actions';\n\nimport './CartPage.scss';\nimport Footer from '../../components/Footer/Footer';\n\ninterface cartPageInterface {\n    chartDeviceList: cartDevice[],\n    toggleCartDevice: (device: cartDevice) => void\n}\n\ninterface deviceCheckoutType extends cartDevice {\n    priceNumber: number;\n    count: number;\n};\n\nconst CartPage: FC<cartPageInterface> = ({ chartDeviceList, toggleCartDevice }) => {\n    const [checkoutDeviceList, setCheckoutDeviceList] = useState<any>([])\n    const [totalSum, setTotalSum] = useState(0);\n    const [deletedItemsId, setDeletedItemsId] = useState<string[]>([])\n\n    useEffect(() => {\n        if (!checkoutDeviceList.length) {\n            setCheckoutDeviceList(chartDeviceList.map((device: cartDevice) => ({\n                ...device,\n                priceNumber: Number(device.price.current.slice(1,)),\n                count: 1\n            })))\n        } else {\n            setCheckoutDeviceList(checkoutDeviceList.filter((device: any) => deletedItemsId.every((item: string) => item !== device._id)))\n        }\n    }, [chartDeviceList])\n\n    useEffect(() => {\n        let totalSuma = 0;\n\n        for (const item of checkoutDeviceList) {\n            totalSuma += item.priceNumber * item.count\n        }\n\n        setTotalSum(totalSuma)\n\n    }, [checkoutDeviceList])\n\n\n    const plusDevice = (id: string) => {\n        const newCheckoutDevice = checkoutDeviceList.map((device: deviceCheckoutType) => {\n            if (device._id === id) {\n                return {\n                    ...device,\n                    count: device.count + 1\n                }\n            }\n            return device\n        })\n\n        setCheckoutDeviceList(newCheckoutDevice)\n    }\n\n    const minusDevice = (id: string) => {\n        const newCheckoutDevice = checkoutDeviceList.map((device: deviceCheckoutType) => {\n            if (device._id === id) {\n                if (device.count - 1) {\n                    return {\n                        ...device,\n                        count: device.count - 1\n                    }\n                }\n                return device\n            }\n\n            return device\n        })\n        setCheckoutDeviceList(newCheckoutDevice)\n    }\n\n\n    // useEffect(() => {\n    //     console.log('checkoutDeviceList: ', checkoutDeviceList);\n    // }, [checkoutDeviceList])\n\n\n    const removeDeviceFromList = (id: string) => {\n        // now we have a bug\n        const mathcedDevice = checkoutDeviceList.find((device: cartDevice) => device._id === id);\n        setDeletedItemsId([...deletedItemsId, id])\n\n        // console.log('mathcedDevice: ', mathcedDevice);\n\n        toggleCartDevice(mathcedDevice!)\n    }\n\n    return (\n        <div className=\"page\">\n            <Header />\n            <div className=\"main-limit content\">\n                {\n                    <SmallNavigation params={[{ title: 'Cart', link: '/cart' }]} />\n                }\n                <GoBack />\n                <p className=\"main-title\">Cart</p>\n                {\n                    chartDeviceList.length\n                        ? (\n                            <div className=\"cart\">\n                                <div>\n                                    {\n                                        checkoutDeviceList.map((device: deviceCheckoutType) => (\n                                            <div className=\"cart-item\">\n                                                <div className=\"cart-item__preview\">\n                                                    <div className=\"cart-item__cross\" onClick={() => removeDeviceFromList(device._id)}>\n                                                        <img src=\"/icons/cross.svg\" className=\"cart-item__cross--icon\" />\n                                                    </div>\n                                                    <div className=\"cart-item__image-wrapper\">\n                                                        <img src={device.image} className=\"cart-item__image\" />\n                                                    </div>\n                                                    <div className=\"cart-item__title-wrapper\">\n                                                        <p className=\"cart-title--text\">{device.title}</p>\n                                                    </div>\n                                                </div>\n\n                                                <div className=\"cart-item__info\">\n                                                    <div className=\"cart-item__counter\">\n                                                        <div\n                                                            className=\"slider-buttons slider-buttons--not-active slider-buttons--cart\"\n                                                            onClick={() => minusDevice(device._id)}\n                                                        >\n                                                            -\n                                        </div>\n                                                        <p className=\"cart-item__count\">\n                                                            {device.count}\n                                                        </p>\n                                                        <div\n                                                            onClick={() => plusDevice(device._id)}\n                                                            className=\"slider-buttons slider-buttons--cart\"\n                                                        >\n                                                            +\n                                            </div>\n\n                                                    </div>\n\n                                                    <div className=\"cart-item__price-wrapper\">\n                                                        <p className=\"second-title cart-item__price\">{device.priceNumber * device.count} {device.price.current[0]}</p>\n                                                    </div>\n                                                </div>\n\n                                            </div>\n                                        ))\n                                    }\n                                </div>\n\n                                <div className=\"cart__checkout\">\n                                    <div className=\"cart__total\">\n                                        <p className=\"cart__total-price second-title\">{totalSum}</p>\n                                        <p className=\"cart__total-items small-text\">Total for {checkoutDeviceList.length} items</p>\n                                    </div>\n\n                                    <div className=\"cart__line\"></div>\n                                    <div className=\"cart__button-wrapper\">\n                                        <div className=\"button__add-cart--wrapper cart__button\">\n                                            <p style={{ margin: 0 }}>Ceckout</p>\n                                        </div>\n                                    </div>\n                                </div>\n\n                            </div>\n                        )\n                        : (\n                            <div className=\"empty-list--information\">\n                                <p className=\"uppaercase-text\" style={{ fontSize: 20, lineHeight: 'inherit' }}>\n                                    Нou haven’t added anything to the cart yet. When you add a product to the cart, it will be displayed here and you can make a purchase\n                            </p>\n                            </div>\n                        )\n                }\n            </div>\n            <Footer />\n        </div>\n    )\n}\n\nconst mapStateToProps = (state: RootState, ownProps: any) => ({\n    chartDeviceList: state.cartDeviceList.deviceList\n})\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    toggleCartDevice: (device: cartDevice) => dispatch(cartDeviceList.toggleCartDevice(device))\n})\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CartPage)","import React, { ChangeEvent, FC, useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport DeviceCardList from '../../components/DeviceCardList/DeviceCardList'\nimport Footer from '../../components/Footer/Footer'\nimport Header from '../../components/Header/Header'\nimport { Pagination } from '../../components/Pagination/Pagination'\nimport { Preloader } from '../../components/Preloader/Preloader'\nimport { Select } from '../../components/Select/Select'\nimport SmallNavigation from '../../components/SmallNavigation/SmallNavigation'\nimport { RootStateInterface } from '../../interfaces/rootStateInterface'\nimport { tabletCardInterface, tabletListStateType } from '../../interfaces/tabletStateInterface'\nimport { tablets } from '../../store/actions';\n\nconst selectList = [\n    {\n        title: 'Rich',\n        value: 'rich'\n    },\n    {\n        title: 'Cheap',\n        value: 'cheap'\n    }\n]\n\nconst selectitemsOnPageList = [\n    {\n        title: '5',\n        value: 5\n    },\n    {\n        title: '10',\n        value: 10\n    },\n    {\n        title: '15',\n        value: 15\n    },\n    {\n        title: '25',\n        value: 25\n    },\n    {\n        title: '50',\n        value: 50\n    },\n]\n\nconst TabletsPage: FC = ({ tabletList, tabletListState, loadTablets, setTabletListState, deviceCount }: any) => {\n    const [searchField, setSearchField] = useState('');\n    const [noMathes, setNoMathces] = useState(false)\n    const [selectedSortValue, setSelectedSortValue] = useState({\n        title: 'Cheap',\n        value: 'cheap'\n    });\n\n    const [selectedItemsOnPAgeValue, setSelectedItemsOnPageValue] = useState({\n        title: '5',\n        value: 5\n    });\n\n    const [structureList, setStructureList] = useState<any>({\n        onPage: 16,\n        currentPage: 1,\n        pages: [],\n        data: [],\n        currentVissible: [],\n        loaded: false\n    })\n\n    useEffect(() => {\n        if (tabletList.length) {\n\n            setStructureList({\n                ...structureList,\n                // onPage: 5,\n                // currentPage: 1,\n                // pages: Array.from(Array(Math.ceil(tabletList.length / 5)).keys(), (_, i) => i + 1),\n                // data: tabletList,\n                // currentVissible: tabletList.slice(0, 5),\n                loaded: true\n            })\n        }\n    }, [tabletList])\n\n    const handlePageStructure = (value: number) => {\n        // const { onPage, data } = structureList;\n\n        setStructureList({\n            ...structureList,\n            onPage: value,\n            pages: Array.from(Array(Math.ceil(tabletListState.visible.length / value)), (_, i) => i + 1),\n            currentVissible: tabletListState.visible.slice(0, value),\n            currentPage: 1,\n            data: tabletListState.visible\n        })\n    }\n\n    useEffect(() => {\n        if (tabletList.length) {\n            // console.log(structureList);\n            // console.log('tabletListState: ', tabletListState.visible);\n            // console.log('curentVisible: ', [...tabletListState.visible].slice(0, structureList.onPage));\n\n            setStructureList({\n                ...structureList,\n                data: tabletListState.visible,\n                pages: Array.from(Array(Math.ceil(tabletListState.visible.length / structureList.onPage)), (_, i) => i + 1),\n                currentVissible: [...tabletListState.visible].slice(0, structureList.onPage),\n                currentPage: 1,\n            })\n        }\n\n    }, [tabletListState])\n\n    useEffect(() => {\n        loadTablets();\n    }, []);\n\n    useEffect(() => {\n        handleSort(selectedSortValue.value);\n    }, [selectedSortValue])\n\n    const handleVisible = (event: ChangeEvent<HTMLInputElement>) => {\n        const { value } = event.target\n        setSearchField(value)\n\n        const filtered = [...tabletListState.sorted].filter(phone => phone.title.toLocaleLowerCase().includes(value.toLocaleLowerCase()));\n\n        if (filtered.length) {\n            setNoMathces(false)\n        } else {\n            setNoMathces(true)\n        }\n\n        setTabletListState({\n            ...tabletListState,\n            visible: filtered,\n        })\n    }\n\n    const handleSort = (value: string) => {\n        // sort all items\n        const sortedList = [...tabletList].sort((a, b) => {\n            if (value === 'rich') {\n                return +b.price.current.slice(1,) - +a.price.current.slice(1,)\n            } else if (value === 'cheap') {\n                return +a.price.current.slice(1,) - +b.price.current.slice(1,)\n            } else {\n                return 1\n            }\n        });\n\n        // sort visible part\n        const sortedVisible = [...tabletListState.visible].sort((a, b) => {\n            if (value === 'rich') {\n                return +b.price.current.slice(1,) - +a.price.current.slice(1,)\n            } else if (value === 'cheap') {\n                return +a.price.current.slice(1,) - +b.price.current.slice(1,)\n            } else {\n                return 1\n            }\n        });\n\n        setTabletListState({\n            ...tabletListState,\n            sorted: sortedList,\n            visible: sortedVisible,\n            currentSortedValue: value\n        })\n    }\n\n\n    useEffect(() => {\n        handlePageStructure(selectedItemsOnPAgeValue.value)\n        // console.log(selectedItemsOnPAgeValue);\n\n    }, [selectedItemsOnPAgeValue])\n\n    return (\n        <div className=\"tablets-page page\">\n            <Header>\n                <input\n                    id=\"filter-field\"\n                    type=\"text\"\n                    value={searchField}\n                    onChange={handleVisible}\n                    className=\"filter-input--wrapper filter-input--search\"\n                    placeholder=\"Search in phones...\"\n                />\n            </Header>\n\n            <div className=\"main-limit content\">\n                <SmallNavigation params={[{ title: 'Tablets', link: '/tablets' }]} />\n\n                <p className=\"main-title page-name-title\">Tablets</p>\n                <p className=\"small-text models-count\">{\n                    structureList.loaded && structureList?.data?.length\n                        ? structureList.data.length\n                        : deviceCount.tablets ?? <Preloader\n                            color=\"#89939A\"\n                            width=\"12\"\n                            height=\"12\"\n                            borderWidth=\"1\"\n                            wrapperWidth=\"12\"\n                            wrapperHeight=\"12\"\n                        />\n                } models</p>\n\n\n\n                <div className=\"phones-page__select-phones--wrapper\">\n                    <div>\n                        <p className=\"small-text models-count\"> Sort by</p>\n                        <Select itemList={selectList} setSelectedItem={setSelectedSortValue} selectedItem={selectedSortValue} />\n                    </div>\n\n                    <div>\n                        <p className=\"small-text models-count\"> Items on page</p>\n                        <Select\n                            itemList={selectitemsOnPageList}\n                            setSelectedItem={setSelectedItemsOnPageValue}\n                            selectedItem={selectedItemsOnPAgeValue}\n                            defaultSelectIndex={selectitemsOnPageList.findIndex((item) => item.value === structureList.onPage)}\n                            width={128}\n                        />\n                    </div>\n                </div>\n\n                <DeviceCardList deviceList={structureList.currentVissible} />\n\n                {\n                    noMathes && (\n                        <div className=\"empty-list--information\">\n                            <p className=\"uppaercase-text\" style={{ fontSize: 20, lineHeight: 'inherit' }}>\n                                Doesn't find any device\n                            </p>\n                        </div>\n                    )\n                }\n\n\n                <div className=\"phones-page__pagination-warpper\">\n                    <Pagination\n                        structureList={structureList}\n                        setStructureList={setStructureList}\n                        leftSpace={2}\n                        rightSpace={2}\n                    />\n                </div>\n            </div>\n            <Footer />\n        </div>\n\n    )\n}\n\nconst mapStateToProps = (state: RootStateInterface, ownProps: any) => ({\n    deviceScreen: state.appState.deviceScreen,\n    tabletList: state.tablet.tabletList,\n    tabletListState: state.tablet.tabletListState,\n    deviceCount: state.appState.deviceCount\n})\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    loadTablets: () => dispatch(tablets.loadTablets()),\n    setTabletListState: (tabletListState: tabletListStateType) => dispatch(tablets.tabletListState(tabletListState)),\n})\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TabletsPage)","import React, { FC } from 'react';\nimport Footer from '../../components/Footer/Footer';\nimport Header from '../../components/Header/Header';\nimport './NotFoundPage.scss'\n\nconst NotFoundPage: FC = () => {\n    return (\n        <div className=\"page not-found-page\">\n            <Header />\n\n            <div className=\"main-limit not-found-page--content\">\n                <h1>This page doesn't exist</h1>\n            </div>\n\n            <Footer />\n        </div>\n    )\n}\n\nexport default NotFoundPage","import React, { ChangeEvent, FC, useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport DeviceCardList from '../../components/DeviceCardList/DeviceCardList'\nimport Footer from '../../components/Footer/Footer'\nimport Header from '../../components/Header/Header'\nimport { Pagination } from '../../components/Pagination/Pagination'\nimport { Preloader } from '../../components/Preloader/Preloader'\nimport { Select } from '../../components/Select/Select'\nimport SmallNavigation from '../../components/SmallNavigation/SmallNavigation'\nimport { accessoriesListStateType } from '../../interfaces/accessoriesStateInterface'\nimport { RootStateInterface } from '../../interfaces/rootStateInterface'\nimport { tabletCardInterface, tabletListStateType } from '../../interfaces/tabletStateInterface'\nimport { accessories } from '../../store/actions';\n\nconst selectList = [\n    {\n        title: 'Rich',\n        value: 'rich'\n    },\n    {\n        title: 'Cheap',\n        value: 'cheap'\n    }\n]\n\nconst selectitemsOnPageList = [\n    {\n        title: '5',\n        value: 5\n    },\n    {\n        title: '10',\n        value: 10\n    },\n    {\n        title: '15',\n        value: 15\n    },\n    {\n        title: '25',\n        value: 25\n    },\n    {\n        title: '50',\n        value: 50\n    },\n]\n\nconst AccessoriesPage: FC = ({ accessoriesList, accessoriesListState, loadAccsseories, setAccessoriesListState, deviceCount }: any) => {\n    const [searchField, setSearchField] = useState('');\n    const [selectedSortValue, setSelectedSortValue] = useState({\n        title: 'Cheap',\n        value: 'cheap'\n    });\n\n    const [selectedItemsOnPAgeValue, setSelectedItemsOnPageValue] = useState({\n        title: '5',\n        value: 5\n    });\n\n    const [structureList, setStructureList] = useState<any>({\n        onPage: 16,\n        currentPage: 1,\n        pages: [],\n        data: [],\n        currentVissible: [],\n        loaded: false\n    })\n\n    useEffect(() => {\n        if (accessoriesList.length) {\n\n            setStructureList({\n                onPage: 5,\n                currentPage: 1,\n                pages: Array.from(Array(Math.ceil(accessoriesList.length / 5)).keys(), (_, i) => i + 1),\n                data: accessoriesList,\n                currentVissible: accessoriesList.slice(0, 5),\n                loaded: true\n            })\n        }\n    }, [accessoriesList])\n\n    const handlePageStructure = (value: number) => {\n        // const { onPage, data } = structureList;\n\n        setStructureList({\n            ...structureList,\n            onPage: value,\n            pages: Array.from(Array(Math.ceil(accessoriesListState.visible.length / value)), (_, i) => i + 1),\n            currentVissible: accessoriesListState.visible.slice(0, value),\n            currentPage: 1,\n            data: accessoriesListState.visible\n        })\n    }\n\n    useEffect(() => {\n        if (accessoriesList.length) {\n            // console.log(structureList);\n            // console.log('accessoriesListState: ', accessoriesListState.visible);\n            // console.log('curentVisible: ', [...accessoriesListState.visible].slice(0, structureList.onPage));\n\n            setStructureList({\n                ...structureList,\n                data: accessoriesListState.visible,\n                pages: Array.from(Array(Math.ceil(accessoriesListState.visible.length / structureList.onPage)), (_, i) => i + 1),\n                currentVissible: [...accessoriesListState.visible].slice(0, structureList.onPage),\n                currentPage: 1,\n            })\n        }\n\n    }, [accessoriesListState])\n\n    useEffect(() => {\n        loadAccsseories();\n    }, []);\n\n    useEffect(() => {\n        handleSort(selectedSortValue.value);\n    }, [selectedSortValue])\n\n    const handleVisible = (event: ChangeEvent<HTMLInputElement>) => {\n        const { value } = event.target\n        setSearchField(value)\n\n        const filtered = [...accessoriesListState.sorted].filter(phone => phone.title.toLocaleLowerCase().includes(value.toLocaleLowerCase()));\n\n        // console.log('filtered: ', filtered);\n\n        setAccessoriesListState({\n            ...accessoriesListState,\n            visible: filtered,\n        })\n    }\n\n    const handleSort = (value: string) => {\n        // sort all items\n        const sortedList = [...accessoriesList].sort((a, b) => {\n            if (value === 'rich') {\n                return +b.price.current.slice(1,) - +a.price.current.slice(1,)\n            } else if (value === 'cheap') {\n                return +a.price.current.slice(1,) - +b.price.current.slice(1,)\n            } else {\n                return 1\n            }\n        });\n\n        // sort visible part\n        const sortedVisible = [...accessoriesListState.visible].sort((a, b) => {\n            if (value === 'rich') {\n                return +b.price.current.slice(1,) - +a.price.current.slice(1,)\n            } else if (value === 'cheap') {\n                return +a.price.current.slice(1,) - +b.price.current.slice(1,)\n            } else {\n                return 1\n            }\n        });\n\n        setAccessoriesListState({\n            ...accessoriesListState,\n            sorted: sortedList,\n            visible: sortedVisible,\n            currentSortedValue: value\n        })\n    }\n\n\n    useEffect(() => {\n        handlePageStructure(selectedItemsOnPAgeValue.value)\n        // console.log(selectedItemsOnPAgeValue);\n\n    }, [selectedItemsOnPAgeValue])\n\n    return (\n        <div className=\"tablets-page page\">\n            <Header>\n                <input\n                    id=\"filter-field\"\n                    type=\"text\"\n                    value={searchField}\n                    onChange={handleVisible}\n                    className=\"filter-input--wrapper filter-input--search\"\n                    placeholder=\"Search in phones...\"\n                />\n            </Header>\n\n            <div className=\"main-limit\">\n                <SmallNavigation params={[{ title: 'Tablets', link: '/tablets' }]} />\n\n                <p className=\"main-title page-name-title\">Accessories</p>\n                <p className=\"small-text models-count\">{\n                    structureList.loaded && structureList?.data?.length\n                        ? structureList.data.length\n                        : deviceCount.tablets ?? <Preloader\n                            color=\"#89939A\"\n                            width=\"12\"\n                            height=\"12\"\n                            borderWidth=\"1\"\n                            wrapperWidth=\"12\"\n                            wrapperHeight=\"12\"\n                        />\n                } models</p>\n\n\n\n                <div className=\"phones-page__select-phones--wrapper\">\n                    <div>\n                        <p className=\"small-text models-count\"> Sort by</p>\n                        <Select itemList={selectList} setSelectedItem={setSelectedSortValue} selectedItem={selectedSortValue} />\n                    </div>\n\n                    <div>\n                        <p className=\"small-text models-count\"> Items on page</p>\n                        <Select\n                            itemList={selectitemsOnPageList}\n                            setSelectedItem={setSelectedItemsOnPageValue}\n                            selectedItem={selectedItemsOnPAgeValue}\n                            defaultSelectIndex={selectitemsOnPageList.findIndex((item) => item.value === structureList.onPage)}\n                            width={128}\n                        />\n                    </div>\n                </div>\n\n                <DeviceCardList deviceList={structureList.currentVissible} />\n\n                <div className=\"phones-page__pagination-warpper\">\n                    <Pagination\n                        structureList={structureList}\n                        setStructureList={setStructureList}\n                        leftSpace={2}\n                        rightSpace={2}\n                    />\n                </div>\n            </div>\n            <Footer />\n        </div>\n\n    )\n}\n\nconst mapStateToProps = (state: RootStateInterface, ownProps: any) => ({\n    deviceScreen: state.appState.deviceScreen,\n    accessoriesList: state.accessories.accessoriesList,\n    accessoriesListState: state.accessories.accessoriesListState,\n    deviceCount: state.appState.deviceCount\n})\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    loadAccsseories: () => dispatch(accessories.loadAccsseories()),\n    setAccessoriesListState: (accessoriesListState: accessoriesListStateType) => dispatch(accessories.accessoriesListState(accessoriesListState))\n})\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AccessoriesPage)","import React, { useEffect, useState } from 'react';\nimport { connect, useDispatch, useStore, useSelector } from 'react-redux';\nimport { accessories, phones, tablets } from '../../store/actions';\nimport { useParams, useLocation, useHistory } from 'react-router-dom'\nimport { RootState } from '../../store/reducers';\nimport { phoneCardInterface } from '../../interfaces/phonesInterfaces';\n\n\n\nimport \"./DeviceFullCard.scss\";\nimport { defaultConstatnts } from '../../constants/defaultConstants';\nimport Header from '../Header/Header';\nimport SmallNavigation from '../SmallNavigation/SmallNavigation';\nimport GoBack from '../GoBack/GoBack';\nimport { favoritesDevice, cartDeviceList } from '../../store/actions';\n\nimport { favoriteDevice } from '../../interfaces/favoriteDevice'\nimport { title } from 'process';\nimport { cartDevice } from '../../interfaces/cartDeviceList';\nimport { accessoriesCardInterface } from '../../interfaces/accessoriesStateInterface';\nimport { useHTTP } from '../../hooks/useHTTP.hook';\nimport Footer from '../Footer/Footer';\n\ntype params = {\n    model_name: string\n}\n\ninterface DeviceFullCardInterface {\n    toggleFavoriteDevice: (device: favoriteDevice) => {},\n    toggleCartDevice: (device: cartDevice) => void,\n    favoriteDevices: favoriteDevice[],\n    cartDeviceList: cartDevice[],\n}\n\n\n\nconst DeviceFullCard: React.FC<DeviceFullCardInterface> = (props) => {\n    const {\n        favoriteDevices,\n        toggleFavoriteDevice, toggleCartDevice,\n        cartDeviceList\n    } = props\n    const location = useLocation();\n    const history = useHistory();\n    const productType = location.pathname.match(/^\\/[\\w]+/gi)![0].slice(1,);\n\n\n\n    const { getReguest, loading: isLoading, error, data: currentModel }: any = useHTTP()\n\n\n    const [device, setDevice] = useState<any>(null);\n    const [addToFavotireList, setAddToFavoriteList] = useState<boolean | null>(null);\n    const [addToCartList, setAddToCartList] = useState<boolean | null>(null);\n\n    let params: params = useParams();\n\n    console.log('currentModel: ', currentModel);\n\n    useEffect(() => {\n        // getReguest(`/api/${productType}/item/?model_name=${params.model_name}`)\n        getReguest(`/api/${productType}/item/?model_name=${productType}/` + params.model_name)\n    }, [])\n\n\n\n\n    useEffect(() => {\n        const favorite = favoriteDevices.find((item: favoriteDevice) => item._id === currentModel?._id);\n\n        if (favorite) {\n            setAddToFavoriteList(true)\n        } else {\n            setAddToFavoriteList(false)\n        }\n    }, [favoriteDevices, currentModel])\n\n    useEffect(() => {\n        const cart = cartDeviceList.find((item: cartDevice) => item._id === currentModel?._id);\n\n        if (cart) {\n            setAddToCartList(true)\n        } else {\n            setAddToCartList(false)\n        }\n\n    }, [cartDeviceList, currentModel])\n\n\n    const handleToggleCartList = () => {\n        const cartDevice = {\n            _id: currentModel!._id,\n            price: {\n                old: currentModel!.price.old,\n                current: currentModel!.price.current\n            },\n            image: device.currentDevice.images.main,\n            title: currentModel!.title,\n            routePosition: currentModel!.routePosition,\n            deviceInfo: {\n                ...currentModel?.deviceInfo\n            },\n            about: device.abuot\n        }\n\n        toggleCartDevice(cartDevice)\n    }\n\n    useEffect(() => {\n        if (currentModel) {\n            setDevice({\n                ...currentModel,\n                currentDevice: {\n                    ...currentModel.availabelDevices[0],\n                    currentColor: currentModel.availabelColor[0],\n                    bigImage: currentModel.availabelDevices[0].images.main,\n                },\n\n            })\n        }\n    }, [currentModel])\n\n    return (\n        <div className=\"page\">\n            <Header />\n            <div className=\"main-limit\">\n                {\n                    device?.title ? <SmallNavigation params={[{ title: 'Accessories', link: '/accessories' }, { title: device.title, link: '' }]} /> : null\n                }\n                <GoBack />\n                {\n                    isLoading ? (\n                        <p>LOADING...</p>\n                    )\n                        : error ? <p>Error</p>\n                            : isLoading === false && !error && device ? (\n                                <div className=\"full-device\">\n                                    <p className=\"main-title\">{device.title}</p>\n\n                                    <div className=\"full-device__specifations\">\n\n                                        <div className=\"full-device__images-wrapper\">\n                                            <div className=\"full-device__small-image-list\">\n                                                {\n                                                    [device.currentDevice.images.main, ...device.currentDevice.images.other].map((image: string, index: number) => (\n                                                        <div\n                                                            className={`full-device__small-image ${image === device.currentDevice.bigImage ? \"full-device__small-image--active\" : \"\"}`}\n                                                            onClick={() => {\n                                                                const newDevice = { ...device, currentDevice: { ...device.currentDevice, bigImage: image } }\n                                                                setDevice(newDevice)\n                                                            }}\n                                                            key={image}\n                                                        >\n                                                            <img\n                                                                src={defaultConstatnts.domain + \"/\" + image}\n                                                                alt={device.title}\n                                                                className={`full-device__small-image--itself `}\n                                                            />\n                                                        </div>\n                                                    ))\n                                                }\n                                            </div>\n                                            <div className=\"full-device__big-image\">\n                                                <img\n                                                    src={defaultConstatnts.domain + \"/\" + device.currentDevice.bigImage}\n                                                    alt={device.title}\n                                                    className=\"full-device__big-image--itself\"\n                                                />\n                                            </div>\n                                        </div>\n\n                                        <div className=\"full-device__select-block\">\n                                            <div className=\"full-device__available-color-list__wrapper\">\n                                                <p className=\"card-specification__name full-device__select-titile\">Available colors</p>\n\n                                                <div className=\"full-device__available-color-list\">\n                                                    {\n                                                        device.availabelColor.map((color: string) => (\n                                                            <div\n                                                                className={`full-device__availabe-color-wrapper ${device.currentColor === color ? \"full-device__availabe-color-wrapper--selected\" : \"\"}`}\n                                                                key={color}\n                                                            >\n                                                                <div\n                                                                    className=\"full-device__availabe-color\"\n                                                                    style={{ backgroundColor: color }}\n                                                                    onClick={() => {\n                                                                        const newDeviceIndex = currentModel?.availabelDevices.findIndex((model: any) => model.color === color)\n\n                                                                        const newDevice = {\n                                                                            ...device, currentDevice: {\n                                                                                ...currentModel!.availabelDevices[newDeviceIndex!],\n                                                                                currentColor: currentModel!.availabelColor[newDeviceIndex!],\n                                                                                bigImage: currentModel!.availabelDevices[newDeviceIndex!].images.main,\n                                                                            }\n                                                                        }\n\n                                                                        setDevice(newDevice)\n                                                                    }}\n                                                                ></div>\n                                                            </div>\n                                                        ))\n                                                    }\n                                                </div>\n                                            </div>\n                                            <div className=\"full-device__separate-line\"></div>\n\n                                            <div className=\"phone-card__price full-device__price\">\n                                                <p className=\"phone-card__current-price full-device__current-price\">{currentModel?.price.current}</p>\n                                                <p className=\"phone-card__old-price\">{currentModel?.price.old}</p>\n                                            </div>\n\n                                            <div className=\"full-device__short-info\">\n                                                <div className=\"phone-card__button--wrapper full-device__button-wrapper\">\n                                                    <div\n                                                        className={`button__add-cart--wrapper phone-card__add-cart--wrapper ${addToCartList ? 'button__add-cart--active' : ''}`}\n                                                        onClick={handleToggleCartList}\n                                                    >\n                                                        <div className=\"button__add-cart--text\">Add to cart</div>\n                                                    </div>\n                                                    <div className=\"button__favorite--wrapper phone-card__favorite--wrapper\" onClick={() => toggleFavoriteDevice(currentModel!)}>\n                                                        <img\n                                                            src={`${addToFavotireList ? '/icons/heart-filed.svg' : '/icons/heart.svg'}`}\n                                                            alt=\"favorite\"\n                                                            className=\"button__favorite--icon\"\n                                                        />\n                                                    </div>\n                                                </div>\n\n                                                {/* <div className=\"card-specification--list\">\n                                                    <div className=\"card-specification--item\">\n                                                        <div className=\"card-specification__name\">Screen</div>\n                                                        <div className=\"card-specification__value\">{currentModel?.deviceInfo.screen}</div>\n                                                    </div>\n\n                                                    <div className=\"card-specification--item\">\n                                                        <div className=\"card-specification__name\">Processor</div>\n                                                        <div className=\"card-specification__value\">{currentModel?.deviceInfo.processor}</div>\n                                                    </div>\n\n                                                    <div className=\"card-specification--item\">\n                                                        <div className=\"card-specification__name\">Camera</div>\n                                                        <div className=\"card-specification__value\">{currentModel?.deviceInfo.camera}</div>\n                                                    </div>\n                                                </div> */}\n\n                                                {\n                                                    device.shortInfo && (\n                                                        <div className=\"card-specification--list\">\n                                                            {\n                                                                Object.entries(device.shortInfo).map((item: [string, any], index: number) => {\n                                                                    const [name, description] = item;\n\n                                                                    return (\n                                                                        <div className=\"card-specification--item\" key={name + index}>\n                                                                            <p className=\"card-specification__name\">{name}</p>\n                                                                            <p className=\"card-specification__value\">{description}</p>\n                                                                        </div>\n                                                                    )\n                                                                })\n                                                            }\n                                                        </div>\n                                                    )\n                                                }\n                                            </div>\n\n                                            <div className=\"full-device__id\">\n                                                <p className=\"card-specification__name\">ID: undefined</p>\n                                            </div>\n\n                                        </div>\n\n\n                                    </div>\n\n\n                                    <div className=\"full-device__description\">\n                                        <div className=\"full-device__summary\">\n                                            <p className=\"second-title full-device__second-title\">About</p>\n                                            <div className=\"full-device__separate-line\"></div>\n                                            {\n                                                device.about\n                                                    ? device.about.map((item: { title: string, description: string }, index: number) => (\n                                                        <div className=\"full-device__summary__paragraph\" key={title + index}>\n                                                            <p className=\"full-device__summary__title third-title\">{item.title}</p>\n                                                            <p className=\"full-device__summary__description body-text\">{item.description}</p>\n                                                        </div>\n                                                    ))\n                                                    : (\n                                                            <p className=\"full-device__summary__title third-title\">There aren't any description about this product, we add one in the near future</p>\n                                                    )\n\n\n                                            }\n                                        </div>\n                                        <div className=\"full-device__tech-sepcification\">\n                                            <p className=\"second-title full-device__second-title\">Tech specs</p>\n                                            <div className=\"full-device__separate-line\"></div>\n                                            <div className=\"full-device__tech-specifation__list\">\n                                                {\n                                                    Object.entries(device.deviceInfo).map((item: [string, any], index: number) => {\n                                                        const [name, description] = item;\n\n                                                        return (\n                                                            <div className=\"full-device__tech-sepcification__item\" key={name + index}>\n                                                                <p className=\"full-device__tech-sepcification__name card-specification__name\">{name}</p>\n                                                                <p className=\"full-device__tech-sepcification__description card-specification__value\">{description}</p>\n                                                            </div>\n                                                        )\n                                                    })\n\n                                                }\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                </div>\n                            ) : null\n                }\n            </div>\n            <Footer />\n        </div>\n    )\n}\n\nconst mapStateToProps = (state: RootState) => ({\n    // isLoading: state.accessories.isLoading,\n    // error: state.accessories.error,\n    // currentModel: state.accessories.currentModel,\n    favoriteDevices: state.favoritesDevice.deviceList,\n    cartDeviceList: state.cartDeviceList.deviceList\n})\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    toggleFavoriteDevice: (device: favoriteDevice) => dispatch(favoritesDevice.toggleFavoriteDevice(device)),\n    toggleCartDevice: (device: cartDevice) => dispatch(cartDeviceList.toggleCartDevice(device))\n\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DeviceFullCard)","import React, { useEffect } from 'react';\nimport { HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux'\nimport { useRoutes } from './routes';\nimport './App.scss';\n\nimport store from './store';\nimport { setDeviceScreen, loadDevicesCount } from './store/actions/appState';\nimport { setFavoriteDevices } from './store/actions/favoritesDevice';\nimport { setCartDeviceList } from './store/actions/cartDeviceList';\n\nfunction App() {\n  const routes = useRoutes(false);\n\n  // check device screen width\n  const checkDeviceSize = (event?: any) => {\n    const screenWidth = event ? event.currentTarget.innerWidth : window.innerWidth;\n\n    store.dispatch(setDeviceScreen({\n      value: screenWidth,\n      name: screenWidth > 0 && screenWidth <= 500\n        ? 'phone'\n        : screenWidth > 500 && screenWidth <= 900\n          ? 'tablet'\n          : 'desktop'\n    }))\n  }\n\n  useEffect(() => {\n    window.addEventListener('resize', checkDeviceSize);\n    checkDeviceSize();\n    store.dispatch(loadDevicesCount())\n\n    // add favoriteDevice from localStorage to redux\n    const favoriteDeviceLocalList = localStorage.getItem('@favotiteDeviceList') || JSON.stringify([]);\n    store.dispatch(setFavoriteDevices(JSON.parse(favoriteDeviceLocalList!)));\n\n    // add chartDeviceList from localStorage to redux\n    const cartDeviceLocalList = localStorage.getItem('@cartDeviceList') || JSON.stringify([]);\n\n    store.dispatch(setCartDeviceList(JSON.parse(cartDeviceLocalList!)));\n\n    return () => {\n      window.removeEventListener('resize', checkDeviceSize);\n    }\n  }, [])\n\n  return (\n    <Provider store={store}>\n        <div className=\"app\">\n          <HashRouter>\n            {routes}\n          </HashRouter>\n        </div>\n    </Provider>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n// import PhoneCardFull from './components/PhoneCardFull/PhoneCardFull';\nimport MainPage from './pages/MainPage/MainPage';\nimport PhonesPage from './pages/PhonesPage/PhonesPage';\nimport FavoritePage from './pages/FavoritesPage/FavoritePage';\nimport ChartPage from './pages/CartPage/CartPage';\nimport TabletsPage from './pages/TabletsPage/TabletsPage';\n// import TabletCardFull from './components/TabletCardFull/TabletCardFull';\nimport NotFoundPage from './pages/NotFoundPage/NotFoundPage';\nimport AccessoriesPage from './pages/AccessoriesPage/AccessoriesPage';\n// import AccessoriesFullCard from './components/AccessoriesFullCard/AccessoriesFullCard';\nimport DeviceFullCard from './components/DeviceFullCard/DeviceFullCard';\n\n\nexport const useRoutes = (isAuthentificated: boolean) => {\n\n    return (\n        <Switch>\n            <Route path=\"/\" exact>\n                <MainPage />\n            </Route>\n            <Route path=\"/phones\" exact>\n                <PhonesPage />\n            </Route>\n            <Route path=\"/tablets\" exact>\n                <TabletsPage />\n            </Route>\n\n            <Route path=\"/accessories\" exact>\n                <AccessoriesPage />\n            </Route>\n\n            <Route path=\"/phone/:model_name\" exact>\n                {/* <PhoneCardFull /> */}\n                <DeviceFullCard />\n            </Route>\n            <Route path=\"/tablet/:model_name\" exact>\n                {/* <TabletCardFull /> */}\n                <DeviceFullCard />\n            </Route>\n\n            <Route path=\"/accessories/:model_name\" exact>\n                {/* <AccessoriesFullCard /> */}\n                <DeviceFullCard />\n            </Route>\n            <Route path=\"/favorites\" exact>\n                <FavoritePage />\n            </Route>\n\n            <Route path=\"/cart\" exact>\n                <ChartPage />\n            </Route>\n\n            <Route>\n                <NotFoundPage />\n            </Route>\n        </Switch>\n    )\n}\n","import { ThunkAction } from 'redux-thunk';\nimport { Action } from 'redux'\nimport { request } from '../../api/request';\nimport { DEVICE_SCREEN, SET_DEVICES_COUNT } from '../../constants/actions';\nimport { AppStateActionTypes, DeviceScreenType, DeviceCountType } from '../../interfaces/appStateInterface';\nimport { RootStateInterface } from '../../interfaces/rootStateInterface';\n\nexport const setDeviceScreen = (payload: DeviceScreenType): AppStateActionTypes => ({\n    type: DEVICE_SCREEN,\n    payload\n})\n\nexport const setDevicesCount = (payload: DeviceCountType): AppStateActionTypes => ({\n    type: SET_DEVICES_COUNT,\n    payload\n})\n\nexport const loadDevicesCount = (): any => {\n    return async (dispatch: any) => {\n        const response = await request('/api/devices_count')\n\n        dispatch(setDevicesCount(response))\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport store from './store';\n\nimport App from './App';\n\nimport './index.scss';\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}